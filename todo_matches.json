[
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\autopep8.py",
    "line_number": 134,
    "line": "DEFAULT_IGNORE = 'E226,E24,W50,W690'    # TODO: use pycodestyle.DEFAULT_IGNORE"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy_extensions.py",
    "line_number": 149,
    "line": "# TODO: We may want to try to properly apply this to any type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 1020,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 3568,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\adodbapi\\adodbapi.py",
    "line_number": 636,
    "line": "                # TODO: Is this the correct defintion according to the DB API 2 Spec ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\adodbapi\\ado_consts.py",
    "line_number": 3,
    "line": "# TODO: Update to https://learn.microsoft.com/en-us/sql/ado/reference/ado-api/ado-enumerated-constants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\adodbapi\\ado_consts.py",
    "line_number": 83,
    "line": "# TODO: Update to https://learn.microsoft.com/en-us/sql/ado/reference/ado-api/datatypeenum"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\adodbapi\\apibase.py",
    "line_number": 281,
    "line": "threadsafety = 1  # TODO -- find out whether this module is actually BETTER than 1."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\asttokens\\asttokens.py",
    "line_number": 183,
    "line": "    # TODO: add test for multibyte unicode. We need to translate offsets from ast module (which"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\core.py",
    "line_number": 1304,
    "line": "    # TODO(3.0): always return a 5-tuple"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\dates.py",
    "line_number": 158,
    "line": "    # TODO (3.x): Add an assertion/type check for this fallthrough branch:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\dates.py",
    "line_number": 1331,
    "line": "    # TODO: try ISO format first?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\dates.py",
    "line_number": 1348,
    "line": "    # TODO: support time zones"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\dates.py",
    "line_number": 1636,
    "line": "        # TODO: To add support for O:1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\dates.py",
    "line_number": 1949,
    "line": "    # TODO: maybe implement pattern expansion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\lists.py",
    "line_number": 24,
    "line": "_DEFAULT_LOCALE = default_locale()  # TODO(3.0): Remove this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\lists.py",
    "line_number": 110,
    "line": "# TODO: It would likely be better to use the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\numbers.py",
    "line_number": 18,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\numbers.py",
    "line_number": 169,
    "line": "    currency: str,  # TODO: unused?!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\numbers.py",
    "line_number": 295,
    "line": "    # TODO: validate that the territory exists"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\numbers.py",
    "line_number": 1434,
    "line": "            # TODO (3.x?): Remove this parameter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\plural.py",
    "line_number": 76,
    "line": "    c = e = 0  # TODO: c and e are not supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\units.py",
    "line_number": 337,
    "line": "    # TODO: this doesn't support \"compound_variations\" (or \"prefix\"), and will fall back to the \"x/y\" representation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\util.py",
    "line_number": 253,
    "line": "# TODO (Babel 3.x): Remove this re-export"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\util.py",
    "line_number": 285,
    "line": "# TODO(3.0): remove these aliases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\localtime\\__init__.py",
    "line_number": 21,
    "line": "# TODO(3.0): the offset constants are not part of the public API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\messages\\extract.py",
    "line_number": 653,
    "line": "            # TODO: we could raise an error or warning when not all nodes are constants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\messages\\frontend.py",
    "line_number": 335,
    "line": "         'output file. Separate multiple TAGs with commas(,)'),  # TODO: Support repetition of this argument"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\messages\\frontend.py",
    "line_number": 340,
    "line": "         'files or directories with commas(,)'),  # TODO: Support repetition of this argument"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\babel\\messages\\frontend.py",
    "line_number": 341,
    "line": "        ('input-dirs=', None,  # TODO (3.x): Remove me."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\black\\linegen.py",
    "line_number": 536,
    "line": "        # TODO: Uncomment Implementation to format f-string children"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\black\\nodes.py",
    "line_number": 398,
    "line": "        # TODO: add fstring here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\black\\parsing.py",
    "line_number": 138,
    "line": "    # TODO: support Python 4+ ;)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\blib2to3\\pytree.py",
    "line_number": 675,
    "line": "        self.content = newcontent  # TODO: this is unbound when content is None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\blib2to3\\pgen2\\pgen.py",
    "line_number": 231,
    "line": "        todo = [start]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\blib2to3\\pgen2\\pgen.py",
    "line_number": 232,
    "line": "        for i, state in enumerate(todo):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\blib2to3\\pgen2\\pgen.py",
    "line_number": 235,
    "line": "                if next in todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\blib2to3\\pgen2\\pgen.py",
    "line_number": 236,
    "line": "                    j = todo.index(next)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\blib2to3\\pgen2\\pgen.py",
    "line_number": 238,
    "line": "                    j = len(todo)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\blib2to3\\pgen2\\pgen.py",
    "line_number": 239,
    "line": "                    todo.append(next)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\blib2to3\\pgen2\\tokenize.py",
    "line_number": 784,
    "line": "                    # TODO: unsure if this can be safely removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\charset_normalizer\\legacy.py",
    "line_number": 9,
    "line": "# TODO: remove this check when dropping Python 3.7 support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\click\\_termui_impl.py",
    "line_number": 485,
    "line": "    # TODO: This never terminates if the passed generator never terminates."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\coverage\\parser.py",
    "line_number": 654,
    "line": "# TODO: Shouldn't the cause messages join with \"and\" instead of \"or\"?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\coverage\\sysmon.py",
    "line_number": 210,
    "line": "        # TODO: should_start_context and switch_context are unused!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\coverage\\sysmon.py",
    "line_number": 216,
    "line": "        # TODO: warn is unused."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\CodeWriter.py",
    "line_number": 125,
    "line": "        # TODO: except, gil, etc."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\CodeWriter.py",
    "line_number": 168,
    "line": "        # TODO: visibility"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\CodeWriter.py",
    "line_number": 243,
    "line": "        # TODO: support cdef + cpdef functions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Coverage.py",
    "line_number": 163,
    "line": "        # TODO: let coverage.py handle .py files itself"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Build\\Dependencies.py",
    "line_number": 512,
    "line": "    # TODO: pure mode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Build\\Dependencies.py",
    "line_number": 1206,
    "line": "        # TODO: use m.name.isascii() in Py3.7+"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Build\\Dependencies.py",
    "line_number": 1254,
    "line": "# TODO: Share context? Issue: pyx processing leaks into pxd module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Build\\IpythonMagic.py",
    "line_number": 475,
    "line": "            # TODO: we could try to call \"[cmd] --version\" for better insights"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Builtin.py",
    "line_number": 378,
    "line": "        # TODO - format would be nice, but hard to get"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\CmdLine.py",
    "line_number": 14,
    "line": "    # TODO: This workaround can be removed in Cython 3.1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\CmdLine.py",
    "line_number": 162,
    "line": "    # TODO: add help"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Code.py",
    "line_number": 1559,
    "line": "                # TODO: Implement specific to type like CodeWriter.put_xdecref_clear()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Code.py",
    "line_number": 2254,
    "line": "        # TODO ideally this would just be merged into \"put_incref\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Code.py",
    "line_number": 2471,
    "line": "        # TODO this path is almost _never_ taken, yet this macro makes is slower!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\CythonScope.py",
    "line_number": 63,
    "line": "            # TODO: fix find_submodule control flow so that we're not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Dataclass.py",
    "line_number": 250,
    "line": "        # TODO - classvars aren't included in \"var_entries\" so are missed here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Dataclass.py",
    "line_number": 546,
    "line": "    # TODO - better diagnostics of whether the types support comparison before"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Dataclass.py",
    "line_number": 622,
    "line": "        # TODO ideally assignment of __hash__ to None shouldn't trigger this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Dataclass.py",
    "line_number": 672,
    "line": "        # (TODO: remove .string if we ditch PEP563)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Dataclass.py",
    "line_number": 723,
    "line": "        from .AutoDocTransforms import AnnotationWriter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Dataclass.py",
    "line_number": 762,
    "line": "                # TODO: do we need to set 'pytyping_modifiers' here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Dataclass.py",
    "line_number": 792,
    "line": "            # TODO - currently this isn't triggered"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 827,
    "line": "        # TODO ideally this would be shared with \"make_owned_reference\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 1088,
    "line": "            # TODO: Remove this hack and require shared declarations."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 1999,
    "line": "    lhs_of_first_assignment = False  # TODO: remove me"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 2129,
    "line": "                # TODO: this will need revising slightly if annotated cdef attributes are implemented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 3977,
    "line": "        # TODO: somehow bring this together with TemplatedTypeNode.analyse_pytyping_modifiers()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 4008,
    "line": "                # TODO: Handle buffers (hopefully without too much redundancy)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 4088,
    "line": "            # TODO: Handle buffers (hopefully without too much redundancy)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 4177,
    "line": "            # TODO: eventually fold into case below and remove warning, once people have adapted their code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 4656,
    "line": "        # TODO: should we do this generally on downcasts, or just here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 5114,
    "line": "            # TODO: fix SimpleCallNode.is_simple()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 5129,
    "line": "        # TODO Mark: this is insane, do it better"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 5905,
    "line": "        # TODO(robertwb): Reduce redundancy with analyse_types."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 5945,
    "line": "        # TODO: Update when Danilo's C++ code merged in to handle the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 6637,
    "line": "        # TODO may need to deal with unused variables in the #else case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 7426,
    "line": "                # TODO: search for submodule"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 7552,
    "line": "            # TODO: implement writable C-properties?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 8644,
    "line": "        # TODO: Infer non-object list arrays."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 8689,
    "line": "            # TODO(robertwb): Avoid object conversion for vector/list/set."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 9224,
    "line": "        # TODO: Infer struct constructors."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 9487,
    "line": "        # TODO: could return 'type' in some cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 9545,
    "line": "        # TODO: could return 'type' in some cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 9557,
    "line": "        from .AutoDocTransforms import AnnotationWriter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 9789,
    "line": "        # TODO: change CyFunction implementation to pass both function object and owning object for method calls"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 10008,
    "line": "            # TODO: this is mostly disabled because the attributes end up pointing to ones belonging"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 12081,
    "line": "        # TODO: we could also optimise the case of \"[...] * 2 * n\", i.e. with an existing 'mult_factor'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 12771,
    "line": "        # TODO: unwrap more coercion nodes?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 13008,
    "line": "        # TODO: Actually implement this (after merging with -unstable)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 13388,
    "line": "        # TODO: implement this for other types."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 13547,
    "line": "        # TODO: check if we can optimise parts of the cascade here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 13658,
    "line": "        # TODO: Actually implement this (after merging with -unstable)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 14296,
    "line": "        \"__Pyx_SoftComplexToDouble\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 14298,
    "line": "        utility_code = UtilityCode.load_cached(\"SoftComplexToDouble\", \"Complex.c\"),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 14571,
    "line": "            from .AutoDocTransforms import AnnotationWriter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 14725,
    "line": "                # TODO - once that's fixed general revisit this code and possibly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ExprNodes.py",
    "line_number": 14729,
    "line": "        # TODO - there's a missed optimization in the code generation stage"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\FlowControl.py",
    "line_number": 619,
    "line": "            # TODO: better cross-closure analysis to know when inner functions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\FlowControl.py",
    "line_number": 791,
    "line": "            if entry is None:  # TODO: This shouldn't happen..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\FlowControl.py",
    "line_number": 986,
    "line": "        # TODO: Remove redundancy with range optimization..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\FlowControl.py",
    "line_number": 1201,
    "line": "                # TODO: handle * pattern"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\FusedNode.py",
    "line_number": 232,
    "line": "                    # TODO might be nice if annotations were specialized instead?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\FusedNode.py",
    "line_number": 392,
    "line": "        TODO: separate buffer acquisition from format parsing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Main.py",
    "line_number": 764,
    "line": "            # TODO: IOError can be replaced with FileNotFoundError in Cython 3.1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ModuleNode.py",
    "line_number": 716,
    "line": "        # TODO: Why are these separated out?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ModuleNode.py",
    "line_number": 2807,
    "line": "        # TODO: Refactor to move module state struct decl closer to the static decl"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 1123,
    "line": "                    # TODO: probably not the best place to declare it?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 1341,
    "line": "        # TODO: somehow bring this together with IndexNode.analyse_pytyping_modifiers()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 2281,
    "line": "                # TODO: Fix exception tracing (though currently unused by cProfile)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 2733,
    "line": "            # TODO(robertwb): Finish this up, perhaps via more function refactoring."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 2800,
    "line": "            # TODO(robertwb): Support by passing self to check for override?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 3205,
    "line": "                # TODO: remove the need to generate a real decorator here, is_classmethod=True should suffice."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 3594,
    "line": "                    # TODO - at some point reference count of memoryviews should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 4973,
    "line": "        # TODO: remove the object dict version check by 'inlining' the getattr implementation for methods."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 5631,
    "line": "        # TODO: remove 'else:' and dedent"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 5824,
    "line": "                # TODO: find a way to make this work with the Limited API!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 6270,
    "line": "                # TODO: Factor out SliceIndexNode.generate_slice_guard_code() for use here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 6604,
    "line": "            # TODO: make sure overload is declared"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 8560,
    "line": "        # TODO: use code.label_interceptor()?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 8841,
    "line": "    # TODO: Consider a generic user-level mechanism for importing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 8849,
    "line": "    # TODO: Consider a generic user-level mechanism for importing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Nodes.py",
    "line_number": 10107,
    "line": "        # TODO: check if the step is 0 and if so, raise an exception in a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Optimize.py",
    "line_number": 692,
    "line": "            # TODO: can this safely be replaced with DereferenceNode() as above?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Optimize.py",
    "line_number": 2776,
    "line": "                # TODO - this currently doesn't work because the buffer fails a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Optimize.py",
    "line_number": 3085,
    "line": "        # TODO: optimizations of the instance.__class__() call might be possible in future."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Options.py",
    "line_number": 39,
    "line": "See https://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html#directive-autoattribute"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ParseTreeTransforms.py",
    "line_number": 760,
    "line": "    # TODO: Make name handling as good as in InterpretCompilerDirectives() below - probably best to merge the two."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ParseTreeTransforms.py",
    "line_number": 1730,
    "line": "                # TODO - could probably be optimized by making the arg a reference but the closure not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ParseTreeTransforms.py",
    "line_number": 2197,
    "line": "                # TODO(robertwb): We could allow this if __cinit__ has no require arguments."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ParseTreeTransforms.py",
    "line_number": 2203,
    "line": "                # TODO(robertwb): Limit the restriction to extern"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ParseTreeTransforms.py",
    "line_number": 2233,
    "line": "            # TODO(robertwb): Move the state into the third argument"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ParseTreeTransforms.py",
    "line_number": 2534,
    "line": "            # TODO: branch on visibility"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ParseTreeTransforms.py",
    "line_number": 2571,
    "line": "            # TODO: branch on visibility"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ParseTreeTransforms.py",
    "line_number": 2983,
    "line": "            # TODO: turn this into a \"with gil\" declaration."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\ParseTreeTransforms.py",
    "line_number": 3679,
    "line": "    TODO: a possible alternative would be to split ExprNode.result() into ExprNode.rhs_rhs() and ExprNode.lhs_rhs()???"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Parsing.py",
    "line_number": 550,
    "line": "    # TODO: implement a faster way to join tuples than creating each one and adding them"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Parsing.py",
    "line_number": 1184,
    "line": "    expr_pos = (pos[0], pos[1], pos[2] + starting_index + 2)  # TODO: find exact code position (concat, multi-line, ...)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Parsing.py",
    "line_number": 1248,
    "line": "    expr = p_testlist(scanner)  # TODO is testlist right here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Parsing.py",
    "line_number": 3194,
    "line": "                # TODO(github/1736): Make this an error for inline declarations."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Pipeline.py",
    "line_number": 159,
    "line": "    from .AutoDocTransforms import EmbedSignature"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\PyrexTypes.py",
    "line_number": 716,
    "line": "        # TODO drop when Python2 is dropped"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\PyrexTypes.py",
    "line_number": 1134,
    "line": "        # TODO ideally would be done separately"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\PyrexTypes.py",
    "line_number": 1470,
    "line": "            # generate a warning for it.  Big TODO: remove!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\PyrexTypes.py",
    "line_number": 1636,
    "line": "            # generate a warning for it.  Big TODO: remove!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\PyrexTypes.py",
    "line_number": 3699,
    "line": "        self.needs_type_test = False  # TODO: should these defaults be set in analyse_types()?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\PyrexTypes.py",
    "line_number": 4126,
    "line": "            # TODO: Allow typedefs in cpp classes and search for it in this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\PyrexTypes.py",
    "line_number": 4278,
    "line": "        # TODO: handle operator=(...) here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\PyrexTypes.py",
    "line_number": 4990,
    "line": "    # TODO: args should be a list of types, not a list of Nodes."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Symtab.py",
    "line_number": 170,
    "line": "    # TODO: utility_code and utility_code_definition serves the same purpose..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Symtab.py",
    "line_number": 908,
    "line": "                    # TODO: check that this was done by a signature optimisation and not a user error."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Symtab.py",
    "line_number": 1614,
    "line": "            # TODO(github/1736): Make this an error."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Symtab.py",
    "line_number": 1763,
    "line": "                # TODO - DW would like to make it public, but I'm making it internal-only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Symtab.py",
    "line_number": 2027,
    "line": "        # TODO: also ignore class scopes?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Symtab.py",
    "line_number": 2538,
    "line": "                        # TODO(robertwb): Make this an error."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\TreeFragment.py",
    "line_number": 215,
    "line": "    # TODO: Facilitate textwrap.indent instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\TypeInference.py",
    "line_number": 45,
    "line": "                # TODO: This shouldn't happen..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\TypeInference.py",
    "line_number": 103,
    "line": "        # TODO: Remove redundancy with range optimization..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\UFuncs.py",
    "line_number": 59,
    "line": "    # TODO possible NPY_BOOL to bint but it needs a cast?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\UFuncs.py",
    "line_number": 60,
    "line": "    # TODO NPY_DATETIME, NPY_TIMEDELTA, NPY_STRING, NPY_UNICODE and maybe NPY_VOID might be handleable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\UtilNodes.py",
    "line_number": 57,
    "line": "            # TODO: analyse control flow to see if this is necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Tests\\TestMemView.py",
    "line_number": 56,
    "line": "    def disable_test_no_buf_arg(self):  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Tests\\TestMemView.py",
    "line_number": 60,
    "line": "    def disable_test_parse_sizeof(self):  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Compiler\\Tests\\TestParseTreeTransforms.py",
    "line_number": 206,
    "line": "# TODO: Re-enable once they're more robust."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Debugger\\libpython.py",
    "line_number": 1408,
    "line": "    # TODO: repr() puts everything on one line; pformat can be nicer, but"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Tests\\TestJediTyper.py",
    "line_number": 224,
    "line": "        # TODO: validate directives"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\Cython\\Tests\\TestShadow.py",
    "line_number": 51,
    "line": "        # TODO it's unfortunately hard to get a definite list of types to confirm that they're"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
    "line_number": 1182,
    "line": "                    # TODO: Check -numweeks for next year."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 55,
    "line": "# TODO: pandas.core.tools.datetimes imports this explicitly.  Might be worth"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 265,
    "line": "                (\"Tue\", \"Tuesday\"),     # TODO: \"Tues\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 267,
    "line": "                (\"Thu\", \"Thursday\"),    # TODO: \"Thurs\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 272,
    "line": "              (\"Feb\", \"February\"),      # TODO: \"Febr\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 291,
    "line": "    # TODO: ERA = [\"AD\", \"BC\", \"CE\", \"BCE\", \"Stardate\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 777,
    "line": "                                # TODO: not hit in tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 815,
    "line": "                    # TODO: check that l[i + 1] is integer?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 823,
    "line": "                        min_offset = int(l[i + 3])  # TODO: Check that l[i+3] is minute-like?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 910,
    "line": "                # TODO: Check if res attributes already set."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 934,
    "line": "                # TODO: checking that hour/minute/second are not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 941,
    "line": "            value = self._to_decimal(tokens[idx + 2])  # TODO: try/except for this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 1032,
    "line": "            # TODO: Are we sure this is the right condition here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 1100,
    "line": "        # TODO: Every usage of this function sets res.second to the return"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 1112,
    "line": "        # TODO: Is this going to admit a lot of false-positives for when we"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py",
    "line_number": 25,
    "line": "    except IOError as e:  # TODO  switch to FileNotFoundError?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py",
    "line_number": 76,
    "line": "# TODO: Remove after deprecation period."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\common\\messaging.py",
    "line_number": 95,
    "line": "        # TODO: investigate switching to buffered sockets; readline() on unbuffered"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\server\\api.py",
    "line_number": 21,
    "line": "# TODO: \"gevent\", if possible."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\_util.py",
    "line_number": 56,
    "line": "            # TODO: Use os.path.isfile() to narrow it down?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\__init__.py",
    "line_number": 14,
    "line": "# TODO: Move the \"pydevd\" git submodule to the debugpy/_vendored directory"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\__init__.py",
    "line_number": 22,
    "line": "    # TODO: Derive from os.listdir(VENDORED_ROOT)?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\__init__.py",
    "line_number": 58,
    "line": "    # TODO: Use default filters?  __pycache__ and .pyc?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
    "line_number": 532,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
    "line_number": 635,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
    "line_number": 1006,
    "line": "# TODO: an API to modify the hooked function's arguments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
    "line_number": 3449,
    "line": "        # TODO: examine the stack trace to figure out if it's really a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
    "line_number": 4145,
    "line": "        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
    "line_number": 4559,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\crash.py",
    "line_number": 630,
    "line": "        # TODO: maybe add names and versions of DLLs and EXE?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\crash.py",
    "line_number": 709,
    "line": "        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\crash.py",
    "line_number": 853,
    "line": "        # XXX TODO add rule to check if code is in writeable memory (probably exploitable)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\crash.py",
    "line_number": 855,
    "line": "        # XXX TODO maybe we should be returning a list of tuples instead?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\crash.py",
    "line_number": 1446,
    "line": "            # TODO: lock the database when iterating it."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\debug.py",
    "line_number": 73,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\debug.py",
    "line_number": 194,
    "line": "    # TODO: maybe custom __bool__ to break out of loop() ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\debug.py",
    "line_number": 951,
    "line": "            # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\disasm.py",
    "line_number": 622,
    "line": "# TODO: use a lock to access __decoder"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\disasm.py",
    "line_number": 623,
    "line": "# TODO: look in sys.modules for whichever disassembler is already loaded"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\event.py",
    "line_number": 812,
    "line": "        # TODO try to calculate the real value when ASLR is active."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\event.py",
    "line_number": 859,
    "line": "                # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\event.py",
    "line_number": 1400,
    "line": "        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\event.py",
    "line_number": 1483,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 51,
    "line": "# TODO document this module with docstrings."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 52,
    "line": "# TODO command to set a last error breakpoint."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 53,
    "line": "# TODO command to show available plugins."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 277,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 449,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 885,
    "line": "    # TODO: Perhaps pfind.py can be integrated here instead."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 1463,
    "line": "    # TODO: create hidden threads using undocumented API calls."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 1475,
    "line": "    # TODO: modunload"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 1482,
    "line": "        if arg:  # XXX TODO add depth parameter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 1866,
    "line": "        # TODO: need a prettier output here!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 1971,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 2050,
    "line": "        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 2058,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 2078,
    "line": "        if arg:  # TODO: take min and max addresses"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\interactive.py",
    "line_number": 2095,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\module.py",
    "line_number": 783,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\module.py",
    "line_number": 1114,
    "line": "        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\module.py",
    "line_number": 1372,
    "line": "            # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\process.py",
    "line_number": 74,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\process.py",
    "line_number": 770,
    "line": "    # TODO: get_os, to test compatibility run"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\process.py",
    "line_number": 1541,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\process.py",
    "line_number": 1885,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\process.py",
    "line_number": 1973,
    "line": "        # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\process.py",
    "line_number": 2379,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\process.py",
    "line_number": 3498,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\process.py",
    "line_number": 3907,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\registry.py",
    "line_number": 362,
    "line": "# TODO: possibly cache the RegistryKey objects"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\registry.py",
    "line_number": 370,
    "line": "# TODO: support for access flags?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\registry.py",
    "line_number": 371,
    "line": "# TODO: should be possible to disable the safety checks (see __delitem__)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\registry.py",
    "line_number": 373,
    "line": "# TODO: workaround for an API bug described by a user in MSDN"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\search.py",
    "line_number": 432,
    "line": "    # TODO: aligned searches"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\search.py",
    "line_number": 433,
    "line": "    # TODO: method to coalesce search results"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\search.py",
    "line_number": 434,
    "line": "    # TODO: search memory dumps"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\search.py",
    "line_number": 435,
    "line": "    # TODO: search non-ascii C strings"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\sql.py",
    "line_number": 157,
    "line": "# TODO: if using mssql, check it's at least SQL Server 2005"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\sql.py",
    "line_number": 159,
    "line": "# TODO: if using mysql, check it's at least MySQL 5.0.3"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\sql.py",
    "line_number": 161,
    "line": "# TODO: maybe in mysql check the tables are not myisam?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\sql.py",
    "line_number": 162,
    "line": "# TODO: maybe create the database if it doesn't exist?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\sql.py",
    "line_number": 163,
    "line": "# TODO: maybe add a method to compact the database?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\sql.py",
    "line_number": 282,
    "line": "        # TODO: create a dialect specific index on the \"signature\" column."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\sql.py",
    "line_number": 728,
    "line": "# TODO: add a method to modify already stored crash dumps."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\system.py",
    "line_number": 1227,
    "line": "    # TODO: create_service, delete_service"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\textio.py",
    "line_number": 834,
    "line": "# TODO: implement an ANSI parser to simplify using colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\textio.py",
    "line_number": 1069,
    "line": "# TODO: another class for ASCII boxes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\textio.py",
    "line_number": 1461,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\thread.py",
    "line_number": 59,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\thread.py",
    "line_number": 220,
    "line": "                    # XXX TODO find the real ntdll call under this api"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\thread.py",
    "line_number": 387,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\thread.py",
    "line_number": 448,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\thread.py",
    "line_number": 464,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\thread.py",
    "line_number": 627,
    "line": "    # TODO: a metaclass would do a better job instead of checking the platform"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\thread.py",
    "line_number": 1074,
    "line": "        # TODO use teb.DeallocationStack too (max. possible stack size)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\thread.py",
    "line_number": 1546,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\thread.py",
    "line_number": 1573,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\thread.py",
    "line_number": 1858,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\thread.py",
    "line_number": 1905,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\util.py",
    "line_number": 298,
    "line": "        # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\window.py",
    "line_number": 53,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\window.py",
    "line_number": 57,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\window.py",
    "line_number": 367,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\advapi32.py",
    "line_number": 40,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\advapi32.py",
    "line_number": 679,
    "line": "    # TODO: __repr__"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\advapi32.py",
    "line_number": 1726,
    "line": "        return TokenInformation  # TODO add a class wrapper?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\advapi32.py",
    "line_number": 1753,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\advapi32.py",
    "line_number": 2198,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\advapi32.py",
    "line_number": 2345,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\advapi32.py",
    "line_number": 2593,
    "line": "    # TODO: improve detection of DWORD and QWORD by seeing if the value \"fits\"."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\advapi32.py",
    "line_number": 2715,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\advapi32.py",
    "line_number": 2832,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\advapi32.py",
    "line_number": 2843,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\advapi32.py",
    "line_number": 2853,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\context_amd64.py",
    "line_number": 441,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\context_amd64.py",
    "line_number": 769,
    "line": "# XXX TODO Use this http://www.nynaeve.net/Code/GetThreadWow64Context.cpp"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\dbghelp.py",
    "line_number": 890,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\dbghelp.py",
    "line_number": 1097,
    "line": "# TODO: check for the 'W' version of SymGetSymFromAddr64()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\defines.py",
    "line_number": 35,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\defines.py",
    "line_number": 512,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\defines.py",
    "line_number": 567,
    "line": "# TODO maybe add more error codes?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 126,
    "line": "# TODO I couldn't find these constants :("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 1198,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 2328,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 2377,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 2416,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 2462,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 2499,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 2506,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 2512,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 2518,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 2524,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 3248,
    "line": "    # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 3709,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 3717,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\kernel32.py",
    "line_number": 3770,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\ntdll.py",
    "line_number": 372,
    "line": "# ULONG WINAPI RtlNtStatusToDosError("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\ntdll.py",
    "line_number": 375,
    "line": "def RtlNtStatusToDosError(Status):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\ntdll.py",
    "line_number": 376,
    "line": "    _RtlNtStatusToDosError = windll.ntdll.RtlNtStatusToDosError"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\ntdll.py",
    "line_number": 377,
    "line": "    _RtlNtStatusToDosError.argtypes = [NTSTATUS]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\ntdll.py",
    "line_number": 378,
    "line": "    _RtlNtStatusToDosError.restype = ULONG"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\ntdll.py",
    "line_number": 379,
    "line": "    return _RtlNtStatusToDosError(Status)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\ntdll.py",
    "line_number": 422,
    "line": "            raise ctypes.WinError(RtlNtStatusToDosError(ntstatus))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\ntdll.py",
    "line_number": 431,
    "line": "        raise ctypes.WinError(RtlNtStatusToDosError(ntstatus))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\ntdll.py",
    "line_number": 474,
    "line": "        raise ctypes.WinError(RtlNtStatusToDosError(ntstatus))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\ntdll.py",
    "line_number": 529,
    "line": "        raise ctypes.WinError(RtlNtStatusToDosError(ntstatus))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\ntdll.py",
    "line_number": 559,
    "line": "        raise ctypes.WinError(RtlNtStatusToDosError(ntstatus))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\peb_teb.py",
    "line_number": 231,
    "line": "        # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\shell32.py",
    "line_number": 35,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\wtsapi32.py",
    "line_number": 199,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\wtsapi32.py",
    "line_number": 223,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\wtsapi32.py",
    "line_number": 242,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\wtsapi32.py",
    "line_number": 249,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\win32\\wtsapi32.py",
    "line_number": 319,
    "line": "# XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_constants.py",
    "line_number": 185,
    "line": "TODO_PY313_OR_GREATER = IS_PY313_OR_GREATER"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_frame.py",
    "line_number": 358,
    "line": "            # TODO: This shouldn't be needed. The fact that frame.f_lineno"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_process_net_command.py",
    "line_number": 531,
    "line": "                        notify_on_user_unhandled_exceptions=False,  # TODO (not currently supported in this API)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_process_net_command.py",
    "line_number": 640,
    "line": "                notify_on_user_unhandled_exceptions=0,  # TODO (not currently supported in this API)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_process_net_command_json.py",
    "line_number": 793,
    "line": "        # TODO: Path is optional here it could be source reference."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_process_net_command_json.py",
    "line_number": 1266,
    "line": "        # TODO: Support other common settings. Note that not all of these might be relevant to python."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_runpy.py",
    "line_number": 100,
    "line": "# TODO: Replace these helpers with importlib._bootstrap_external functions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_xml.py",
    "line_number": 402,
    "line": "        name = quote(name, \"/>_= \")  # TODO: Fix PY-5834 without using quote"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_concurrency_analyser\\pydevd_thread_wrappers.py",
    "line_number": 72,
    "line": "    # TODO: add wrappers for thread and _thread"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_sys_monitoring\\_pydevd_sys_monitoring.py",
    "line_number": 898,
    "line": "            # TODO: Check: this may no longer be needed as in the unwind we know it's"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_bundle\\pydev_ipython_console_011.py",
    "line_number": 1,
    "line": "# TODO that would make IPython integration better"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_bundle\\pydev_ipython_console_011.py",
    "line_number": 115,
    "line": "    # TODO term_title: (can PyDev's title be changed???, see terminal.py for where to inject code, in particular set_term_title as used by %cd)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_bundle\\pydev_ipython_console_011.py",
    "line_number": 129,
    "line": "    # TODO It would be nice to enable colors in PyDev but:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_bundle\\pydev_ipython_console_011.py",
    "line_number": 299,
    "line": "        # TODO PyDev's console does not have support from the Python side to exit"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_bundle\\pydev_ipython_console_011.py",
    "line_number": 327,
    "line": "        # TODO Any additional magics for PyDev?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_bundle\\pydev_localhost.py",
    "line_number": 18,
    "line": "    # TODO: Needs better investigation!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_bundle\\pydev_monkey.py",
    "line_number": 698,
    "line": "    pass  # TODO: Provide logging as messages to the IDE."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_runfiles\\pydev_runfiles_parallel.py",
    "line_number": 233,
    "line": "            # TODO: Support Jython:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\database.py",
    "line_number": 1278,
    "line": "    todo = graph.reverse_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\database.py",
    "line_number": 1280,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\database.py",
    "line_number": 1281,
    "line": "        d = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\database.py",
    "line_number": 1285,
    "line": "                todo.append(succ)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\database.py",
    "line_number": 1305,
    "line": "    todo = graph.adjacency_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\database.py",
    "line_number": 1306,
    "line": "    seen = set(t[0] for t in todo)  # already added to todo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\database.py",
    "line_number": 1308,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\database.py",
    "line_number": 1309,
    "line": "        d = todo.pop()[0]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\database.py",
    "line_number": 1316,
    "line": "                todo.append(pred)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\locators.py",
    "line_number": 760,
    "line": "        XXX TODO Note: this cache is never actually cleared. It's assumed that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\locators.py",
    "line_number": 922,
    "line": "                # TODO SHA256 digest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\locators.py",
    "line_number": 1237,
    "line": "        todo = set([dist])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\locators.py",
    "line_number": 1239,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\locators.py",
    "line_number": 1240,
    "line": "            dist = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\locators.py",
    "line_number": 1274,
    "line": "                            todo.add(provider)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\metadata.py",
    "line_number": 239,
    "line": "    # TODO document the mapping API and UNKNOWN default key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\metadata.py",
    "line_number": 560,
    "line": "    # TODO could add iter* variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\metadata.py",
    "line_number": 984,
    "line": "        # TODO: any other fields wanted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\resources.py",
    "line_number": 190,
    "line": "            todo = [resource]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\resources.py",
    "line_number": 191,
    "line": "            while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\resources.py",
    "line_number": 192,
    "line": "                resource = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\resources.py",
    "line_number": 203,
    "line": "                            todo.append(child)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\util.py",
    "line_number": 401,
    "line": "        # TODO check k, v for valid values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\util.py",
    "line_number": 1131,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\util.py",
    "line_number": 1133,
    "line": "        todo.append(final)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\util.py",
    "line_number": 1134,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\util.py",
    "line_number": 1135,
    "line": "            step = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\util.py",
    "line_number": 1149,
    "line": "                todo.extend(preds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\version.py",
    "line_number": 267,
    "line": "        TODO: fill this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\version.py",
    "line_number": 516,
    "line": "    # TODO: unintended side-effect on, e.g., \"2003.05.09\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\distlib\\wheel.py",
    "line_number": 839,
    "line": "            # TODO version verification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\core.py",
    "line_number": 371,
    "line": "# TODO: or not to do?  cf. https://clig.dev/#help"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\frontend.py",
    "line_number": 317,
    "line": "        # TODO: warn/info?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\io.py",
    "line_number": 25,
    "line": "# TODO: check whether this is set correctly with every OS and Python version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\io.py",
    "line_number": 389,
    "line": "            # TODO: re-open, warn or raise error?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\nodes.py",
    "line_number": 1126,
    "line": "# TODO: PureTextElement(TextElement):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\nodes.py",
    "line_number": 1367,
    "line": "            # TODO: normalize id-prefix? (would make code simpler)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\nodes.py",
    "line_number": 1374,
    "line": "                # TODO: remove second condition after announcing change"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\__init__.py",
    "line_number": 143,
    "line": "    # TODO: replace settings_specs with a new data structure"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\languages\\__init__.py",
    "line_number": 32,
    "line": "    # TODO: use a dummy module returning empty strings?, configurable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\parsers\\rst\\roles.py",
    "line_number": 415,
    "line": "    # TODO: Change use in directives.py and uncomment."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\parsers\\rst\\states.py",
    "line_number": 1592,
    "line": "        # TODO: prepend class value ['pycon'] (Python Console)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\parsers\\rst\\states.py",
    "line_number": 2777,
    "line": "            # TODO: why is abs_line_number() == srcline+1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\parsers\\rst\\states.py",
    "line_number": 2864,
    "line": "        # TODO: drop a definition if it is an empty comment to allow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\parsers\\rst\\directives\\body.py",
    "line_number": 198,
    "line": "                   # TODO: Add Sphinx' ``mathbase.py`` option 'nowrap'?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\parsers\\rst\\directives\\images.py",
    "line_number": 144,
    "line": "                    pass  # TODO: warn/info?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\parsers\\rst\\directives\\misc.py",
    "line_number": 273,
    "line": "                # TODO: currently, raw input files are recorded as"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\parsers\\rst\\directives\\tables.py",
    "line_number": 103,
    "line": "                # TODO: use last value for missing columns?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\transforms\\components.py",
    "line_number": 39,
    "line": "    # TODO: clean up or keep this for 3rd party (or possible future) use?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\transforms\\references.py",
    "line_number": 751,
    "line": "                    # Test with docs/dev/todo.txt, see. |donate|"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\smartquotes.py",
    "line_number": 692,
    "line": "    # TODO: example (when does this match?)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\smartquotes.py",
    "line_number": 707,
    "line": "    if language.startswith('en'):  # TODO similar cases in other languages?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\smartquotes.py",
    "line_number": 716,
    "line": "    # TODO: keep track of quoting level to recognize apostrophe in, e.g.,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\smartquotes.py",
    "line_number": 939,
    "line": "    # TODO: require input arg or other means to print USAGE instead of waiting."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\__init__.py",
    "line_number": 350,
    "line": "    # TODO: is this still required with Python 3?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\__init__.py",
    "line_number": 673,
    "line": "    # TODO: account for asian wide chars here instead of using dummy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\latex2mathml.py",
    "line_number": 592,
    "line": "            # TODO: append as <mi>?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\latex2mathml.py",
    "line_number": 639,
    "line": "def handle_cmd(name, node, string):  # noqa: C901 TODO make this less complex"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\latex2mathml.py",
    "line_number": 680,
    "line": "            # TODO: \\operatorname* -> with limits"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\latex2mathml.py",
    "line_number": 1079,
    "line": "        # TODO: array, aligned & alignedat take an optional [t], [b], or [c]."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\latex2mathml.py",
    "line_number": 1216,
    "line": "# TODO: look up more symbols from tr25, e.g."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\math2html.py",
    "line_number": 155,
    "line": "                   # TODO: 2-row brackets with ⎰⎱ (\\lmoustache \\rmoustache)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\math2html.py",
    "line_number": 273,
    "line": "    cmddict.update(tex2unichar.mathbin)  # TODO: spacing around binary operators"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\math2html.py",
    "line_number": 379,
    "line": "        # TODO: convert 1 mu to 1/18 em"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\math2html.py",
    "line_number": 388,
    "line": "        # TODO: increase √-size with argument (\\frac in display mode, ...)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\math2html.py",
    "line_number": 437,
    "line": "        # TODO: move to commands?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\math2html.py",
    "line_number": 2300,
    "line": "            # TODO: use italic, like in MathML and \"iso\" math-style?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\math2html.py",
    "line_number": 2358,
    "line": "    # TODO: keep letters italic with \\boldsymbol."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\utils\\math\\math2html.py",
    "line_number": 2755,
    "line": "        # TODO: check for \\limits macro"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\docutils_xml.py",
    "line_number": 36,
    "line": "          ['--indents'],  # TODO use integer value for number of spaces?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\docutils_xml.py",
    "line_number": 67,
    "line": "    # TODO: add stylesheet options similar to HTML and LaTeX writers?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\docutils_xml.py",
    "line_number": 94,
    "line": "            self.indent = '    '  # TODO make this configurable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\manpage.py",
    "line_number": 169,
    "line": "    # TODO add \"from docutils 0.21rc1.\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\manpage.py",
    "line_number": 348,
    "line": "                # TODO add prefix postfix"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\manpage.py",
    "line_number": 806,
    "line": "            # TODO: separate inline blocks from previous paragraphs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\manpage.py",
    "line_number": 1013,
    "line": "        #TODO elif 'refid' in node:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\manpage.py",
    "line_number": 1022,
    "line": "        #TODO elif 'refid' in node:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\manpage.py",
    "line_number": 1073,
    "line": "        # TODO add report_level"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\null.py",
    "line_number": 24,
    "line": "        # output = None   # TODO in 0.22"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\_html_base.py",
    "line_number": 27,
    "line": "import xml.etree.ElementTree as ET  # TODO: lazy import in prepare_svg()?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\_html_base.py",
    "line_number": 412,
    "line": "        # TODO: consider feature-request #102?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\_html_base.py",
    "line_number": 798,
    "line": "        # else: # TODO system message (or already in the transform)?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\_html_base.py",
    "line_number": 1176,
    "line": "                # TODO: get external files with urllib.request (cf. odtwriter)?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\_html_base.py",
    "line_number": 1341,
    "line": "            # TODO: fix display mode in matrices and fractions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\_html_base.py",
    "line_number": 1478,
    "line": "    # TODO: omit paragraph tags in simple table cells?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\_html_base.py",
    "line_number": 1571,
    "line": "    # TODO: use the new HTML5 element <aside>"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\_html_base.py",
    "line_number": 1749,
    "line": "            # TODO: use role=\"heading\" or <h1>? (HTML5 only)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\_html_base.py",
    "line_number": 1757,
    "line": "            # TODO: use role=\"heading\" or <h1>? (HTML5 only)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\html4css1\\__init__.py",
    "line_number": 245,
    "line": "                         # TODO: self.in_contents"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\html4css1\\__init__.py",
    "line_number": 573,
    "line": "                    pass  # TODO: warn/info?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 43,
    "line": "    table_style_values = [  # TODO: align-left, align-center, align-right, ??"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 232,
    "line": "         # TODO: implement \"latex footnotes\" alternative"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 265,
    "line": "                   # TODO: footnote collection transform"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 528,
    "line": "# TODO? Options [force,almostfull] prevent spurious error messages,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 650,
    "line": "        # TODO: ensure white space also at the beginning of a line?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 785,
    "line": "    # TODO: greek alphabet ... ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 876,
    "line": "        # TODO: elif 'align' in classes/settings.table-style:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 1079,
    "line": "                # TODO merge clines"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 1132,
    "line": "    # TODO: use mixins for different implementations."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 1134,
    "line": "    ## use_optionlist_for_docinfo = False # TODO: NOT YET IN USE"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 1233,
    "line": "        # footnotes: TODO: implement LaTeX footnotes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 1387,
    "line": "            # TODO: currently ignored (configure in a stylesheet):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 1562,
    "line": "    # TODO: is this used anywhere? -> update (use template) or delete"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 1802,
    "line": "            # TODO: normalize label"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 1830,
    "line": "        # TODO: normalize labels"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 1931,
    "line": "            self.out.append('\\n')                # TODO: just pass?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2063,
    "line": "        # TODO insertion point should be configurable."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2069,
    "line": "            # TODO: insert citations at point of definition."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2111,
    "line": "            # TODO: should be possible with LaTeX, see e.g."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2276,
    "line": "            # TODO: use the wrapfigure environment?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2313,
    "line": "        # TODO: \"real\" LaTeX \\footnote{}s (see visit_footnotes_reference())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2325,
    "line": "        #     # TODO: insert footnote content at (or near) this place"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2326,
    "line": "        #     #       see also docs/dev/todo.txt"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2435,
    "line": "            # TODO: warn or ignore non-applicable alignment settings?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2441,
    "line": "                pass                    # TODO: warn?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2571,
    "line": "        # TODO: fails if normal text precedes the literal block."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2657,
    "line": "            # TODO: filter irrelevant nodes (\"http-equiv\", ...)?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 2849,
    "line": "            # TODO: don't use \\hyperref if self.reference_label is True"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 3025,
    "line": "        # TODO: Don't use a longtable or add \\noindent before"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\latex2e\\__init__.py",
    "line_number": 3048,
    "line": "        # TODO: where else can/must we omit the \\phantomsection?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\odf_odt\\__init__.py",
    "line_number": 1054,
    "line": "        # TODO: only call paperconf, if it is actually used"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\odf_odt\\__init__.py",
    "line_number": 2641,
    "line": "    # placeholder for math (see docs/dev/todo.txt)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\xetex\\__init__.py",
    "line_number": 100,
    "line": "                # TODO: use variant=... for English variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\docutils\\writers\\xetex\\__init__.py",
    "line_number": 121,
    "line": "        self.literal_double_quote = '\"'  # TODO: use \\textquotedbl ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\executing\\_position_node_finder.py",
    "line_number": 356,
    "line": "            # TODO: investigate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\executing\\_position_node_finder.py",
    "line_number": 648,
    "line": "            # TODO: match expressions are not supported for now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\iniconfig\\__init__.py",
    "line_number": 80,
    "line": "    # TODO: investigate possible mypy bug wrt matching the passed over data"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\ipykernel\\debugger.py",
    "line_number": 392,
    "line": "        # TODO: identify Thread-2, Thread-3 and Thread-4. These are NOT"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\ipykernel\\debugger.py",
    "line_number": 559,
    "line": "        # TODO : check start and count arguments work as expected in debugpy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\ipykernel\\ipkernel.py",
    "line_number": 397,
    "line": "            # TODO: this should check every case for \"are we inside the runner\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\ipykernel\\trio_runner.py",
    "line_number": 51,
    "line": "                # TODO This hack prevents the nursery from cancelling all child"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\ipykernel\\zmqshell.py",
    "line_number": 299,
    "line": "            # TODO: Implement macro editing over 2 processes."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\async_helpers.py",
    "line_number": 132,
    "line": "        # TODO: do not raise but return an execution result with the right info."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\completer.py",
    "line_number": 1246,
    "line": "                # TODO: make this faster by reusing parts of the computation?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\completer.py",
    "line_number": 2053,
    "line": "        # TODO: add a heuristic for suppressing (e.g. if it has OS-specific delimiter,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\completer.py",
    "line_number": 2541,
    "line": "            # TODO: maybe distinguish between functions, modules and just \"variables\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\completer.py",
    "line_number": 3171,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\completer.py",
    "line_number": 3253,
    "line": "        # potential todo, FOLD the 3rd throw away argument of _complete"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\completer.py",
    "line_number": 3255,
    "line": "        # TODO: Q: does the above refer to jedi completions (i.e. 0-indexed?)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\completer.py",
    "line_number": 3256,
    "line": "        # TODO: should we deprecate now, or does it stay?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\completer.py",
    "line_number": 3266,
    "line": "            # TODO: can we confirm that excluding Jedi here was a deliberate choice in previous version?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\completer.py",
    "line_number": 3458,
    "line": "            # TODO Jedi completions non included in legacy stateful API; was this deliberate or omission?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\completer.py",
    "line_number": 3491,
    "line": "        # TODO: use `context.limit` to terminate early once we matched the maximum"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\completer.py",
    "line_number": 3515,
    "line": "        # TODO: self.unicode_names is here a list we traverse each time with ~100k elements."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\debugger.py",
    "line_number": 672,
    "line": "                    # TODO: investigate Toke.Line here, likely LineEm,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\debugger.py",
    "line_number": 683,
    "line": "                    # TODO: investigate Toke.Line here, likely Line"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\debugger.py",
    "line_number": 747,
    "line": "                            # TODO: invsetigate Toke.Line here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\display.py",
    "line_number": 385,
    "line": "                # TODO: do deflate?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\display.py",
    "line_number": 1265,
    "line": "        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\displayhook.py",
    "line_number": 21,
    "line": "# TODO: Move the various attributes (cache_size, [others now moved]). Some"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\displayhook.py",
    "line_number": 329,
    "line": "        # TODO: Is this really needed?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\display_functions.py",
    "line_number": 69,
    "line": "    # TODO: We could check for ipykernel version and provide a detailed upgrade message."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\doctb.py",
    "line_number": 101,
    "line": "        # TODO: no default ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\interactiveshell.py",
    "line_number": 547,
    "line": "    # TODO: this part of prompt management should be moved to the frontends."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\interactiveshell.py",
    "line_number": 615,
    "line": "        # TODO: When we override sys.stdout and sys.stderr before this class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\interactiveshell.py",
    "line_number": 641,
    "line": "        # TODO: init_io() needs to happen before init_traceback handlers"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\interactiveshell.py",
    "line_number": 1846,
    "line": "            # TODO: only apply format_screen to the plain/text repr of the mime"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\oinspect.py",
    "line_number": 950,
    "line": "                    # TODO: `'string_form'.expandtabs()` seems wrong, but"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\tbtools.py",
    "line_number": 507,
    "line": "        # todo emit deprecation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\ultratb.py",
    "line_number": 456,
    "line": "        # TODO: no default ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\ultratb.py",
    "line_number": 841,
    "line": "                # TODO: Here we need to use before/after/"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\ultratb.py",
    "line_number": 1007,
    "line": "        # TODO: no default"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\magics\\code.py",
    "line_number": 730,
    "line": "        # XXX TODO: should this be generalized for all string vars?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\core\\magics\\packaging.py",
    "line_number": 25,
    "line": "        # TODO: does this need to change on windows?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\sphinxext\\ipython_directive.py",
    "line_number": 1006,
    "line": "        #TODO, any reason block_parser can't be a method of embeddable shell"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\terminal\\interactiveshell.py",
    "line_number": 360,
    "line": "    # TODO: deprecate this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\terminal\\ptutils.py",
    "line_number": 162,
    "line": "            # TODO: Use Jedi to determine meta_text"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\testing\\decorators.py",
    "line_number": 128,
    "line": "# TODO: should this be finnally ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\testing\\plugin\\pytest_ipdoctest.py",
    "line_number": 389,
    "line": "    # TODO: Type ignored -- breaks Liskov Substitution."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\testing\\plugin\\pytest_ipdoctest.py",
    "line_number": 419,
    "line": "            # TODO: ReprFileLocation doesn't expect a None lineno."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\utils\\PyColorize.py",
    "line_number": 425,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\IPython\\utils\\wildcard.py",
    "line_number": 43,
    "line": "    TODO: Should be extended for choosing more than one type.\"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\isort\\wrap_modes.py",
    "line_number": 338,
    "line": "        ):  # pragma: no cover # TODO: fix, this is because of test run inconsistency."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jaraco\\classes\\properties.py",
    "line_number": 14,
    "line": "    # TODO(coherent-oss/granary#4): Migrate to PEP 695 by 2027-10."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\parser_utils.py",
    "line_number": 100,
    "line": "        # TODO We have to check next leaves until there are no new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\parser_utils.py",
    "line_number": 152,
    "line": "    # TODO this is pretty bad, we should probably just normalize."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\parser_utils.py",
    "line_number": 194,
    "line": "        # TODO in some particular cases, the tree doesn't seem to be linked"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\api\\classes.py",
    "line_number": 183,
    "line": "            # TODO move this to their respective names."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\api\\completion.py",
    "line_number": 444,
    "line": "                # TODO we should probably check here for properties"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\api\\environment.py",
    "line_number": 342,
    "line": "# TODO: this function should probably return a list of environments since"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\api\\environment.py",
    "line_number": 403,
    "line": "    # TODO: support Python Anaconda."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\api\\helpers.py",
    "line_number": 131,
    "line": "        # TODO This is for now not an official parso API that exists purely"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\api\\interpreter.py",
    "line_number": 2,
    "line": "TODO Some parts of this module are still not well documented."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\api\\project.py",
    "line_number": 101,
    "line": "        data.pop('_django', None)  # TODO make django setting public?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\api\\__init__.py",
    "line_number": 111,
    "line": "            # TODO add a better warning than the traceback!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\api\\__init__.py",
    "line_number": 464,
    "line": "        # TODO here we use stubs instead of the actual values. We should use"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\api\\__init__.py",
    "line_number": 501,
    "line": "            name = definition._name  # TODO private access"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\analysis.py",
    "line_number": 81,
    "line": "    # TODO this path is probably not right"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\analysis.py",
    "line_number": 117,
    "line": "        # TODO maybe make a warning for __getattr__/__getattribute__"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\arguments.py",
    "line_number": 230,
    "line": "            # TODO this function is a bit strange. probably refactor?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\arguments.py",
    "line_number": 310,
    "line": "            # TODO this funcdef should not be needed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\base_value.py",
    "line_number": 110,
    "line": "            # TODO if no __aiter__ values are there, error should be:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\base_value.py",
    "line_number": 159,
    "line": "        # TODO this value is probably not right."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\cache.py",
    "line_number": 25,
    "line": "            # TODO These checks are kind of ugly and slow."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\filters.py",
    "line_number": 282,
    "line": "        # TODO add TypeError if params are given/or not correct."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\helpers.py",
    "line_number": 14,
    "line": "    # TODO The implementation below is probably incorrect and not complete."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\names.py",
    "line_number": 122,
    "line": "            # TODO improve the situation for when level is present."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\syntax_tree.py",
    "line_number": 101,
    "line": "    # TODO there's a lot of issues with this one. We actually should do"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\syntax_tree.py",
    "line_number": 162,
    "line": "    TODO This function is temporary: Merge with infer_node."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\syntax_tree.py",
    "line_number": 775,
    "line": "        # TODO an exception can also be a tuple. Check for those."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\syntax_tree.py",
    "line_number": 776,
    "line": "        # TODO check for types that are not classes and add it to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\sys_path.py",
    "line_number": 52,
    "line": "            # TODO Essentially we're not checking details on sys.path"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\__init__.py",
    "line_number": 20,
    "line": "TODO this paragraph is not what jedi does anymore, it's similar, but not the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\compiled\\access.py",
    "line_number": 333,
    "line": "        # TODO this API is ugly."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\compiled\\mixed.py",
    "line_number": 269,
    "line": "    # TODO accessing this is bad, but it probably doesn't matter that much,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\compiled\\mixed.py",
    "line_number": 274,
    "line": "        # TODO Care about generics from stuff like `[1]` and don't return like this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\compiled\\mixed.py",
    "line_number": 286,
    "line": "            # TODO this __name__ might be wrong."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\compiled\\value.py",
    "line_number": 217,
    "line": "                # TODO wtf is this? this is exactly the same as the thing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\compiled\\value.py",
    "line_number": 532,
    "line": "    TODO docstrings like utime(path, (atime, mtime)) and a(b [, b]) -> None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\compiled\\value.py",
    "line_number": 533,
    "line": "    TODO docstrings like 'tuple of integers'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\compiled\\subprocess\\__init__.py",
    "line_number": 502,
    "line": "        TODO Currently we're passing slice objects around. This should not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\gradual\\annotation.py",
    "line_number": 297,
    "line": "                # TODO _dict_values is not public."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\gradual\\base.py",
    "line_number": 124,
    "line": "            # TODO not sure if this is nice."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\gradual\\base.py",
    "line_number": 137,
    "line": "                # TODO why is this ordering the correct one?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\gradual\\base.py",
    "line_number": 139,
    "line": "                # TODO I'm still not sure gather_annotation_classes is a good"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\gradual\\base.py",
    "line_number": 344,
    "line": "        # TODO this is obviously wrong. Is it though?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\gradual\\stub_value.py",
    "line_number": 95,
    "line": "        # TODO rewrite direct return"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\gradual\\typeshed.py",
    "line_number": 83,
    "line": "    # TODO this caches the stub files indefinitely, maybe use a time cache"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\gradual\\typeshed.py",
    "line_number": 142,
    "line": "    # TODO is this needed? where are the exceptions coming from that make this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\gradual\\typing.py",
    "line_number": 85,
    "line": "            # TODO doesn't even exist in typeshed/typing.py, yet. But will be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\gradual\\typing.py",
    "line_number": 263,
    "line": "        # TODO use inference_state.import_module?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\dynamic_arrays.py",
    "line_number": 37,
    "line": "        # TODO also check for dict updates"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\function.py",
    "line_number": 264,
    "line": "        # TODO: if is_async, wrap yield statements in Awaitable/async_generator_asend"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\function.py",
    "line_number": 432,
    "line": "                    # TODO check with values if it's the right overload"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\instance.py",
    "line_number": 374,
    "line": "            # TODO tuple initializations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\instance.py",
    "line_number": 581,
    "line": "                    # TODO filter non-self assignments instead of this bad"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\iterable.py",
    "line_number": 251,
    "line": "    # TODO merge with _DictMixin?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\iterable.py",
    "line_number": 256,
    "line": "        # TODO merge with _dict_keys?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\iterable.py",
    "line_number": 356,
    "line": "                # TODO this should probably use at least part of the code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\klass.py",
    "line_number": 161,
    "line": "        # TODO Do a proper mro resolution. Currently we are just listing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\klass.py",
    "line_number": 164,
    "line": "            # TODO there's multiple different mro paths possible if this yields"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\klass.py",
    "line_number": 167,
    "line": "                # TODO detect for TypeError: duplicate base class str,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\klass.py",
    "line_number": 172,
    "line": "                    # TODO add a TypeError like:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\inference\\value\\klass.py",
    "line_number": 247,
    "line": "        # TODO Do a proper mro resolution. Currently we are just listing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\plugins\\django.py",
    "line_number": 72,
    "line": "        # TODO private access.."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\plugins\\stdlib.py",
    "line_number": 185,
    "line": "    # TODO theoretically we have to check here if something is an iterator."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\plugins\\stdlib.py",
    "line_number": 192,
    "line": "    # TODO implement this if it's a callable."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\plugins\\stdlib.py",
    "line_number": 432,
    "line": "    # TODO here we only use one of the types, we should use all."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jedi\\plugins\\stdlib.py",
    "line_number": 664,
    "line": "                # TODO we need to add the contextualized value."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\ext.py",
    "line_number": 251,
    "line": "    # TODO: the i18n extension is currently reevaluating values in a few"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 212,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 213,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 214,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 217,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 222,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 223,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 224,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 228,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 233,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 234,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 235,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 237,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jupyter_client\\adapter.py",
    "line_number": 165,
    "line": "        # TODO: handle payloads"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jupyter_client\\kernelspec.py",
    "line_number": 229,
    "line": "        # TODO: Caching?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jupyter_client\\session.py",
    "line_number": 953,
    "line": "            # TODO: handle it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jupyter_client\\provisioning\\local_provisioner.py",
    "line_number": 182,
    "line": "            # TODO - change when handshake pattern is adopted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\jupyter_core\\paths.py",
    "line_number": 909,
    "line": "        nAclLength = 32767  # TODO: calculate this: ctypes.sizeof(ACL) + ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\llvmlite\\binding\\ffi.py",
    "line_number": 170,
    "line": "    TODO: we can add methods to mark the function as threadsafe"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\llvmlite\\ir\\types.py",
    "line_number": 478,
    "line": "        # TODO: why does this not take self.element/self.count into account?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\llvmlite\\tests\\refprune_proto.py",
    "line_number": 202,
    "line": "        todo = list(decref_blocks)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\llvmlite\\tests\\refprune_proto.py",
    "line_number": 203,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\llvmlite\\tests\\refprune_proto.py",
    "line_number": 204,
    "line": "            cur_node = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\llvmlite\\tests\\test_refprune.py",
    "line_number": 8,
    "line": "# TODO:: Get rid of Legacy tests once completely transitioned to NewPassManager"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\markdown\\core.py",
    "line_number": 119,
    "line": "        self.docType = \"\"  # TODO: Maybe delete this. It does not appear to be used anymore."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\markdown\\htmlparser.py",
    "line_number": 112,
    "line": "            # TODO: remove this when the bug is fixed in all supported Python versions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\markdown\\test_tools.py",
    "line_number": 86,
    "line": "        # TODO: If/when actual output ends with a newline, then use:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\markdown_it\\parser_inline.py",
    "line_number": 96,
    "line": "            # TODO: remove this workaround when CM standard will allow nested links"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\markdown_it\\rules_core\\replacements.py",
    "line_number": 26,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\material\\plugins\\blog\\readtime\\parser.py",
    "line_number": 23,
    "line": "# TODO: Refactor the `void` set into a common module and import it from there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mdurl\\_parse.py",
    "line_number": 168,
    "line": "            # v0.12 TODO(isaacs): This is not quite how Chrome does things."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocs\\config\\config_options.py",
    "line_number": 875,
    "line": "            # TODO: this should be an error."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocs\\contrib\\search\\__init__.py",
    "line_number": 79,
    "line": "        # TODO: Raise a deprecation warning in a future release (1.3?)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocs\\utils\\rendering.py",
    "line_number": 12,
    "line": "# TODO: This will become unnecessary after min-versions have Markdown >=3.4"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocs\\utils\\rendering.py",
    "line_number": 19,
    "line": "# TODO: Most of this file will become unnecessary after https://github.com/Python-Markdown/markdown/pull/1441"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\__init__.py",
    "line_number": 8,
    "line": "from mkdocstrings._internal.extension import AutoDocProcessor, MkdocstringsExtension"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\__init__.py",
    "line_number": 40,
    "line": "    \"AutoDocProcessor\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 1,
    "line": "# This module holds the code of the Markdown extension responsible for matching \"autodoc\" instructions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 9,
    "line": "# Both the collection and rendering process can be configured by adding YAML configuration under the \"autodoc\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 50,
    "line": "class AutoDocProcessor(BlockProcessor):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 51,
    "line": "    \"\"\"Our \"autodoc\" Markdown block processor."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 53,
    "line": "    It has a [`test` method][mkdocstrings.AutoDocProcessor.test] that tells if a block matches a criterion,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 54,
    "line": "    and a [`run` method][mkdocstrings.AutoDocProcessor.run] that processes it."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 61,
    "line": "    \"\"\"The regular expression to match our autodoc instructions.\"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 85,
    "line": "        \"\"\"Match our autodoc instructions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 148,
    "line": "        \"\"\"Process an autodoc block."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 216,
    "line": "        # The \"handler layer\" tracks the nesting of the autodoc blocks, which can appear in docstrings."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 223,
    "line": "        # The \"extension layer\" tracks whether we're converting an autodoc instruction"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 348,
    "line": "        Add an instance of our [`AutoDocProcessor`][mkdocstrings.AutoDocProcessor] to the Markdown parser."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\extension.py",
    "line_number": 354,
    "line": "            AutoDocProcessor(md, handlers=self._handlers, autorefs=self._autorefs),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\plugin.py",
    "line_number": 49,
    "line": "    but overridable in each \"autodoc\" instruction. Example:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\plugin.py",
    "line_number": 142,
    "line": "            inventory_version=\"0.0.0\",  # TODO: Find a way to get actual version."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\plugin.py",
    "line_number": 267,
    "line": "        to feed it \"autodoc\" instructions and get back JSON data. If so, it should then close the subprocess at some point:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\handlers\\base.py",
    "line_number": 58,
    "line": "# Autodoc instructions can appear in nested Markdown,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\handlers\\base.py",
    "line_number": 468,
    "line": "        # Produce a heading element that will be used later, in `AutoDocProcessor.run`, to:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\handlers\\base.py",
    "line_number": 640,
    "line": "        \"\"\"Return the handler name defined in an \"autodoc\" instruction YAML configuration, or the global default handler."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\handlers\\base.py",
    "line_number": 643,
    "line": "            config: A configuration dictionary, obtained from YAML below the \"autodoc\" instruction."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings\\_internal\\handlers\\base.py",
    "line_number": 667,
    "line": "        a handler is instantiated only once, and reused for each \"autodoc\" instruction asking for it."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocstrings_handlers\\python\\_internal\\config.py",
    "line_number": 569,
    "line": "            description=\"\"\"Pre-load modules that are not specified directly in autodoc instructions (`::: identifier`)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocs_autorefs\\_internal\\backlinks.py",
    "line_number": 24,
    "line": "    # TODO: remove once support for MkDocs <1.5 is dropped"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocs_autorefs\\_internal\\plugin.py",
    "line_number": 42,
    "line": "    # TODO: Remove once support for MkDocs <1.5 is dropped."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocs_autorefs\\_internal\\plugin.py",
    "line_number": 302,
    "line": "    # TODO: Maybe stop exposing this method in the future."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocs_autorefs\\_internal\\references.py",
    "line_number": 42,
    "line": "    # TODO: remove once support for MkDocs <1.5 is dropped"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mkdocs_autorefs\\_internal\\references.py",
    "line_number": 366,
    "line": "        \"hover\",  # TODO: Remove at some point."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\more_itertools\\recipes.py",
    "line_number": 1054,
    "line": "    todo = [n] if n > 1 else []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\more_itertools\\recipes.py",
    "line_number": 1055,
    "line": "    for n in todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\more_itertools\\recipes.py",
    "line_number": 1060,
    "line": "            todo += (fact, n // fact)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\applytype.py",
    "line_number": 122,
    "line": "    # TODO: validate arg_kinds/arg_names for ParamSpec and TypeVarTuple replacements,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\applytype.py",
    "line_number": 159,
    "line": "    # TODO: move apply_poly() logic here when new inference"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\argmap.py",
    "line_number": 103,
    "line": "        # TODO: If there are also tuple varargs, we might be missing some potential"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\binder.py",
    "line_number": 179,
    "line": "        # TODO: Copy the value of unreachable into new frames to avoid"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 12,
    "line": "# TODO: More consistent terminology, e.g. path/fnam, module/id, state/file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 123,
    "line": "# TODO: Get rid of BuildResult.  We might as well return a BuildManager."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 309,
    "line": "    # TODO: Could we always use relpath?  (A worry in non-bazel"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 859,
    "line": "            # TODO: Assert deps file wasn't changed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 1123,
    "line": "        # TODO: invalidate also if options changed (like --strict-optional)?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 1277,
    "line": "    # TODO: May need to take more build options into account"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 1298,
    "line": "    # TODO: these `type: ignore`s wouldn't be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 1945,
    "line": "            # TODO: Get mtime if not cached."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 2076,
    "line": "        # TODO: Move this away once we've removed the old semantic analyzer?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 2095,
    "line": "        # TODO: Assert data file wasn't changed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 2234,
    "line": "        # TODO: This should not be considered as a semantic analysis"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 2240,
    "line": "        # TODO: Do this while constructing the AST?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 2375,
    "line": "            # TODO: find a more robust way to traverse *all* relevant types?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 2684,
    "line": "            # TODO: This might hide non-fatal errors from"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 2823,
    "line": "    # TODO: Read the path (the __init__.py file) and return"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 3063,
    "line": "    # TODO: Consider whether to go depth-first instead.  This may"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 3129,
    "line": "            # TODO: Ideally we could skip here modules that appeared in st.suppressed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 3146,
    "line": "                        # TODO: Why not 'if dep not in st.dependencies' ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\build.py",
    "line_number": 3325,
    "line": "                # TODO: see if it's possible to determine if we need to process only a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 252,
    "line": "# (such as two references to the same variable). TODO: it would"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 427,
    "line": "        # TODO: verify this is still actually worth it over creating new checkers"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 487,
    "line": "        self, todo: Sequence[DeferredNode | FineGrainedDeferredNode] | None = None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 495,
    "line": "            if not todo and not self.deferred_nodes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 502,
    "line": "                if not todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 503,
    "line": "                    todo = self.deferred_nodes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 508,
    "line": "                for node, active_typeinfo in todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 542,
    "line": "        # TODO: Handle __all__"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 965,
    "line": "            # TODO not best fix, better have dedicated yield token"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 1099,
    "line": "        # TODO: the following logic should move to the dataclasses plugin"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 1319,
    "line": "                        # TODO: check recursively for inner type variables"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 1363,
    "line": "                    # TODO: Find a way of working around this limitation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 1678,
    "line": "            # TODO: Deal with attributes of TupleType etc."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 1773,
    "line": "        # TODO: check argument kinds?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 1790,
    "line": "        # TODO: this manipulation is dangerous if callables are generic."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 1843,
    "line": "                # TODO overloads"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 1928,
    "line": "        # TODO use generator"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 2039,
    "line": "                    # TODO can't come up with an example where this is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 2064,
    "line": "            # TODO: this logic is much less complete than similar one in checkmember.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 2505,
    "line": "                    # TODO: Figure out how to have clearer error messages."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 2513,
    "line": "                # TODO: Apply the sig to the actual TypeInfo so we can handle decorators"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 2656,
    "line": "            # TODO: make sure that `x = @class/staticmethod(func)`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 2748,
    "line": "            # TODO: add advanced variance checks for recursive protocols"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 2800,
    "line": "        # TODO: handle more node kinds here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 2834,
    "line": "        # TODO: use more principled logic to decide is_subtype() vs is_equivalent()."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 2939,
    "line": "                # TODO: This is broken."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 3304,
    "line": "            # TODO: some logic here duplicates the None partial type counterpart"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 3816,
    "line": "                # TODO: support this (at least if the r.h.s. unpack is a homogeneous tuple)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 3840,
    "line": "        # TODO: maybe elsewhere; redundant."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 3927,
    "line": "            # TODO: See todo in binder.py, ConditionalTypeBinder.assign_type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 4073,
    "line": "                    # TODO Figure out more precise type context, probably"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 4084,
    "line": "                # TODO Figure out more precise type context, probably"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 4437,
    "line": "            # TODO: support __set__() for union types."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 4568,
    "line": "        # TODO: Should we share some of this with try_infer_partial_type?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 4588,
    "line": "                    # TODO: Don't infer things twice."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 6001,
    "line": "                    # TODO: Follow *args, **kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 6006,
    "line": "                        # TODO: there are some more cases in check_call() to handle."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 6249,
    "line": "        # TODO: support regular and len() narrowing in the same chain."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 6365,
    "line": "                # TODO: Consider picking the narrower type instead of always discarding this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 6744,
    "line": "        # TODO: propagate indirect len() comparison restrictions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 6767,
    "line": "            # TODO: support unions of literal types as len() comparison targets."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 6882,
    "line": "                    # TODO: also record max_len to avoid false negatives?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 6898,
    "line": "                # TODO: return fixed union + prefixed variadic tuple for no_type?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 6931,
    "line": "            # TODO: return fixed union + prefixed variadic tuple for no_type?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 7133,
    "line": "        # TODO: assert len(args) == len(info.defn.type_vars)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 7917,
    "line": "                # TODO: fix tuple in lib-stub/builtins.pyi (it should be generic)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 8050,
    "line": "        # TODO: should we only allow unions of instances as per PEP 484?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 8237,
    "line": "    # TODO: find a cleaner solution instead of this ad-hoc erasure."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 8248,
    "line": "    # TODO should an overload with additional items be allowed to be more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checker.py",
    "line_number": 8352,
    "line": "        # TODO: Maybe erase plain tuples used as fallback in TupleType constructor?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 336,
    "line": "        # TODO: refactor this to use a pattern similar to one in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 401,
    "line": "                # TODO: always do this in type_object_type by passing the original context"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 470,
    "line": "                # TODO: what to do about nested module references?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 830,
    "line": "                    # TODO: for duplicate keys, type-check all values."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 847,
    "line": "                # TODO: catch the cases where a declared key is overridden by a subsequent"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 1180,
    "line": "        # TODO: Don't infer argument expression twice."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 1402,
    "line": "            # TODO: can we handle more general cases?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 2000,
    "line": "            # TODO: Instead of this hack and the one below, we need to use outer and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 2031,
    "line": "            # TODO: we may want to add similar exception if all arguments are lambdas, since"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 2148,
    "line": "                # TODO: support the similar inference for return type context."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 2340,
    "line": "        # TODO(jukka): We could return as soon as we find an error if messages is None."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 2752,
    "line": "            # TODO: Adjust the error message here to make it clear there was no match."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 3140,
    "line": "            # TODO: Enhance the merging logic to handle a wider variety of signatures."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 3332,
    "line": "        # TODO remove; no private definitions in mypy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 3741,
    "line": "            # TODO: find a way of disabling the check only for types resulted from the expansion."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 3917,
    "line": "            # TODO: Find a way to remove this call without performance implications."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 4083,
    "line": "                # This is probably related to the TODO in lookup_operator(...)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 4086,
    "line": "                # TODO: Remove this extra case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 4151,
    "line": "            # TODO: Can we use `type_overrides_set()` here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 4304,
    "line": "            # TODO: can we get rid of this extra store_type()?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 4559,
    "line": "        # TODO: this duplicates logic in typeops.tuple_fallback()."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 4876,
    "line": "        # TODO: this logic is duplicated with semanal_typeargs."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 4891,
    "line": "        # TODO: in future we may want to support type application to variadic functions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 5071,
    "line": "        # TODO: try using tuple type context in more cases."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 5123,
    "line": "                # TODO: If there's a context, and item.expr is a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 5370,
    "line": "                # TODO: return expression must be accepted before exiting function scope."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 5385,
    "line": "        # TODO also accept 'Any' context"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 5442,
    "line": "            # TODO treat this case appropriately"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 5803,
    "line": "                # TODO: If it's possible that the previous analysis of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 5818,
    "line": "            # TODO: would checking for is_proper_subtype also work and cover more cases?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 5972,
    "line": "        # TODO: refactor this to use checkmember.analyze_member_access, otherwise"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 6082,
    "line": "        # TODO: What should the context for the sub-expression be?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 6192,
    "line": "        # TODO: should this ever be called (see e.g. mypyc visitor)?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 6236,
    "line": "        # TODO: support other possible types here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 6364,
    "line": "        # TODO: we need to check only for type variables of original callable."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 6554,
    "line": "                    # TODO: support ParamSpecType and TypeVarTuple."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkexpr.py",
    "line_number": 6615,
    "line": "    # TODO: Do something more clever here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkmember.py",
    "line_number": 222,
    "line": "    # TODO: This and following functions share some logic with subtypes.find_member;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkmember.py",
    "line_number": 342,
    "line": "            # TODO: use proper treatment of special methods on unions instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkmember.py",
    "line_number": 349,
    "line": "        # TODO: should we skip these steps for static methods as well?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkmember.py",
    "line_number": 375,
    "line": "    # TODO super?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkmember.py",
    "line_number": 397,
    "line": "            # TODO: do not rely on same type variables being present in all constructor overloads."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkmember.py",
    "line_number": 784,
    "line": "            # TODO allow setting attributes in subclass (although it is probably an error)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkmember.py",
    "line_number": 915,
    "line": "    # TODO handle lvalues"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkmember.py",
    "line_number": 965,
    "line": "                # TODO: This is not always right. What's the most reasonable thing to do here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkmember.py",
    "line_number": 1223,
    "line": "            # TODO: check in `default` plugin that `__setitem__` is correct."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkmember.py",
    "line_number": 1275,
    "line": "    # TODO: verify consistency between Q and T"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkpattern.py",
    "line_number": 338,
    "line": "            # TODO: use more precise narrowing when possible (e.g. for identical shapes)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkpattern.py",
    "line_number": 578,
    "line": "        # TODO: Do I need this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkpattern.py",
    "line_number": 744,
    "line": "        # expressions, as suggested in the TODO above it's definition"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkpattern.py",
    "line_number": 764,
    "line": "        TODO: this doesn't make sense. For example if one has class S(Sequence[int], Generic[T])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkstrformat.py",
    "line_number": 374,
    "line": "                    # TODO: add support for some custom specs like datetime?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkstrformat.py",
    "line_number": 428,
    "line": "        # TODO: try refactoring to combine this logic with % formatting."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkstrformat.py",
    "line_number": 618,
    "line": "        # TODO: fix column to point to actual start of the format specifier _within_ string."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkstrformat.py",
    "line_number": 682,
    "line": "    # TODO: In Python 3, the bytes formatting has a more restricted set of options"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkstrformat.py",
    "line_number": 739,
    "line": "                # TODO: we should probably warn about potentially short tuple."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\checkstrformat.py",
    "line_number": 1049,
    "line": "            # TODO: return type object?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 85,
    "line": "        # TODO: should we add \"assert not isinstance(target, UnpackType)\"?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 90,
    "line": "        # TODO: A cleaner solution may be to modify the return type of infer_constraints()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 492,
    "line": "    # TODO: if we will support multiple sources Any, use this here instead."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 540,
    "line": "        # TODO: More generally, if a given (variable, direction) pair appears in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 670,
    "line": "    # TODO: The value may be None. Is that actually correct?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 856,
    "line": "                            # TODO: constraints between prefixes using"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 922,
    "line": "                            # TODO: constraints between prefixes using"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 1056,
    "line": "        # TODO: check that callables match? Ideally we should not infer constraints"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 1077,
    "line": "                # TODO: Erase template variables if it is generic?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 1106,
    "line": "                    # TODO: infer more from prefixes when possible."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 1121,
    "line": "                        # TODO: do we need some special-casing when unpack is present in actual"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 1546,
    "line": "                # TODO: should we use union instead of join here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\constraints.py",
    "line_number": 1577,
    "line": "        # TODO: can we infer something useful for *T vs P?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\dmypy_server.py",
    "line_number": 456,
    "line": "        # TODO: What about silent?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\dmypy_server.py",
    "line_number": 607,
    "line": "        # TODO: Support file events"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\dmypy_server.py",
    "line_number": 755,
    "line": "                assert nxt.path is not None  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\dmypy_server.py",
    "line_number": 788,
    "line": "        # TODO: Figure out why these are treated as suppressed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\dmypy_server.py",
    "line_number": 801,
    "line": "        # TODO: Namespace packages"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\erasetype.py",
    "line_number": 59,
    "line": "        # TODO: replace with an assert after UnboundType can't leak from semantic analysis."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\erasetype.py",
    "line_number": 174,
    "line": "    # TODO: below two methods duplicate some logic with expand_type()."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\errorcodes.py",
    "line_number": 142,
    "line": "# TODO: why do we need the explicit type here? Without it mypyc CI builds fail with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\errors.py",
    "line_number": 960,
    "line": "        # TODO: Make sure that either target is always defined or that not being defined"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\evalexpr.py",
    "line_number": 53,
    "line": "        # TODO: Handle more names by figuring out a way to hook into the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\expandtype.py",
    "line_number": 51,
    "line": "# TODO: add a static dependency test for this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\expandtype.py",
    "line_number": 240,
    "line": "            # TODO: do we really need to do this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\expandtype.py",
    "line_number": 276,
    "line": "            # TODO: assert this is a trivial type, like Any, Never, or object."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\expandtype.py",
    "line_number": 468,
    "line": "        # TODO: Verify this implementation is correct"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\expandtype.py",
    "line_number": 500,
    "line": "        # TODO: Verify that the new item type is valid (instance or"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\expandtype.py",
    "line_number": 510,
    "line": "        # TODO: normalize if target is Tuple, and args are [*tuple[X, ...]]?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\exprtotype.py",
    "line_number": 83,
    "line": "    # TODO: a lot of code here is duplicated in fastparse.py, refactor this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\exprtotype.py",
    "line_number": 124,
    "line": "                    # TODO: this is not the optimal solution as we are basically getting rid"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\fastparse.py",
    "line_number": 133,
    "line": "# TODO: Index, ExtSlice are deprecated in 3.9."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\fixup.py",
    "line_number": 55,
    "line": "# TODO: Fix up .info when deserializing, i.e. much earlier."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\fixup.py",
    "line_number": 156,
    "line": "                    # TypeInfo has no accept().  TODO: Add it?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\fixup.py",
    "line_number": 226,
    "line": "        # TODO: Combine Instances that are exactly the same?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\fixup.py",
    "line_number": 234,
    "line": "        # TODO: Is this needed or redundant?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\fswatcher.py",
    "line_number": 33,
    "line": "    # TODO: Watching directories?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\fswatcher.py",
    "line_number": 34,
    "line": "    # TODO: Handle non-files"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\graph_utils.py",
    "line_number": 106,
    "line": "    # TODO: Use a faster algorithm?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\inspections.py",
    "line_number": 89,
    "line": "    # TODO: this code shares some logic with checkmember.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\inspections.py",
    "line_number": 345,
    "line": "        # TODO: also handle cases when such callable appears in a union."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\inspections.py",
    "line_number": 446,
    "line": "            # TODO: line/column are not stored in cache for vast majority of symbol nodes."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\join.py",
    "line_number": 111,
    "line": "                    # TODO: contravariant case should use meet but pass seen instances as"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\join.py",
    "line_number": 460,
    "line": "        # TODO: Consider more cases of callable subtyping."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\join.py",
    "line_number": 473,
    "line": "                # TODO: Simplify redundancies from the result."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\join.py",
    "line_number": 555,
    "line": "            # TODO: are there other case we can handle (e.g. both prefix/suffix are shorter)?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\join.py",
    "line_number": 615,
    "line": "                # TODO: should this be a default fallback behaviour like for meet?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\join.py",
    "line_number": 759,
    "line": "    # TODO in combine_similar_callables also applies here (names and kinds; user metaclasses)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\join.py",
    "line_number": 777,
    "line": "    # until relevant TODOs on handling arg_kinds will be addressed there."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\join.py",
    "line_number": 812,
    "line": "    # TODO kinds and argument names"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\join.py",
    "line_number": 813,
    "line": "    # TODO what should happen if one fallback is 'type' and the other is a user-provided metaclass?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\join.py",
    "line_number": 869,
    "line": "    # TODO: find a better way to get object, or make this more reliable."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\lookup.py",
    "line_number": 10,
    "line": "# TODO: gradually move existing lookup functions to this module."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\main.py",
    "line_number": 319,
    "line": "    # TODO: (ethanhs) Look at folding these checks and the site packages subprocess calls into"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\main.py",
    "line_number": 1144,
    "line": "        # TODO: This flag is superfluous; remove after a short transition (2018-03-16)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\main.py",
    "line_number": 1442,
    "line": "        # TODO: use the same cache that the BuildManager will"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\meet.py",
    "line_number": 56,
    "line": "# TODO Describe this module."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\meet.py",
    "line_number": 116,
    "line": "    # TODO: check infinite recursion for aliases here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\meet.py",
    "line_number": 323,
    "line": "    # TODO: Replace these with an 'assert False' once we are more confident."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\meet.py",
    "line_number": 462,
    "line": "        # TODO: these checks are a bit in gray area, adjust if they cause problems."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\meet.py",
    "line_number": 638,
    "line": "    # TODO: write a more robust algorithm for cases where both types are variadic."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\meet.py",
    "line_number": 890,
    "line": "        # TODO: Implement a better algorithm that covers at least the same cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\meet.py",
    "line_number": 932,
    "line": "            # TODO: handle more cases (like when both prefix/suffix are shorter in s or t)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\meet.py",
    "line_number": 991,
    "line": "            # TODO: What if the fallbacks are different?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\meet.py",
    "line_number": 1079,
    "line": "    # TODO in combine_similar_callables also applies here (names and kinds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\meet.py",
    "line_number": 1180,
    "line": "    # TODO: is there a cleaner way to get str_type here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\memprofile.py",
    "line_number": 75,
    "line": "        system_memuse = -1  # TODO: Support this on Windows"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\messages.py",
    "line_number": 244,
    "line": "            TODO: address this in follow up PR"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\messages.py",
    "line_number": 424,
    "line": "            # TODO: Fix this consistently in format_type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\messages.py",
    "line_number": 2556,
    "line": "    # TODO: always mention type alias names in errors."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\messages.py",
    "line_number": 2614,
    "line": "            # TODO: better disambiguate ParamSpec name clashes."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\messages.py",
    "line_number": 2780,
    "line": "    # TODO: support rare cases when both TypeVar name and namespace suffix coincide."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\mixedtraverser.py",
    "line_number": 43,
    "line": "        # TODO: Should we visit generated methods/variables as well, either here or in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\modulefinder.py",
    "line_number": 65,
    "line": "# TODO: Consider adding more reasons here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\modulefinder.py",
    "line_number": 223,
    "line": "            # TODO: are there some combination of flags in which this check should be skipped?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\modulefinder.py",
    "line_number": 836,
    "line": "        # TODO: Don't do this in some cases; for motivation see see"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\mro.py",
    "line_number": 30,
    "line": "    # TODO describe"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 76,
    "line": "# TODO rename to use more descriptive names"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 218,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 565,
    "line": "            # TODO: figure out how to reliably set end position (we don't know the impl here)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 817,
    "line": "        # TODO: After a FuncDef is deserialized, the only time we use `arg_names`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 829,
    "line": "            # TODO: Do we need expanded, original_def?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 890,
    "line": "    # TODO: This is mostly used for the type; consider replacing with a 'type' attribute"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 1009,
    "line": "        # TODO: Should be Optional[str]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 1011,
    "line": "        # TODO: Should be Optional[TypeInfo]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 1072,
    "line": "        # TODO: Leave default values out?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 1355,
    "line": "    op: str  # TODO: Enum?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 2034,
    "line": "    op: str  # TODO: Enum?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 2083,
    "line": "    op: str  # TODO: Enum?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 3406,
    "line": "        # TODO: Is there a reason to reconstruct ti.subtypes?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 3648,
    "line": "        # TODO: is it possible to refactor this to set the correct type vars here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 3669,
    "line": "        # TODO: is it possible to refactor this to set the correct type vars here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 3862,
    "line": "            TODO: Refactor build.py to make dependency tracking more transparent"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\nodes.py",
    "line_number": 4198,
    "line": "    # TODO: What should the name be? Or maybe remove it?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\options.py",
    "line_number": 370,
    "line": "        # TODO: Make the type precise (AnyStr -> AnyStr)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugin.py",
    "line_number": 263,
    "line": "    # TODO: clean-up lookup functions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugin.py",
    "line_number": 466,
    "line": "# TODO: document ProperType in the plugin changelog/update issue."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugin.py",
    "line_number": 767,
    "line": "        TODO: probably it should also be called on inherited metaclasses."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugin.py",
    "line_number": 821,
    "line": "    # TODO: Support caching of lookup results (through a LRU cache, for example)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\reachability.py",
    "line_number": 316,
    "line": "    # TODO: This currently doesn't work with code like this:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\reachability.py",
    "line_number": 321,
    "line": "            # TODO: Guard against a local named sys, etc."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\renaming.py",
    "line_number": 114,
    "line": "                can_be_redefined = name != \"self\"  # TODO: Proper check"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\report.py",
    "line_number": 331,
    "line": "    # TODO: Handle line continuations (explicit and implicit) and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\report.py",
    "line_number": 352,
    "line": "            # TODO line continuation (\\)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\scope.py",
    "line_number": 3,
    "line": "TODO: Use everywhere where we track targets, including in mypy.errors."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 1234,
    "line": "        # TODO: avoid modifying items."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 1273,
    "line": "            # TODO: should we enforce decorated overloads consistency somehow?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 1368,
    "line": "            # TODO: support decorated overloaded functions properly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 1441,
    "line": "                # TODO: also allow omitting an implementation for abstract methods in ABCs?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 1613,
    "line": "        # TODO: better don't modify them at all."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 1681,
    "line": "                # TODO: support `@overload` funcs."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 1770,
    "line": "            # TODO: we should validate the upper bound is valid for a given kind."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 2058,
    "line": "                # TODO: remove special casing here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 2392,
    "line": "            # TODO: Nested classes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 2411,
    "line": "            # TODO: Putting local classes into globals breaks assumptions in fine-grained"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 2773,
    "line": "                # TODO: add a metaclass conflict check if there is another metaclass."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 3616,
    "line": "        # TODO: this is a best-effort quick fix, we should avoid the need to manually sync this,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 3937,
    "line": "            # TODO: find a more robust way to track the order of definitions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 4497,
    "line": "                    # TODO: should we also set lval.kind = MDEF?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 4978,
    "line": "            # TODO: clean this up, see #6422."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 5403,
    "line": "                        # TODO: Deal with this better"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 5987,
    "line": "        # TODO: this needs a clean-up."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 6307,
    "line": "        # TODO: Forward reference to name imported in class body is not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 6510,
    "line": "        # TODO: unify/clean-up/simplify lookup methods, see #4157."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 6519,
    "line": "                # TODO: More explicit handling of incomplete refs?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 6542,
    "line": "                # TODO: More explicit handling of incomplete refs?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 6564,
    "line": "            # TODO: assert len(args) == len(node.defn.type_vars)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 6578,
    "line": "            # TODO: assert len(args) == len(node.defn.type_vars)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 6645,
    "line": "        # TODO: currently this is only used by named tuples and typed dicts."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 6676,
    "line": "        TODO: Prevent plugins from replacing nodes, as it could cause problems?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal.py",
    "line_number": 7155,
    "line": "            # TODO: Using previous symbol node may give wrong line. We should use"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal_enum.py",
    "line_number": 247,
    "line": "            # TODO: Allow dict(x=1, y=2) as a substitute for {'x': 1, 'y': 2}?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal_main.py",
    "line_number": 341,
    "line": "    # TODO: Move initialization to somewhere else"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal_main.py",
    "line_number": 462,
    "line": "    # TODO: Move more class-related hooks here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal_main.py",
    "line_number": 474,
    "line": "            # TODO: remove special casing here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal_namedtuple.py",
    "line_number": 354,
    "line": "        # TODO: Share code with check_argument_count in checkexpr.py?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal_shared.py",
    "line_number": 294,
    "line": "        # TODO: this duplicates some logic in typeops.tuple_fallback()."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal_typeargs.py",
    "line_number": 99,
    "line": "            # TODO: can we move this logic to typeanal.py?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal_typeargs.py",
    "line_number": 240,
    "line": "        # TODO: this should probably be .has_base(\"builtins.tuple\"), also elsewhere. This is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal_typeddict.py",
    "line_number": 276,
    "line": "            # TODO: simple zip can't be used for variadic types."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal_typeddict.py",
    "line_number": 502,
    "line": "        # TODO: Share code with check_argument_count in checkexpr.py?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\semanal_typeddict.py",
    "line_number": 508,
    "line": "        # TODO: Support keyword arguments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\solve.py",
    "line_number": 161,
    "line": "                # TODO: failing to choose may cause leaking type variables,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\solve.py",
    "line_number": 220,
    "line": "            # TODO: support backtracking lower/upper bound choices and order within SCCs."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\solve.py",
    "line_number": 357,
    "line": "        # TODO: support more cases for ParamSpecs/TypeVarTuples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\solve.py",
    "line_number": 468,
    "line": "    # TODO: what if secondary constraints result in inference against polymorphic actual?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\solve.py",
    "line_number": 520,
    "line": "    TODO: a cleaner solution may be to avoid inferring such constraints in first place, but"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stats.py",
    "line_number": 110,
    "line": "        # TODO: Handle --check-untyped-defs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stats.py",
    "line_number": 184,
    "line": "        self.record_line(o.line, TYPE_PRECISE)  # TODO: Look at base classes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stats.py",
    "line_number": 271,
    "line": "            pass  # TODO: Handle overloaded functions, etc."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stats.py",
    "line_number": 368,
    "line": "            # TODO: What if there is an error in special form definition?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubdoc.py",
    "line_number": 80,
    "line": "    type_args: str = \"\"  # TODO implement in stubgenc and remove the default"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubgen.py",
    "line_number": 34,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubgen.py",
    "line_number": 375,
    "line": "        # TODO: Required for among other things dataclass.field default_factory"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubgen.py",
    "line_number": 429,
    "line": "    # TODO: Filter out local variable and class attribute references"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubgen.py",
    "line_number": 1007,
    "line": "        # TODO: Add support for generic NamedTuples. Requires `Generic` as base class."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubgen.py",
    "line_number": 1063,
    "line": "            # TODO: Add support for generic TypedDicts. Requires `Generic` as base class."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubgen.py",
    "line_number": 1234,
    "line": "        # TODO: Only do this at module top level."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubgen.py",
    "line_number": 1281,
    "line": "        # TODO: support other possible cases, where initializer is important"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubgen.py",
    "line_number": 1442,
    "line": "    # TODO: Traverse into nested definitions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubgenc.py",
    "line_number": 776,
    "line": "            # TODO: Is this always object?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubgenc.py",
    "line_number": 825,
    "line": "                    # TODO: We should support __new__."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubtest.py",
    "line_number": 136,
    "line": "        # TODO: This is hacky, use error codes or something more resilient"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubtest.py",
    "line_number": 473,
    "line": "    # TODO: check that metaclasses are identical?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubtest.py",
    "line_number": 548,
    "line": "    # TODO: On Python <3.11, __init__ methods on Protocol classes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubtest.py",
    "line_number": 598,
    "line": "            # TODO: pass more information about ancestors of nodes/objects to verify, so we don't"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubtest.py",
    "line_number": 1147,
    "line": "    # TODO: support `@type_check_only` decorator"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubtest.py",
    "line_number": 1166,
    "line": "    # TODO: Mypy *does* allow properties where e.g. the getter is abstract but the setter is not;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubtest.py",
    "line_number": 1180,
    "line": "    # TODO: Should call _verify_final_method here,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubtest.py",
    "line_number": 1191,
    "line": "        # TODO: This is a little hacky, but the addition here is super useful"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubtest.py",
    "line_number": 1465,
    "line": "        # TODO: remove the following from this list"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubutil.py",
    "line_number": 121,
    "line": "    # TODO: Support custom interpreters."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubutil.py",
    "line_number": 241,
    "line": "    # TODO: Generate valid string representation for callable types."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\stubutil.py",
    "line_number": 242,
    "line": "    # TODO: Use short names for Instances."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 301,
    "line": "        # TODO: should we consider all types proper subtypes of UnboundType and/or"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 449,
    "line": "        # TODO: it actually does matter, figure out more principled logic about this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 595,
    "line": "                            # TODO: everywhere else ParamSpecs are handled as invariant."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 618,
    "line": "            # TODO: this is a bit arbitrary, we should only skip Any-related cases."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 665,
    "line": "        # TODO: Ideally we should not need this (since it is not a real type)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 679,
    "line": "                # TODO: this should pass the current value, but then couple tests fail."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 728,
    "line": "                # TODO: we should probably explicitly exclude self-types in this case."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 766,
    "line": "                    # TODO: We shouldn't need this special case. This is currently needed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 895,
    "line": "                # TODO: should we pass on the full subtype_context here and below?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 1071,
    "line": "            # TODO: What's the right thing to do here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 1094,
    "line": "                # TODO: Strictly speaking, the type builtins.type is considered equivalent to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 1253,
    "line": "    # TODO: this code shares some logic with checkmember.analyze_member_access,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 1692,
    "line": "    # TODO: are we handling UnpackType correctly here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 1822,
    "line": "    # TODO: partial overlap logic is flawed for positions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 1969,
    "line": "            # TODO: Implement more robust support for runtime isinstance() checks, see issue #3827."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 1983,
    "line": "    # TODO: Add more special cases."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\subtypes.py",
    "line_number": 1994,
    "line": "    # TODO Should List[int] be more precise than List[Any]?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\suggestions.py",
    "line_number": 10,
    "line": "There are a bunch of TODOs here:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\suggestions.py",
    "line_number": 537,
    "line": "        # TODO: Also return OverloadedFuncDef -- currently these are ignored."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\suggestions.py",
    "line_number": 622,
    "line": "        # TODO: Handle nested functions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\suggestions.py",
    "line_number": 626,
    "line": "            # TODO: add support for OverloadedFuncDef."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\suggestions.py",
    "line_number": 811,
    "line": "    # TODO: Probably a lot"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\suggestions.py",
    "line_number": 877,
    "line": "        # TODO: use extended callables?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\suggestions.py",
    "line_number": 980,
    "line": "    # TODO: Refining of builtins.tuple, Type?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\treetransform.py",
    "line_number": 130,
    "line": "    TODO nested classes and functions have not been tested well enough"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 539,
    "line": "        # TODO: should these be re-analyzed to get rid of this inconsistency?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 567,
    "line": "        # TODO: Move error message generation to messages.py. We'd first"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 808,
    "line": "            # TODO: verify this is unreachable and replace with an assert?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 888,
    "line": "                    # TODO: should we allow NamedTuples generic in ParamSpec?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 906,
    "line": "                    # TODO: should we allow TypedDicts generic in ParamSpec?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 999,
    "line": "        # TODO: Move this message building logic to messages.py."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 1046,
    "line": "        # TODO: Would it be better to always return Any instead of UnboundType"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 1094,
    "line": "        # TODO: should we do something here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 1122,
    "line": "        # TODO: attach namespace for nested free type variables (these appear in return type only)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 1155,
    "line": "                    # TODO: it would be better to avoid this get_proper_type() call."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 1207,
    "line": "        # TODO: What if it's an Instance? Then use t.type.fullname?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 1225,
    "line": "        # TODO: What if it's an Instance? Then use t.type.fullname?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 1317,
    "line": "            # TODO: rework"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 1434,
    "line": "            # TODO: Handle non-TypeInfo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 1751,
    "line": "            # TODO: Once we start adding support for enums, make sure we report a custom"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 1988,
    "line": "            # TODO: handle forward references here, they appear as Unpack[Any]."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 2166,
    "line": "    # TODO: can this cause an infinite recursion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 2268,
    "line": "    # TODO: we need to check args validity w.r.t alias.alias_tvars."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 2318,
    "line": "                # TODO Handle TypeVarTuple defaults"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 2352,
    "line": "    # TODO: this doesn't really need to be a translator, but we don't have a trivial visitor."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 2399,
    "line": "    # TODO: should we handle such aliases using type_recursion counter and some large limit?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 2497,
    "line": "    # TODO: combine logic with instantiate_type_alias()."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeanal.py",
    "line_number": 2500,
    "line": "        # TODO: is it OK to fill with TypeOfAny.from_error instead of special form?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeops.py",
    "line_number": 340,
    "line": "        # TODO: infer bounds on the type of *args?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeops.py",
    "line_number": 358,
    "line": "            # TODO: type check method override (see #7861)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeops.py",
    "line_number": 439,
    "line": "    # TODO: use value restrictions to produce a union?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeops.py",
    "line_number": 759,
    "line": "    # TODO(PEP612): fix for ParamSpecType"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeops.py",
    "line_number": 785,
    "line": "            # TODO: should we instead always set the type in semantic analyzer?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeops.py",
    "line_number": 805,
    "line": "    # TODO: somewhat unfortunate duplication with prepare_method_signature in semanal"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeops.py",
    "line_number": 844,
    "line": "    # TODO: See if we can eliminate this function and call the below one directly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeops.py",
    "line_number": 1048,
    "line": "    # TODO: should we always use this function instead of get_type_vars() above?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typeops.py",
    "line_number": 1097,
    "line": "    # TODO: support other types (see ExpressionChecker.has_member())?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 49,
    "line": "# TODO: confirm that we're happy with representing enums (and the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 332,
    "line": "        # TODO: this logic duplicates the one in expand_type_by_instance()."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 1553,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 1616,
    "line": "        # TODO: variables don't really belong here, but they are used to allow hacky support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 1670,
    "line": "    # TODO: here is a lot of code duplication with Callable type, fix this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 1865,
    "line": "                # TODO: should we assert that only ARG_STAR contain ParamSpecType?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 1893,
    "line": "            # TODO: decide how to add more info here (file, line, column)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 2123,
    "line": "        # TODO: confirm that all arg kinds are positional"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 2260,
    "line": "        # TODO: As an optimization, leave out everything related to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 2286,
    "line": "        # TODO: Set definition to the containing SymbolNode?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 2311,
    "line": "# TODO: use this in more places in checkexpr.py etc?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 2537,
    "line": "                # TODO: there some additional cases we can support for homogeneous variadic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 2562,
    "line": "    TODO: The fallback structure is perhaps overly complicated."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 2824,
    "line": "    # TODO: We should consider moving this branch to the `can_be_true`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 2923,
    "line": "        # TODO: maybe switch this to True during type-checking pass?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 3198,
    "line": "    # TODO: store the name of original type alias on this type, so we can show it in errors."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types.py",
    "line_number": 3597,
    "line": "    # TODO: Should we update locations of other Type subclasses?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typestate.py",
    "line_number": 272,
    "line": "                        # TODO: avoid everything from typeshed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types_utils.py",
    "line_number": 89,
    "line": "    # TODO: what else cannot be present in `type[...]`?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\types_utils.py",
    "line_number": 169,
    "line": "                # TODO: verify that we can only have a TypeVarTuple here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typetraverser.py",
    "line_number": 136,
    "line": "        # TODO: sometimes we want to traverse target as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typevars.py",
    "line_number": 26,
    "line": "    # TODO: why do we need to keep both typ.type_vars and typ.defn.type_vars?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\typevars.py",
    "line_number": 59,
    "line": "    # TODO: do we need to also handle typeddict_type here and below?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\type_visitor.py",
    "line_number": 266,
    "line": "            # TODO: This appears to be unsafe."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\type_visitor.py",
    "line_number": 281,
    "line": "            # TODO: This appears to be unsafe."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\type_visitor.py",
    "line_number": 350,
    "line": "    # TODO: check that we don't have existing violations of this rule."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\type_visitor.py",
    "line_number": 441,
    "line": "        # TODO: Ideally we should fire subvisitors here (or use caching) if we care"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\type_visitor.py",
    "line_number": 581,
    "line": "        # TODO: Ideally we should fire subvisitors here (or use caching) if we care"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\util.py",
    "line_number": 407,
    "line": "        # TODO: What about getsetdescriptors that act like properties???"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\util.py",
    "line_number": 737,
    "line": "                # TODO: detecting source code highlights through an indent can be surprising."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\util.py",
    "line_number": 787,
    "line": "            # TODO: detecting source code highlights through an indent can be surprising."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\util.py",
    "line_number": 925,
    "line": "            # TODO: If we don't sort keys here, testIncrementalInternalScramble fails"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\visitor.py",
    "line_number": 362,
    "line": "    TODO: make the default return value explicit, then turn on"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\visitor.py",
    "line_number": 371,
    "line": "    # TODO: We have a visit_var method, but no visit_typeinfo or any"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\dmypy\\client.py",
    "line_number": 683,
    "line": "    # TODO: Other errors, e.g. ValueError, UnicodeError"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\attrs.py",
    "line_number": 591,
    "line": "                # TODO: It would be nice to type-check these rather than remove them."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\attrs.py",
    "line_number": 644,
    "line": "    # TODO: Check for attr.NOTHING"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\attrs.py",
    "line_number": 698,
    "line": "    # TODO: Support complex converters, e.g. lambdas, calls, etc."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\attrs.py",
    "line_number": 753,
    "line": "        # TODO: should we send a fail if converter_expr.min_args > 1?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\attrs.py",
    "line_number": 999,
    "line": "    # TODO: Combine this with the code build_namedtuple_typeinfo to support both."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\dataclasses.py",
    "line_number": 563,
    "line": "                # TODO: We shouldn't be performing type operations during the main"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\dataclasses.py",
    "line_number": 849,
    "line": "                        # TODO: we can infer what's inside `**` and try to collect it."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\dataclasses.py",
    "line_number": 1041,
    "line": "# TODO: we can potentially get the function signature hook to allow returning a union"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\functools.py",
    "line_number": 136,
    "line": "        # TODO: handle overloads, just fall back to whatever the non-plugin code does"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\functools.py",
    "line_number": 273,
    "line": "            # TODO: I assume that bound and fn_type have the same arguments. It appears this isn't"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\proper_plugin.py",
    "line_number": 112,
    "line": "            # TODO: introduce a SyntheticType base to simplify this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\proper_plugin.py",
    "line_number": 147,
    "line": "            # TODO: call the hook on the overload as a whole?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\singledispatch.py",
    "line_number": 91,
    "line": "    # TODO: figure out if there is some more reliable way of getting context information, so this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\singledispatch.py",
    "line_number": 130,
    "line": "    # TODO: check that there's only one argument"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\singledispatch.py",
    "line_number": 146,
    "line": "        # TODO: do more checking for registered functions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\plugins\\singledispatch.py",
    "line_number": 177,
    "line": "        # TODO: report an error here that singledispatch requires at least one argument"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\astdiff.py",
    "line_number": 180,
    "line": "        # TODO: cross_ref?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\astdiff.py",
    "line_number": 238,
    "line": "        # TODO: info"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\astmerge.py",
    "line_number": 227,
    "line": "        # TODO additional things?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\aststrip.py",
    "line_number": 26,
    "line": "  TODO: It would be more principled and less fragile to reset everything"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\aststrip.py",
    "line_number": 115,
    "line": "            # TODO: this is a hot fix, we should delete all names,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\deps.py",
    "line_number": 198,
    "line": "    # TODO: Add tests for this function."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\deps.py",
    "line_number": 205,
    "line": "                # TODO: Recurse into top-level statements and class bodies but skip functions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\deps.py",
    "line_number": 210,
    "line": "            # TODO: Methods in nested classes."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\deps.py",
    "line_number": 981,
    "line": "        # TODO: Now that type aliases are its own kind of types we can simplify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\mergecheck.py",
    "line_number": 30,
    "line": "        # TODO: Everything should have a proper full name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\update.py",
    "line_number": 443,
    "line": "        # TODO: What to do with stale dependencies?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\update.py",
    "line_number": 710,
    "line": "    # TODO: Remove deps for the module (this only affects memory use, not correctness)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\update.py",
    "line_number": 794,
    "line": "                # TODO: Some __* names cause mistriggers. Fix the underlying issue instead of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\update.py",
    "line_number": 857,
    "line": "        todo, unloaded, stale_protos = find_targets_recursive("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\update.py",
    "line_number": 860,
    "line": "        # TODO: we sort to make it deterministic, but this is *incredibly* ad hoc"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\update.py",
    "line_number": 867,
    "line": "                if id not in todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\update.py",
    "line_number": 868,
    "line": "                    todo[id] = set()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\update.py",
    "line_number": 871,
    "line": "                todo[id].update(more_nodes)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\update.py",
    "line_number": 879,
    "line": "        # TODO: Preserve order (set is not optimal)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\update.py",
    "line_number": 880,
    "line": "        for id, nodes in sorted(todo.items(), key=lambda x: x[0]):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\server\\update.py",
    "line_number": 915,
    "line": "    # TODO: Don't rely on a set, since the items are in an unpredictable order."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\data.py",
    "line_number": 29,
    "line": "# TODO: support more debuggers"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\data.py",
    "line_number": 314,
    "line": "        # TODO: add a better error message for when someone uses skip and xfail at the same time"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\helpers.py",
    "line_number": 16,
    "line": "# TODO: avoid aliasing - import and subclass TestCase directly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\helpers.py",
    "line_number": 347,
    "line": "            # TODO: support specifying targets via the flags pragma"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\testdeps.py",
    "line_number": 80,
    "line": "            # TODO: Should perhaps not return None here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\testdiff.py",
    "line_number": 68,
    "line": "            # TODO: Is it okay to return None?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\testfinegrained.py",
    "line_number": 66,
    "line": "            # TODO: In caching mode we currently don't well support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\testmerge.py",
    "line_number": 120,
    "line": "            # TODO: Is it okay to return None?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\testsolve.py",
    "line_number": 98,
    "line": "        # TODO: figure out what this should be after changes to meet(any, X)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\teststubtest.py",
    "line_number": 2295,
    "line": "        # TODO: test abstract properties with setters"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\testsubtypes.py",
    "line_number": 73,
    "line": "        # TODO make this work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\testtypegen.py",
    "line_number": 32,
    "line": "            options.strict_optional = False  # TODO: Enable strict optional checking"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\testtypes.py",
    "line_number": 873,
    "line": "        # TODO: this can be more precise than \"object\", see a comment in mypy/join.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\testtypes.py",
    "line_number": 1069,
    "line": "    # TODO: Function types + varargs and default args."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\typefixture.py",
    "line_number": 100,
    "line": "        self.functioni = self.make_type_info(\"builtins.function\")  # function TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypy\\test\\typefixture.py",
    "line_number": 146,
    "line": "        self.function = Instance(self.functioni, [])  # function TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\build.py",
    "line_number": 101,
    "line": "    # TODO: Is there something else we should do to fail?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\build.py",
    "line_number": 439,
    "line": "        # TODO: unique names?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\namegen.py",
    "line_number": 67,
    "line": "        # TODO: Support unicode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\namegen.py",
    "line_number": 90,
    "line": "    # TODO: Support unicode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emit.py",
    "line_number": 604,
    "line": "        # TODO: Verify refcount handling."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emit.py",
    "line_number": 632,
    "line": "                # TODO: Range check for fixed-width types?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emit.py",
    "line_number": 863,
    "line": "        # TODO: Verify refcount handling."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emit.py",
    "line_number": 938,
    "line": "            # TODO: Don't use __float__ and __index__"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emit.py",
    "line_number": 962,
    "line": "            self.emit_line(failure)  # TODO: Decrease refcount?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emit.py",
    "line_number": 1003,
    "line": "        # TODO: Always generate a new reference (if a reference type)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emit.py",
    "line_number": 1036,
    "line": "            # TODO: Fail if dest is None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitclass.py",
    "line_number": 41,
    "line": "# TODO: Add remaining dunder methods"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitclass.py",
    "line_number": 275,
    "line": "        # TODO: They should get members in the struct instead of doing this nonsense."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitclass.py",
    "line_number": 685,
    "line": "    # TODO: Check and unbox arguments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitfunc.py",
    "line_number": 228,
    "line": "                # TODO: What about empty tuple?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitfunc.py",
    "line_number": 332,
    "line": "            # TODO: pre-calculate the mapping to make this faster."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitfunc.py",
    "line_number": 334,
    "line": "            # TODO: reuse these names somehow?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitfunc.py",
    "line_number": 623,
    "line": "        # TODO: Better escaping of backspaces and such"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitfunc.py",
    "line_number": 711,
    "line": "            # TODO: This may set errno as a side effect, that is a little sketchy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitfunc.py",
    "line_number": 728,
    "line": "        # TODO: we shouldn't dereference to type that are pointer type so far"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitfunc.py",
    "line_number": 744,
    "line": "        # TODO: support tuple type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitmodule.py",
    "line_number": 1110,
    "line": "        # TODO: Support fastcall for __init__."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitwrapper.py",
    "line_number": 844,
    "line": "    # TODO: Use this for more wrappers"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitwrapper.py",
    "line_number": 928,
    "line": "            # TODO: The Py_RETURN macros return the correct PyObject * with reference count"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\codegen\\emitwrapper.py",
    "line_number": 957,
    "line": "            # TODO: Tracebacks?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\ir\\func_ir.py",
    "line_number": 68,
    "line": "    # TODO: Track if method?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\ir\\func_ir.py",
    "line_number": 209,
    "line": "    # TODO: move this to FuncIR?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\ir\\ops.py",
    "line_number": 594,
    "line": "        return_type: RType,  # TODO: What about generic?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\ir\\ops.py",
    "line_number": 1002,
    "line": "    # TODO: Make it more explicit at IR level that this always raises"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\ir\\ops.py",
    "line_number": 1384,
    "line": "        # TODO: for now we enforce that the src memory address should be Py_ssize_t"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\ir\\ops.py",
    "line_number": 1718,
    "line": "# TODO: Should the following definition live somewhere else?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\ir\\pprint.py",
    "line_number": 167,
    "line": "        # TODO: Remove bool check (it's unboxed)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\ir\\pprint.py",
    "line_number": 174,
    "line": "        # TODO: Remove bool check (it's unboxed)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\ir\\pprint.py",
    "line_number": 181,
    "line": "        # TODO: Display long name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\ir\\rtypes.py",
    "line_number": 50,
    "line": "    # TODO: This shouldn't be specific to C or a string"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\ir\\rtypes.py",
    "line_number": 214,
    "line": "            # TODO: Invent an overlapping error value?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\builder.py",
    "line_number": 1104,
    "line": "        # TODO: use native calls for any decorated functions which have all their decorators"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\builder.py",
    "line_number": 1287,
    "line": "            # TODO: Don't special case IntExpr"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\classdef.py",
    "line_number": 196,
    "line": "            # TODO: Generate glue method if needed?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\classdef.py",
    "line_number": 197,
    "line": "            # TODO: Do we need interpreted glue methods? Maybe not?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\classdef.py",
    "line_number": 239,
    "line": "        # TODO: Maybe generate more precise types for annotations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\classdef.py",
    "line_number": 660,
    "line": "            # TODO: is it possible to determine whether a non-string annotation is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\classdef.py",
    "line_number": 715,
    "line": "    # TODO: Support nested statements"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\context.py",
    "line_number": 53,
    "line": "        # TODO: add field for ret_type: RType = none_rprimitive"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\expression.py",
    "line_number": 178,
    "line": "        # TODO: Behavior currently only defined for Var, FuncDef and MypyFile node types."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\expression.py",
    "line_number": 244,
    "line": "            # TODO: Handle other item types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\expression.py",
    "line_number": 438,
    "line": "    # TODO: We could support it when it is a parent class in many cases?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\expression.py",
    "line_number": 791,
    "line": "    # TODO: Don't produce an expression when used in conditional context"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\format_str_tokenizer.py",
    "line_number": 54,
    "line": "        # TODO: Match specifiers instead of using whole_seq"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\for_helpers.py",
    "line_number": 726,
    "line": "        # TODO: Don't reload the length each time when iterating an immutable sequence?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\function.py",
    "line_number": 215,
    "line": "    # TODO: do something about abstract methods."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\function.py",
    "line_number": 465,
    "line": "            # TODO: Support contravariant subtyping in the input argument for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\function.py",
    "line_number": 498,
    "line": "    # TODO: Support property setters in non-extension classes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\function.py",
    "line_number": 1027,
    "line": "        # TODO: avoid recomputing the native IDs for all the functions every time we find a new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\function.py",
    "line_number": 1036,
    "line": "        # TODO: avoid reloading the registry here if we just created it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\generator.py",
    "line_number": 325,
    "line": "    # TODO: Use the right type here instead of object?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\ll_builder.py",
    "line_number": 189,
    "line": "# TODO: The threshold is a randomly chosen number which needs further"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\ll_builder.py",
    "line_number": 517,
    "line": "        # TODO: i32 on 64-bit platform"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\ll_builder.py",
    "line_number": 813,
    "line": "                # TODO: We could try harder to avoid creating basic blocks in the common case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\ll_builder.py",
    "line_number": 1332,
    "line": "        # TODO: modify 'str' to use same interface as 'compare_bytes' as it avoids"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\ll_builder.py",
    "line_number": 1606,
    "line": "            # TODO: Overflow? Unsigned?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\ll_builder.py",
    "line_number": 1940,
    "line": "            # TODO: Generate PrimitiveOps here and transform them into CallC"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\ll_builder.py",
    "line_number": 1967,
    "line": "            assert formal_type is not None  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\ll_builder.py",
    "line_number": 2010,
    "line": "                # formal is not None and # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\ll_builder.py",
    "line_number": 2238,
    "line": "            # TODO: Support use_pyssize_t"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\ll_builder.py",
    "line_number": 2309,
    "line": "        # TODO: Optimize cases where a single operation can handle multiple union items"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\mapper.py",
    "line_number": 137,
    "line": "            # TODO: Erase to union if object has value restriction?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\match.py",
    "line_number": 128,
    "line": "        # TODO: use faster instance check for native classes (while still"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\match.py",
    "line_number": 177,
    "line": "                # TODO: use faster \"get_attr\" method instead when calling on native or"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\match.py",
    "line_number": 188,
    "line": "            # TODO: same as above \"get_attr\" comment"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\prebuildvisitor.py",
    "line_number": 123,
    "line": "        # TODO: What about overloaded functions?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\prebuildvisitor.py",
    "line_number": 176,
    "line": "                # TODO: Remove from the orig_func free_variables set?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\prepare.py",
    "line_number": 122,
    "line": "            # TODO: what else?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\prepare.py",
    "line_number": 206,
    "line": "        # TODO: do something about abstract methods here. Currently, they are handled just like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\prepare.py",
    "line_number": 451,
    "line": "    ir.property_types[attr_name] = attr_rtype  # TODO: Needed??"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\specialize.py",
    "line_number": 119,
    "line": "    # TODO: Allow special cases to have default args or named args. Currently they don't since"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\statement.py",
    "line_number": 662,
    "line": "    # TODO: handle break/continue"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\statement.py",
    "line_number": 923,
    "line": "    # TODO: do we want to use the right types here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\targets.py",
    "line_number": 30,
    "line": "        # TODO: object_rprimitive won't be right for user-defined classes. Store the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\vtable.py",
    "line_number": 42,
    "line": "            # TODO: don't generate a new entry when we overload without changing the type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\irbuild\\vtable.py",
    "line_number": 68,
    "line": "            # TODO: emit a wrapper for __init__ that raises or something"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\lower\\int_ops.py",
    "line_number": 73,
    "line": "        # TODO: introduce UnaryIntOp?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\test\\testutil.py",
    "line_number": 144,
    "line": "    # TODO: backport this to mypy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\test\\test_external.py",
    "line_number": 15,
    "line": "    # TODO: Get this to work on Windows."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\test\\test_run.py",
    "line_number": 184,
    "line": "            # TODO: Figure out a better approach, since this slows down tests."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\test\\test_run.py",
    "line_number": 309,
    "line": "            # TODO: find a way to automatically disable capturing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\test\\test_run.py",
    "line_number": 322,
    "line": "            # TODO: testDecorators1 hangs on 3.12, remove this once fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\transform\\copy_propagation.py",
    "line_number": 44,
    "line": "                # TODO: Something needs LoadErrorValue assignments to be preserved?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\transform\\refcount.py",
    "line_number": 250,
    "line": "    # TODO: be able to share *partial* results"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\mypyc\\transform\\refcount.py",
    "line_number": 268,
    "line": "    # TODO: Never initialized values??"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\cloudpickle\\cloudpickle.py",
    "line_number": 1301,
    "line": "        # TODO: decorrelate reducer_override (which is tied to CPython's"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\codegen.py",
    "line_number": 392,
    "line": "                                        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\codegen.py",
    "line_number": 742,
    "line": "        # TODO: we shouldn't need to recreate the LLVM module object"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler.py",
    "line_number": 78,
    "line": "        doc=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler.py",
    "line_number": 83,
    "line": "        doc=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler.py",
    "line_number": 88,
    "line": "        doc=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler.py",
    "line_number": 98,
    "line": "        doc=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler.py",
    "line_number": 103,
    "line": "        doc=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler.py",
    "line_number": 115,
    "line": "        doc=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler.py",
    "line_number": 120,
    "line": "        doc=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler.py",
    "line_number": 125,
    "line": "        doc=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler.py",
    "line_number": 130,
    "line": "        doc=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler.py",
    "line_number": 135,
    "line": "        doc=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler.py",
    "line_number": 140,
    "line": "        doc=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler_machinery.py",
    "line_number": 173,
    "line": "    # TODO: Eventually enable this, it enforces self consistency after each pass"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\compiler_machinery.py",
    "line_number": 321,
    "line": "            # TODO: Add in self consistency enforcement for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\controlflow.py",
    "line_number": 515,
    "line": "        # The algorithm implemented here uses a todo-list as described"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\controlflow.py",
    "line_number": 534,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\controlflow.py",
    "line_number": 538,
    "line": "                todo.append(n)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\controlflow.py",
    "line_number": 540,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\controlflow.py",
    "line_number": 541,
    "line": "            n = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\controlflow.py",
    "line_number": 552,
    "line": "                todo.extend(succs_table[n])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\controlflow.py",
    "line_number": 896,
    "line": "        # TODO: Looplifting requires the loop entry be its own block."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\controlflow.py",
    "line_number": 906,
    "line": "        # TODO: WithLifting requires the loop entry be its own block."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\debuginfo.py",
    "line_number": 146,
    "line": "            # TODO: Is there a better way of determining \"this is a complex"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\dispatcher.py",
    "line_number": 1056,
    "line": "        # TODO: refactor this to not assume on `cpu_target`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\extending.py",
    "line_number": 126,
    "line": "    # TODO: abort now if the kwarg 'target' relates to an unregistered target,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\extending.py",
    "line_number": 187,
    "line": "    # TODO implement setters"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\funcdesc.py",
    "line_number": 152,
    "line": "        kws = ()        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\inline_closurecall.py",
    "line_number": 762,
    "line": "        # TODO: handle stararg"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\inline_closurecall.py",
    "line_number": 775,
    "line": "        # TODO: handle arguments for make_function case similar to function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\interpreter.py",
    "line_number": 2619,
    "line": "        # TODO: refactor this pattern. occurred several times."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\interpreter.py",
    "line_number": 2988,
    "line": "            self.store(self.get(val), res) # TODO: just a lazy hack"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\interpreter.py",
    "line_number": 2998,
    "line": "            # TODO: fifth lowest bit now indicates a forced version to bool."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\ir_utils.py",
    "line_number": 459,
    "line": "        # TODO: raise NotImplementedError(\"no replacement for IR node: \", stmt)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\ir_utils.py",
    "line_number": 645,
    "line": "    # TODO: find mutable args that are not definitely assigned instead of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\ir_utils.py",
    "line_number": 688,
    "line": "            # TODO: remove other nodes like SetItem etc."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\ir_utils.py",
    "line_number": 874,
    "line": "                    # TODO: sometimes gufunc backend creates duplicate code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\ir_utils.py",
    "line_number": 917,
    "line": "    # TODO: add more immutable types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\ir_utils.py",
    "line_number": 1820,
    "line": "    swapped = {} # TODO: get this from diagnostics store"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\ir_utils.py",
    "line_number": 1826,
    "line": "    # TODO: DO NOT ADD MORE THINGS HERE!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\lowering.py",
    "line_number": 743,
    "line": "        # TODO: is this looks dodgy ..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\new_boxing.py",
    "line_number": 532,
    "line": "    # TODO check matching dtype."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\new_boxing.py",
    "line_number": 545,
    "line": "    # TODO: here we have minimal typechecking by the itemsize."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\object_mode_passes.py",
    "line_number": 84,
    "line": "        from numba.core.compiler import _LowerResult  # TODO: move this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\old_boxing.py",
    "line_number": 481,
    "line": "    # TODO check matching dtype."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\old_boxing.py",
    "line_number": 494,
    "line": "    # TODO: here we have minimal typechecking by the itemsize."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\target_extension.py",
    "line_number": 58,
    "line": "    # TODO: Should this logic be reversed to prefer TLS override?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typed_passes.py",
    "line_number": 489,
    "line": "            from numba.core.compiler import _LowerResult  # TODO: move this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typed_passes.py",
    "line_number": 898,
    "line": "            # TODO: move this into PostProcessor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typeinfer.py",
    "line_number": 137,
    "line": "    TODO: It is possible to optimize constraint propagation to consider only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\untyped_passes.py",
    "line_number": 1055,
    "line": "                # TODO: check the loop head has literal_unroll, if it does but"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\annotations\\type_annotations.py",
    "line_number": 99,
    "line": "                        # TODO: fix parfor lowering so that typemap is valid."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typing\\bufproto.py",
    "line_number": 22,
    "line": "        # TODO: FIXME We need to modify the following Map to use Python Types."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typing\\new_builtins.py",
    "line_number": 275,
    "line": "    # TODO add 3 operand version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typing\\new_cmathdecl.py",
    "line_number": 10,
    "line": "# TODO: support non-complex arguments (floats and ints)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typing\\new_cmathdecl.py",
    "line_number": 12,
    "line": "# TODO: New Type System"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typing\\new_mathdecl.py",
    "line_number": 6,
    "line": "# TODO: New Type System"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typing\\npydecl.py",
    "line_number": 308,
    "line": "# It also works as a nice TODO list for ufunc support :)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typing\\old_builtins.py",
    "line_number": 280,
    "line": "    # TODO add 3 operand version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typing\\old_cmathdecl.py",
    "line_number": 10,
    "line": "# TODO: support non-complex arguments (floats and ints)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\core\\typing\\templates.py",
    "line_number": 690,
    "line": "                # this leads to an internal state mess at present. TODO: Fix!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\cpython\\charseq.py",
    "line_number": 656,
    "line": "        # return bytes(s).isupper()  # TODO: implement isupper for Bytes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\cpython\\charseq.py",
    "line_number": 671,
    "line": "        # return bytes(s).upper()  # TODO: implement upper for Bytes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\cpython\\listobj.py",
    "line_number": 1191,
    "line": "    # TODO: To make this work, need consts as slice for start/end so as to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\cpython\\new_hashing.py",
    "line_number": 712,
    "line": "        # TODO: this branch needs testing, needs a CPython setup for it!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\cpython\\old_hashing.py",
    "line_number": 708,
    "line": "        # TODO: this branch needs testing, needs a CPython setup for it!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\cpython\\unicode.py",
    "line_number": 1853,
    "line": "                    # TODO: it might be possible to break here if the kind"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\cuda\\random.py",
    "line_number": 28,
    "line": "# deferred so that import is quick, and Sphinx autodoc works.  We are also"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\cuda\\vector_types.py",
    "line_number": 160,
    "line": "    # TODO: speed up with memoization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\cuda\\simulator\\cudadrv\\devicearray.py",
    "line_number": 205,
    "line": "    # TODO: Add inplace, bitwise, unary magic methods"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\experimental\\function_type.py",
    "line_number": 105,
    "line": "    # TODO: implement support for pytypes.FunctionType, ctypes.CFUNCTYPE"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\experimental\\jitclass\\base.py",
    "line_number": 582,
    "line": "    # TODO: extract the following into a common util"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\experimental\\jitclass\\overloads.py",
    "line_number": 134,
    "line": "    # TODO: use __iter__ if defined."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\np\\arrayobj.py",
    "line_number": 2386,
    "line": "    # TODO: support scalar a (issue #3469)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\np\\new_arraymath.py",
    "line_number": 1607,
    "line": "    #TODO: This needs rewriting to be closer to NumPy, particularly the nan/inf"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\np\\npyimpl.py",
    "line_number": 256,
    "line": "                # TODO: check why raising a dynamic exception here fails"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\np\\old_arraymath.py",
    "line_number": 1607,
    "line": "    #TODO: This needs rewriting to be closer to NumPy, particularly the nan/inf"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\np\\ufunc\\parallel.py",
    "line_number": 403,
    "line": "                    # TODO: Check that if MKL is present that it is a version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\np\\ufunc\\ufuncbuilder.py",
    "line_number": 339,
    "line": "    # TODO handle scalar"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\array_analysis.py",
    "line_number": 1305,
    "line": "                # TODO: support cases with some but not all integer values or"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\array_analysis.py",
    "line_number": 1552,
    "line": "        # TODO: getattr of npytypes.Record"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\array_analysis.py",
    "line_number": 2407,
    "line": "        # TODO: handle multi-D input arrays (calc array size)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\array_analysis.py",
    "line_number": 2847,
    "line": "        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\array_analysis.py",
    "line_number": 2851,
    "line": "        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\array_analysis.py",
    "line_number": 2900,
    "line": "        if dims[0] > 2:  # TODO: handle higher dimension cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor.py",
    "line_number": 222,
    "line": "    # TODO: investigate assert_equiv"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor.py",
    "line_number": 233,
    "line": "    # TODO: investigate assert_equiv"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor.py",
    "line_number": 236,
    "line": "    # TODO: evaluate dotvm implementation options"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor.py",
    "line_number": 250,
    "line": "    # TODO: investigate assert_equiv"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor.py",
    "line_number": 266,
    "line": "        # TODO: evaluate support for dotvm and enable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor.py",
    "line_number": 997,
    "line": "                # TODO: do a better job of tracking parfors that are not in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor.py",
    "line_number": 2126,
    "line": "        # TODO: add more calls"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor.py",
    "line_number": 2536,
    "line": "                    # TODO: support array mask optimization for prange"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor.py",
    "line_number": 2537,
    "line": "                    # TODO: refactor and simplify array mask optimization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor.py",
    "line_number": 4421,
    "line": "    # TODO: make it more accurate using ud-chains"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor.py",
    "line_number": 4944,
    "line": "    # TODO: save copies that are repeated in parfor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\parfors\\parfor_lowering.py",
    "line_number": 707,
    "line": "    # TODO: use prefix + class number instead of single char"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\stencils\\stencilparfor.py",
    "line_number": 246,
    "line": "                # TODO: Loosen this restriction to adhere to casting rules."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\stencils\\stencilparfor.py",
    "line_number": 413,
    "line": "                # TODO: Loosen this restriction to adhere to casting rules."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\testing\\notebook.py",
    "line_number": 81,
    "line": "            # TODO: This doesn't work right now as the generated output is too diverse to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\support.py",
    "line_number": 1239,
    "line": "        # TODO: add a way to not do this! un-finalizing is not a good idea"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_array_methods.py",
    "line_number": 1648,
    "line": "        # TODO: scalars are not tested (issue #3469)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_array_methods.py",
    "line_number": 1675,
    "line": "        # TODO: scalars are not tested (issue #3469)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_boundscheck.py",
    "line_number": 40,
    "line": "            # TODO: When we raise the same error message as numpy, test that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_boundscheck.py",
    "line_number": 57,
    "line": "            # TODO: When we raise the same error message as numpy, test that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_boundscheck.py",
    "line_number": 84,
    "line": "            # TODO: When we raise the same error message as numpy, test that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_boundscheck.py",
    "line_number": 140,
    "line": "            # TODO: When we raise the same error message as numpy, test that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_boundscheck.py",
    "line_number": 157,
    "line": "            # TODO: When we raise the same error message as numpy, test that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_boundscheck.py",
    "line_number": 179,
    "line": "            # TODO: When we raise the same error message as numpy, test that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_boundscheck.py",
    "line_number": 200,
    "line": "            # TODO: When we raise the same error message as numpy, test that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_comprehension.py",
    "line_number": 219,
    "line": "        # TODO: we can't really assert the error message for the above"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_generators.py",
    "line_number": 467,
    "line": "# TODO: fix nested generator and MemoryLeakMixin"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_indexing.py",
    "line_number": 712,
    "line": "        # TODO should be enable to handle this in NoPython mode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_lists.py",
    "line_number": 1136,
    "line": "        # TODO: this triggers a reflection error."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_lists.py",
    "line_number": 1205,
    "line": "        # TODO: this triggers a reflection error."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_mixed_tuple_unroller.py",
    "line_number": 1144,
    "line": "        # TODO: fix"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_np_functions.py",
    "line_number": 2032,
    "line": "            # TODO: Contiguity of result not consistent with numpy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_np_functions.py",
    "line_number": 2049,
    "line": "                # TODO: Contiguity of result not consistent with numpy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_np_randomgen.py",
    "line_number": 17,
    "line": "# TODO: Following testing tolerance adjustments should be reduced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_operators.py",
    "line_number": 687,
    "line": "        y_operands = [0, 1, 2]  # TODO native handling of 0 ** negative power"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_parallel_backend.py",
    "line_number": 33,
    "line": "# TODO: Put this in a subprocess so the address space is kept clean"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_parfors.py",
    "line_number": 881,
    "line": "        # TODO: count parfors after k-means fusion is working"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_parfors.py",
    "line_number": 1422,
    "line": "        # TODO: this should fuse"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_parfors.py",
    "line_number": 1429,
    "line": "        # TODO: this should also fuse"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_parfors_passes.py",
    "line_number": 42,
    "line": "        # TODO: refactor this with get_optimized_numba_ir() where this is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_stencils.py",
    "line_number": 509,
    "line": "        # TODO: ValueError should be thrown instead of LoweringError"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_stencils.py",
    "line_number": 1636,
    "line": "        #TODO: add check should this be implemented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_stencils.py",
    "line_number": 1994,
    "line": "        #TODO: add check should this be implemented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_stencils.py",
    "line_number": 3165,
    "line": "        #TODO: add check should this be implemented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_stencils.py",
    "line_number": 3193,
    "line": "        #TODO: add check should this be implemented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_svml.py",
    "line_number": 32,
    "line": "# TODO: [] and comments below mean unused/untested SVML function, it's to be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_svml.py",
    "line_number": 35,
    "line": "# TODO: this test does not support functions with more than 1 arguments yet"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_svml.py",
    "line_number": 81,
    "line": "# TODO: these functions are not vectorizable with complex types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_svml.py",
    "line_number": 112,
    "line": "    # TODO: refactor so this for-loop goes into umbrella function,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_svml.py",
    "line_number": 114,
    "line": "    # TODO: it will enable mixed usecases like prange + numpy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_svml.py",
    "line_number": 129,
    "line": "        avoids = []  # [scalar_func] - TODO: if possible, force LLVM to prevent"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_svml.py",
    "line_number": 192,
    "line": "        # TODO: address skipped tests below"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_typingerror.py",
    "line_number": 143,
    "line": "        TODO: #2931"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_ufuncs.py",
    "line_number": 1676,
    "line": "        _ufuncs.remove(np.signbit) # TODO: fix issue #758"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\test_withlifting.py",
    "line_number": 649,
    "line": "        # TODO: is this still the cases?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\tests\\doc_examples\\test_interval_example.py",
    "line_number": 220,
    "line": "        # TODO: This should produce a `RuntimeError`, but the `unbox` handler for `float` ignores"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\typed\\dictobject.py",
    "line_number": 362,
    "line": "        # TODO: the ptr_oldval is not used.  needed for refct"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\typed\\dictobject.py",
    "line_number": 1074,
    "line": "    # TODO: no handling of error state i.e. mutated dictionary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numba\\typed\\typedobjectutils.py",
    "line_number": 83,
    "line": "    # TODO: simplify default values; too many possible way to spell None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\__init__.py",
    "line_number": 546,
    "line": "    # TODO: Remove the environment variable entirely now that it is \"weak\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\distutils\\ccompiler_opt.py",
    "line_number": 568,
    "line": "        # TODO: ARM MSVC"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\distutils\\ccompiler_opt.py",
    "line_number": 863,
    "line": "        # TODO: don't write if the cache doesn't change"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\distutils\\ccompiler_opt.py",
    "line_number": 2489,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\distutils\\ccompiler_opt.py",
    "line_number": 2530,
    "line": "        # TODO: add support for 'markdown' format"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\distutils\\npy_pkg_config.py",
    "line_number": 372,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\distutils\\command\\build_src.py",
    "line_number": 548,
    "line": "            #XXX TODO: --inplace support for sdist command"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\distutils\\fcompiler\\gnu.py",
    "line_number": 254,
    "line": "        # TODO: could use -Xlinker here, if it's supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\distutils\\fcompiler\\intel.py",
    "line_number": 24,
    "line": "        # TODO: could use -Xlinker here, if it's supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\distutils\\fcompiler\\__init__.py",
    "line_number": 1032,
    "line": "# TODO: implement get_f90flags and use it in _compile similarly to get_f77flags"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\capi_maps.py",
    "line_number": 248,
    "line": "    # TODO: support Fortran `len` function with optional kind parameter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\capi_maps.py",
    "line_number": 504,
    "line": "        # TODO: Evaluate intent_flags here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\cfuncs.py",
    "line_number": 739,
    "line": "        /* TODO: change the type of `len` so that we can remove this */"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\cfuncs.py",
    "line_number": 799,
    "line": "            // TODO: update when numpy will support 1-byte and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\cfuncs.py",
    "line_number": 824,
    "line": "        /* TODO: This error (and most other) error handling needs cleaning. */"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\cfuncs.py",
    "line_number": 846,
    "line": "# TODO: These should be dynamically generated, too many mapped to int things,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
    "line_number": 133,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
    "line_number": 2062,
    "line": "    TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
    "line_number": 2501,
    "line": "                    # TODO: test .eq., .neq., etc replacements."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
    "line_number": 2547,
    "line": "                outmess(f'get_parameters[TODO]: '"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
    "line_number": 2590,
    "line": "        # TODO: use symbolic from PR #19805"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\f2py2e.py",
    "line_number": 458,
    "line": "    # TODO: Remove all this when scaninputline is replaced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\f2py2e.py",
    "line_number": 650,
    "line": "    # TODO: Once distutils is dropped completely, i.e. min_ver >= 3.12, unify into --fflags"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 23,
    "line": "# TODO: support logical constants (Op.BOOLEAN)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 24,
    "line": "# TODO: support logical operators (.AND., ...)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 25,
    "line": "# TODO: support defined operators (.MYOP., ...)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 520,
    "line": "                # TODO: other kind not used"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 570,
    "line": "        # TODO: implement a method for deciding when __call__ should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 811,
    "line": "            # TODO: determine correct kind"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 846,
    "line": "            # TODO: determine correct kind"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 896,
    "line": "            # TODO: denom kind not used"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 1108,
    "line": "            # TODO: find common divisor of coefficients"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\_isocbind.py",
    "line_number": 55,
    "line": "# TODO: See gh-25229"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_docs.py",
    "line_number": 59,
    "line": "    # TODO: implement test methods for other example Fortran codes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 415,
    "line": "    # TODO: Clean up to prevent passing --overwrite-signature"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 514,
    "line": "    TODO: Test to ensure this has no effect without --latex-doc"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 658,
    "line": "    TODO: Document this in the help string"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 682,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 691,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 747,
    "line": "    # TODO: f2py2e should not call sys.exit() after printing the version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 821,
    "line": "# TODO: These should be tested separately"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 827,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 835,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 843,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 851,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 859,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 867,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 875,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 883,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 891,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 899,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 907,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 915,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 923,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 931,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 939,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 947,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 955,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 963,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\fft\\__init__.py",
    "line_number": 204,
    "line": "# TODO: `numpy.fft.helper`` was deprecated in NumPy 2.0. It should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\lib\\mixins.py",
    "line_number": 168,
    "line": "    # TODO: handle the optional third argument for __pow__?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\lib\\_datasource.py",
    "line_number": 72,
    "line": "# TODO: .zip support, .tar support?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\lib\\_datasource.py",
    "line_number": 331,
    "line": "        # TODO: Doesn't handle compressed files!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\lib\\_datasource.py",
    "line_number": 397,
    "line": "        # TODO:  This should be more robust.  Handles case where path includes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\lib\\_datasource.py",
    "line_number": 511,
    "line": "        # TODO: There is no support for opening a file for writing which"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\lib\\_datasource.py",
    "line_number": 514,
    "line": "        # TODO: Add a ``subdir`` parameter for specifying the subdirectory"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\lib\\_function_base_impl.py",
    "line_number": 848,
    "line": "    # TODO: This preserves the Python int, float, complex manually to get the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\lib\\_nanfunctions_impl.py",
    "line_number": 1693,
    "line": "    # TODO: What to do when arr1d = [1, np.nan] and weights = [0, 1]?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\lib\\tests\\test_function_base.py",
    "line_number": 3721,
    "line": "        # TODO: Note that times have dubious rounding as of fixing NaTs!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\lib\\tests\\test_function_base.py",
    "line_number": 4437,
    "line": "        # TODO: Median does not support Datetime, due to `mean`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\lib\\tests\\test_io.py",
    "line_number": 313,
    "line": "                sup.filter(ResourceWarning)  # TODO: specify exact message"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\ma\\core.py",
    "line_number": 229,
    "line": "        # TODO: This is probably a mess, but should best preserve behavior?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\ma\\core.py",
    "line_number": 472,
    "line": "        # TODO: It seems better to always store a valid fill_value, the oddity"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\ma\\core.py",
    "line_number": 4779,
    "line": "        # TODO: We don't actually support K, so use A instead.  We could"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\ma\\tests\\test_core.py",
    "line_number": 5522,
    "line": "    # TODO: Test masked_object, masked_equal, ..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\ma\\tests\\test_old_ma.py",
    "line_number": 654,
    "line": "        #TODO FIXME: Find out what the following raises a warning in r8247"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\polynomial\\_polybase.py",
    "line_number": 433,
    "line": "        # TODO: we're stuck with disabling math formatting until we handle"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_random.py",
    "line_number": 1063,
    "line": "    # TODO: Include test for randint once it can broadcast"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\shape.py",
    "line_number": 11,
    "line": "# TODO: remove this cast after: https://github.com/numpy/numpy/pull/27171"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\arrayprint.py",
    "line_number": 1548,
    "line": "        # TODO: Custom repr for user DTypes, logic should likely move."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\fromnumeric.py",
    "line_number": 44,
    "line": "    # but this follows what was done before. TODO: revisit this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\getlimits.py",
    "line_number": 373,
    "line": "    TODO: MachAr should be retired completely ideally.  We currently only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\numeric.py",
    "line_number": 511,
    "line": "    # TODO: this works around .astype(bool) not working properly (gh-9847)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\_add_newdocs.py",
    "line_number": 2277,
    "line": "        assignment examples; TODO)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\_add_newdocs_scalars.py",
    "line_number": 128,
    "line": "# TODO: These docs probably need an if to highlight the default rather than"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\_add_newdocs_scalars.py",
    "line_number": 337,
    "line": "# TODO: work out how to put this on the base class, np.floating"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\_dtype.py",
    "line_number": 176,
    "line": "        # TODO: this path can never be reached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\_dtype.py",
    "line_number": 185,
    "line": "    # TODO: this duplicates the C metastr_to_unicode functionality"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\_methods.py",
    "line_number": 89,
    "line": "        # TODO: Optimize case when `where` is broadcast along a non-reduction"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_array_coercion.py",
    "line_number": 455,
    "line": "        # TODO: This discrepancy _should_ be resolved, either by relaxing the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_array_coercion.py",
    "line_number": 905,
    "line": "    # TODO: This is arguably weird/wrong, but seems old:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_casting_unittests.py",
    "line_number": 781,
    "line": "        # TODO: While this test is fairly thorough, right now, it does not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_datetime.py",
    "line_number": 1579,
    "line": "        # TODO: Allowing unsafe casting by"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_datetime.py",
    "line_number": 2561,
    "line": "        # TODO: add absolute (gold standard) time span limit strings"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_multiarray.py",
    "line_number": 7584,
    "line": "# TODO: test for multidimensional"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_scalarmath.py",
    "line_number": 96,
    "line": "        # TODO: It would be nice to resolve this issue."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_scalarmath.py",
    "line_number": 1132,
    "line": "    # TODO: Power is a bit special, but here mostly bools seem to behave oddly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_stringdtype.py",
    "line_number": 1569,
    "line": "    # TODO: generalize to more ufuncs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 12,
    "line": "# TODO: branch cuts (use Pauli code)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 13,
    "line": "# TODO: conj 'symmetry'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 14,
    "line": "# TODO: FPU exceptions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 23,
    "line": "# TODO: replace with a check on whether platform-provided C99 funcs are used"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 26,
    "line": "# TODO This can be xfail when the generator functions are got rid of."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 122,
    "line": "    # TODO This can be xfail when the generator functions are got rid of."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 479,
    "line": "    # TODO This can be xfail when the generator functions are got rid of."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_typing\\_array_like.py",
    "line_number": 65,
    "line": "# TODO: Wait until mypy supports recursive objects in combination with typevars"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_typing\\_char_codes.py",
    "line_number": 208,
    "line": "    # TODO: add `_StringCodes` once it has a scalar type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\numpy\\_typing\\_dtype_like.py",
    "line_number": 62,
    "line": "_DTypeLikeNested: TypeAlias = Any  # TODO: wait for support for recursive types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\packaging\\metadata.py",
    "line_number": 204,
    "line": "        # TODO: The spec doesn't say anything about if the keys should be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\packaging\\metadata.py",
    "line_number": 806,
    "line": "    description: _Validator[str | None] = _Validator()  # TODO 2.1: can be in body"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\packaging\\requirements.py",
    "line_number": 29,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\packaging\\requirements.py",
    "line_number": 32,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\packaging\\tags.py",
    "line_number": 378,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\cache.py",
    "line_number": 238,
    "line": "        except (OSError, IOError):  # TODO Maybe log this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\grammar.py",
    "line_number": 195,
    "line": "        TODO this is not public, yet."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\pgen2\\generator.py",
    "line_number": 216,
    "line": "    todo = [start]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\pgen2\\generator.py",
    "line_number": 217,
    "line": "    for i, state in enumerate(todo):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\pgen2\\generator.py",
    "line_number": 221,
    "line": "            if next_ in todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\pgen2\\generator.py",
    "line_number": 222,
    "line": "                j = todo.index(next_)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\pgen2\\generator.py",
    "line_number": 224,
    "line": "                j = len(todo)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\pgen2\\generator.py",
    "line_number": 225,
    "line": "                todo.append(next_)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\diff.py",
    "line_number": 440,
    "line": "        # TODO speed up, shouldn't copy the whole list all the time."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\diff.py",
    "line_number": 741,
    "line": "            # TODO this check might take a bit of time for large files. We"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\errors.py",
    "line_number": 676,
    "line": "    # TODO this should probably get a better end_pos including"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\pep8.py",
    "line_number": 132,
    "line": "                # TODO unite with the code of BracketNode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\pep8.py",
    "line_number": 304,
    "line": "                    # TODO end_pos wrong."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\pep8.py",
    "line_number": 360,
    "line": "        # TODO does this work? with brackets and stuff?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\pep8.py",
    "line_number": 413,
    "line": "            # TODO is this enough checking? What about ==?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\pep8.py",
    "line_number": 610,
    "line": "                pass  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\pep8.py",
    "line_number": 614,
    "line": "                # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\pep8.py",
    "line_number": 619,
    "line": "                # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\pep8.py",
    "line_number": 624,
    "line": "                pass  # TODO should probably raise an error if there's a space here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\pep8.py",
    "line_number": 664,
    "line": "                    # TODO why only brackets?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\pep8.py",
    "line_number": 721,
    "line": "                # TODO check multiline indentation."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\pep8.py",
    "line_number": 760,
    "line": "# TODO this is not yet ready."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\parso\\python\\tree.py",
    "line_number": 131,
    "line": "        # TODO it is really ugly that we have to override it. Maybe change"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pathspec\\util.py",
    "line_number": 140,
    "line": "\t\t\tresult_files = pattern.match(all_files)  # TODO: Replace with `.match_file()`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
    "line_number": 279,
    "line": "                # TODO: use DirectUrl.equivalent when"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
    "line_number": 203,
    "line": "        # TODO: Try to get these passing down from the command?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\inspect.py",
    "line_number": 60,
    "line": "            # TODO tags? scheme?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\index\\collector.py",
    "line_number": 344,
    "line": "        # TODO: In the future, it would be nice if pip supported PEP 691"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 37,
    "line": "from pip._internal.utils.compat import stdlib_pkgs  # TODO: Move definition here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 167,
    "line": "        # TODO: this property is relatively costly to compute, memoize it ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 177,
    "line": "                # TODO: get project location from second line of egg_link file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\models\\installation_report.py",
    "line_number": 50,
    "line": "            # TODO: currently, the resolver uses the default environment to evaluate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\models\\selection_prefs.py",
    "line_number": 6,
    "line": "# TODO: This needs Python 3.10's improved slots support for dataclasses"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
    "line_number": 174,
    "line": "        # TODO: Get range requests to be correctly cached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 552,
    "line": "        # TODO: separate this part out from RequirementPreparer when the v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
    "line_number": 285,
    "line": "        # TODO: The is_installable_dir test here might not be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 107,
    "line": "    # TODO: replace this with slots=True when dropping Python 3.9 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 526,
    "line": "    # TODO: handle space after '\\'."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
    "line_number": 75,
    "line": "        TODO remove this property together with the legacy resolver, since the new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 227,
    "line": "        # TODO performance: this means we iterate the dependencies at least twice,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 360,
    "line": "        # TODO: Supply reason based on force_reinstall and upgrade_strategy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 201,
    "line": "        # TODO: Check already installed candidate, and use it if the link and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 622,
    "line": "        # TODO: Are there more cases this needs to return True? Editable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
    "line_number": 38,
    "line": "    # TODO: Remove this block after dropping Python 3.8 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
    "line_number": 226,
    "line": "        # TODO: There is an assumption that the result will be a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py",
    "line_number": 67,
    "line": "        # TODO: Add some logging here..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1278,
    "line": "    todo = graph.reverse_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1280,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1281,
    "line": "        d = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1285,
    "line": "                todo.append(succ)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1305,
    "line": "    todo = graph.adjacency_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1306,
    "line": "    seen = set(t[0] for t in todo)  # already added to todo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1308,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1309,
    "line": "        d = todo.pop()[0]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1316,
    "line": "                todo.append(pred)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 760,
    "line": "        XXX TODO Note: this cache is never actually cleared. It's assumed that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 922,
    "line": "                # TODO SHA256 digest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1237,
    "line": "        todo = set([dist])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1239,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1240,
    "line": "            dist = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1274,
    "line": "                            todo.add(provider)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 239,
    "line": "    # TODO document the mapping API and UNKNOWN default key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 560,
    "line": "    # TODO could add iter* variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 984,
    "line": "        # TODO: any other fields wanted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 190,
    "line": "            todo = [resource]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 191,
    "line": "            while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 192,
    "line": "                resource = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 203,
    "line": "                            todo.append(child)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 401,
    "line": "        # TODO check k, v for valid values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1131,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1133,
    "line": "        todo.append(final)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1134,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1135,
    "line": "            step = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1149,
    "line": "                todo.extend(preds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 267,
    "line": "        TODO: fill this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 516,
    "line": "    # TODO: unintended side-effect on, e.g., \"2003.05.09\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
    "line_number": 839,
    "line": "            # TODO version verification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 499,
    "line": "        # TODO should we eliminate the recursion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 503,
    "line": "                    # TODO check whether we need to call `list_hook`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 511,
    "line": "            # TODO is the interaction between `list_hook` and `use_list` ok?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 516,
    "line": "                    # TODO check whether we need to call hooks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 204,
    "line": "        # TODO: The spec doesn't say anything about if the keys should be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 806,
    "line": "    description: _Validator[str | None] = _Validator()  # TODO 2.1: can be in body"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 29,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 32,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
    "line_number": 378,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 1,
    "line": "# TODO: Add Generic type annotations to initialized collections."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 122,
    "line": "_ResourceStream = Any  # TODO / Incomplete: A readable file-like object"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3308,
    "line": "            # TODO: remove this except clause when python/cpython#103632 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3598,
    "line": "        # TODO: Add a deadline?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
    "line_number": 863,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
    "line_number": 547,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\latex.py",
    "line_number": 334,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\python.py",
    "line_number": 713,
    "line": "        # different tokens.  TODO: DelegatingLexer should support this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\_mapping.py",
    "line_number": 524,
    "line": "    'TodotxtLexer': ('pip._vendor.pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py",
    "line_number": 686,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\text.py",
    "line_number": 562,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\truststore\\_macos.py",
    "line_number": 558,
    "line": "            # TODO: Not sure if we need the SecTrustResultType for anything?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
    "line_number": 199,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py",
    "line_number": 522,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py",
    "line_number": 289,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 659,
    "line": "        # TODO: should I do clean shutdown here? Do I have to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 819,
    "line": "        # TODO: Well, crap."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 829,
    "line": "        # TODO: Update in line with above."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 31,
    "line": "# TODO: In v2 we can remove this sentinel and metaclass with deprecated options."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 261,
    "line": "        # TODO: Deprecated, remove in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 323,
    "line": "        # TODO: If already given in **kw we use what's given to us"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 454,
    "line": "        # TODO: For now favor if the Retry implementation sets its own method_whitelist"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 608,
    "line": "            # TODO: Remove this deprecated alias in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
    "line_number": 402,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pkg_resources\\__init__.py",
    "line_number": 115,
    "line": "_ResourceStream: TypeAlias = Any  # TODO / Incomplete: A readable file-like object"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pkg_resources\\__init__.py",
    "line_number": 3335,
    "line": "            # TODO: remove this except clause when python/cpython#103632 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pkg_resources\\__init__.py",
    "line_number": 3636,
    "line": "        # TODO: Add a deadline?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pluggy\\_hooks.py",
    "line_number": 413,
    "line": "        # TODO: Document, or make private."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pluggy\\_hooks.py",
    "line_number": 419,
    "line": "    # TODO: Document, or make private."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pluggy\\_hooks.py",
    "line_number": 423,
    "line": "    # TODO: Document, or make private."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pre_commit\\hook.py",
    "line_number": 50,
    "line": "        # TODO: have cfgv do this (?)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pre_commit\\repository.py",
    "line_number": 97,
    "line": "        # TODO: remove v1 state writing, no longer needed after pre-commit 3.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pre_commit\\store.py",
    "line_number": 234,
    "line": "            # TODO: eventually remove this and only create in _create"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pre_commit\\languages\\golang.py",
    "line_number": 93,
    "line": "    # TODO: 3.9+ .removeprefix('go')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pre_commit\\languages\\julia.py",
    "line_number": 71,
    "line": "        # TODO: Support language_version with juliaup similar to rust via"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\renderer.py",
    "line_number": 356,
    "line": "        # TODO: Move following state flags into `Vt100_Output`, similar to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\utils.py",
    "line_number": 38,
    "line": "# Used to ensure sphinx autodoc does not try to import platform-specific"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\utils.py",
    "line_number": 40,
    "line": "SPHINX_AUTODOC_RUNNING = \"sphinx.ext.autodoc\" in sys.modules"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\contrib\\regular_languages\\regex_parser.py",
    "line_number": 261,
    "line": "                # TODO: implement!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\contrib\\regular_languages\\__init__.py",
    "line_number": 69,
    "line": "TODO: some examples of:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\eventloop\\win32.py",
    "line_number": 9,
    "line": "from ..utils import SPHINX_AUTODOC_RUNNING"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\eventloop\\win32.py",
    "line_number": 13,
    "line": "if not SPHINX_AUTODOC_RUNNING:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\input\\win32.py",
    "line_number": 9,
    "line": "from ..utils import SPHINX_AUTODOC_RUNNING"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\input\\win32.py",
    "line_number": 15,
    "line": "if not SPHINX_AUTODOC_RUNNING:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\emacs.py",
    "line_number": 191,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\emacs.py",
    "line_number": 196,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\emacs.py",
    "line_number": 203,
    "line": "        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\mouse.py",
    "line_number": 205,
    "line": "            # TODO: Is it possible to add modifiers here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\named_commands.py",
    "line_number": 581,
    "line": "    # TODO: Make the format suitable for the inputrc file."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\scroll.py",
    "line_number": 142,
    "line": "                # TODO: not entirely correct yet, in case of line wrapping and many long lines."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\vi.py",
    "line_number": 628,
    "line": "    def _change_current_line(event: E) -> None:  # TODO: implement 'arg'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\vi.py",
    "line_number": 1080,
    "line": "        # TODO: go to begin of sentence."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\vi.py",
    "line_number": 1086,
    "line": "        # TODO: go to end of sentence."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\vi.py",
    "line_number": 1361,
    "line": "        # TODO: 'dat', 'dit', (tags (like xml)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\vi.py",
    "line_number": 2082,
    "line": "        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\layout\\containers.py",
    "line_number": 2580,
    "line": "            # TODO: not entirely correct yet in case of line wrapping and long lines."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\layout\\scrollable_pane.py",
    "line_number": 342,
    "line": "                # TODO: if the window is only partly visible, then truncate width/height."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\layout\\utils.py",
    "line_number": 34,
    "line": "        raise NotImplementedError  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\layout\\utils.py",
    "line_number": 36,
    "line": "    # TODO: When creating a copy() or [:], return also an _ExplodedList."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\lexers\\pygments.py",
    "line_number": 119,
    "line": "            # TODO: Add definitions for other languages."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\output\\win32.py",
    "line_number": 24,
    "line": "from ..utils import SPHINX_AUTODOC_RUNNING"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\prompt_toolkit\\output\\win32.py",
    "line_number": 30,
    "line": "if not SPHINX_AUTODOC_RUNNING:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\_psaix.py",
    "line_number": 52,
    "line": "    cext.SSWAP: _common.STATUS_RUNNING,  # TODO what status is this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\_psaix.py",
    "line_number": 174,
    "line": "    # TODO - the filtering logic should be better checked so that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\_psaix.py",
    "line_number": 241,
    "line": "        # TODO: rewrite this in C (entstat forks, so use truss -f to follow."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\_psaix.py",
    "line_number": 515,
    "line": "        # TODO rewrite without using procfiles (stat /proc/pid/fd/* and then"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\_pssunos.py",
    "line_number": 226,
    "line": "    # TODO - the filtering logic should be better checked so that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\_pssunos.py",
    "line_number": 273,
    "line": "        # TODO: refactor and use _common.conn_to_ntuple."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\_pssunos.py",
    "line_number": 620,
    "line": "        # TODO: rewrite this in C (...but the damn netstat source code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\_pswindows.py",
    "line_number": 801,
    "line": "                # TODO: the C ext can probably be refactored in order"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_aix.py",
    "line_number": 60,
    "line": "        # TODO maybe try to use \"swap -l\" to check \"used\" too, but its units"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_bsd.py",
    "line_number": 7,
    "line": "# TODO: (FreeBSD) add test for comparing connections with 'sockstat' cmd."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_contracts.py",
    "line_number": 228,
    "line": "    # TODO: remove this once 1892 is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_linux.py",
    "line_number": 1969,
    "line": "    # TODO: re-enable this test."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_memleaks.py",
    "line_number": 251,
    "line": "        # TODO: UNIX sockets are temporarily implemented by parsing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_memleaks.py",
    "line_number": 365,
    "line": "    # TODO: remove this once 1892 is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_memleaks.py",
    "line_number": 383,
    "line": "    # TODO: remove this skip when this gets fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_osx.py",
    "line_number": 117,
    "line": "    # TODO: remove this once 1892 is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_process.py",
    "line_number": 1039,
    "line": "    # TODO: #595"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_process.py",
    "line_number": 1078,
    "line": "    # TODO: #595"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_process_all.py",
    "line_number": 283,
    "line": "        # TODO: check ntuple fields"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_system.py",
    "line_number": 584,
    "line": "    # TODO: remove this once 1892 is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_system.py",
    "line_number": 852,
    "line": "                        # TODO: skip AF_INET6 for now because I get:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\psutil\\tests\\test_testutils.py",
    "line_number": 171,
    "line": "        # TODO: test for timeout"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pure_eval\\core.py",
    "line_number": 411,
    "line": "    # TODO exclude inner modules, e.g. numpy.random.__name__ == 'numpy.random' != 'random'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pure_eval\\core.py",
    "line_number": 412,
    "line": "    # TODO exclude common module abbreviations, e.g. numpy as np, pandas as pd"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexer.py",
    "line_number": 861,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\formatters\\img.py",
    "line_number": 548,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\formatters\\latex.py",
    "line_number": 334,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\ada.py",
    "line_number": 116,
    "line": "            # TODO: use Name.Namespace if appropriate.  This needs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\css.py",
    "line_number": 555,
    "line": "            # TODO: broken, and prone to infinite loops."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\c_like.py",
    "line_number": 212,
    "line": "            # TODO: \"correctly\" parse complex code attributes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\dns.py",
    "line_number": 53,
    "line": "            # TODO, $GENERATE https://bind9.readthedocs.io/en/v9.18.14/chapter3.html#soa-rr"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\dotnet.py",
    "line_number": 558,
    "line": "# TODO support multiple languages within the same source file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\fantom.py",
    "line_number": 49,
    "line": "            # TODO: highlight references in fandocs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\fantom.py",
    "line_number": 85,
    "line": "        'insideUri': [  # TODO: remove copy/paste str/uri"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\felix.py",
    "line_number": 53,
    "line": "        'requires', 'todo', 'virtual', 'use',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\gleam.py",
    "line_number": 33,
    "line": "        'panic', 'pub', 'test', 'todo', 'type', 'use',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\haskell.py",
    "line_number": 445,
    "line": "            # TODO: these don't match the comments in docs, remove."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\inferno.py",
    "line_number": 24,
    "line": "    TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\inferno.py",
    "line_number": 85,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\javascript.py",
    "line_number": 133,
    "line": "            # TODO: should this include single-line comments and allow nesting strings?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\jvm.py",
    "line_number": 886,
    "line": "    # TODO / should divide keywords/symbols into namespace/rest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\jvm.py",
    "line_number": 1341,
    "line": "            (r'\\S+\\s+', Text)   # TODO: make tests pass without \\s+"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 648,
    "line": "            (r'^(\\* )(TODO)( .*)',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 650,
    "line": "            (r'^(\\*\\*+ )(TODO)( .*)',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 656,
    "line": "            # Unordered lists items, including TODO items and description items"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 672,
    "line": "            # TODO: language-dependent syntax highlighting (see Markdown lexer)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 701,
    "line": "            (_inline(r'=', r'='), String), # TODO token"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\meson.py",
    "line_number": 27,
    "line": "    # TODO String interpolation @VARNAME@ inner matches"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\meson.py",
    "line_number": 28,
    "line": "    # TODO keyword_arg: value inner matches"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\mips.py",
    "line_number": 28,
    "line": "    # TODO: add '*.s' and '*.asm', which will require designing an analyse_text"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\modula2.py",
    "line_number": 474,
    "line": "        'TODO', 'FFI', 'ADDR', 'VARGLIST', 'VARGC',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 123,
    "line": "                \"varname\",  # TODO varname the right fit?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 273,
    "line": "                        \"async for\",  # TODO https://docs.modular.com/mojo/roadmap#no-async-for-or-async-with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 274,
    "line": "                        \"async with\",  # TODO https://docs.modular.com/mojo/roadmap#no-async-for-or-async-with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 702,
    "line": "        # TODO supported?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 79,
    "line": "                'charactertodouble', 'charactertofloat', 'charactertointeger',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 81,
    "line": "                'chartodouble', 'chartofloat', 'chartoint', 'chartointeger',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 219,
    "line": "                'stringtocharacter', 'stringtodouble', 'stringtofloat',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 229,
    "line": "                'tochar', 'todouble', 'tofloat', 'toint', 'toint64', 'tointeger',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\nix.py",
    "line_number": 123,
    "line": "            # TODO: we should probably escape also here ''${ \\${"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\nix.py",
    "line_number": 135,
    "line": "        # TODO: let/in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\oberon.py",
    "line_number": 50,
    "line": "            # TODO: nested comments (* (* ... *) ... (* ... *) *) not supported!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\objective.py",
    "line_number": 130,
    "line": "                # TODO unsure if ellipses are allowed elsewhere, see"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\objective.py",
    "line_number": 452,
    "line": "            (r':param: [a-zA-Z_]\\w*|:returns?:|(FIXME|MARK|TODO):',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\openscad.py",
    "line_number": 81,
    "line": "            (r':param: [a-zA-Z_]\\w*|:returns?:|(FIXME|MARK|TODO):',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\parsers.py",
    "line_number": 396,
    "line": "            # TODO finish implementing other possibilities for scope"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\pascal.py",
    "line_number": 131,
    "line": "            'chr', 'close', 'closefile', 'comptocurrency', 'comptodouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\perl.py",
    "line_number": 35,
    "line": "    # TODO: give this to a perl guy who knows how to parse perl..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\perl.py",
    "line_number": 360,
    "line": "        'throws-like','timezone','tmpdir','to','today','todo','toggle','to-posix',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\python.py",
    "line_number": 715,
    "line": "        # different tokens.  TODO: DelegatingLexer should support this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\rnc.py",
    "line_number": 36,
    "line": "            # TODO single quoted strings and escape sequences outside of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\rust.py",
    "line_number": 62,
    "line": "        'thread_local', 'todo', 'trace_macros', 'unimplemented', 'unreachable',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\scripting.py",
    "line_number": 1500,
    "line": "            # TODO: JES3 statement"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\sql.py",
    "line_number": 157,
    "line": "            # TODO: better logging"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\sql.py",
    "line_number": 352,
    "line": "                # TODO: better handle multiline comments at the end with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\sql.py",
    "line_number": 686,
    "line": "            # TODO: Backslash escapes?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\templates.py",
    "line_number": 755,
    "line": "            # TODO support other Python syntax like $foo['bar']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\testing.py",
    "line_number": 199,
    "line": "            # Extract todo items."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\testing.py",
    "line_number": 200,
    "line": "            (r'(?i)\\bTODO\\b', Comment.Preproc),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textedit.py",
    "line_number": 140,
    "line": "            # TODO: regexes can have other delims"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textedit.py",
    "line_number": 191,
    "line": "        # TODO: builtins are only subsequent tokens on lines"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 19,
    "line": "__all__ = ['IrcLogsLexer', 'TodotxtLexer', 'HttpLexer', 'GettextLexer',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 208,
    "line": "class TodotxtLexer(RegexLexer):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 210,
    "line": "    Lexer for Todo.txt todo list format."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 213,
    "line": "    name = 'Todotxt'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 214,
    "line": "    url = 'http://todotxt.com/'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 215,
    "line": "    aliases = ['todotxt']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 217,
    "line": "    # *.todotxt is not a standard extension for Todo.txt files; including it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 219,
    "line": "    filenames = ['todo.txt', '*.todotxt']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 220,
    "line": "    mimetypes = ['text/x-todo']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 222,
    "line": "    # Aliases mapping standard token types of Todo.txt format concepts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 240,
    "line": "    # TODO: Make date regex more ISO 8601 compliant"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\urbi.py",
    "line_number": 34,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\wgsl.py",
    "line_number": 390,
    "line": "            # TODO: Treat context-depedendent names specially"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\wgsl.py",
    "line_number": 396,
    "line": "            # TODO: templates start and end tokens."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\_asy_builtins.py",
    "line_number": 9,
    "line": "    TODO: perl/python script in Asymptote SVN similar to asy-list.pl but only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\_lasso_builtins.py",
    "line_number": 2504,
    "line": "        'ical_todo',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\_lasso_builtins.py",
    "line_number": 5297,
    "line": "        'todos',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\_mapping.py",
    "line_number": 535,
    "line": "    'TodotxtLexer': ('pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\_mql_builtins.py",
    "line_number": 257,
    "line": "    'StrToDouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\_mql_builtins.py",
    "line_number": 278,
    "line": "    'StringToDouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\_scilab_builtins.py",
    "line_number": 431,
    "line": "    'csvStringToDouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\_sourcemod_builtins.py",
    "line_number": 786,
    "line": "    'AddFileToDownloadsTable',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pygments\\lexers\\_stata_builtins.py",
    "line_number": 80,
    "line": "    \"esti\", \"estimates\", \"etodow\", \"etof\", \"etomdy\", \"ex\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pymdownx\\blocks\\__init__.py",
    "line_number": 410,
    "line": "                        # TODO: We would need to build a special plugin to test this,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pytest_benchmark\\utils.py",
    "line_number": 443,
    "line": "        # TODO update benchmark_autosave"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\debugger\\debugger.py",
    "line_number": 1080,
    "line": "        if os.path.isfile(filename) and scriptutils.JumpToDocument(filename, lineno):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\Demos\\ocx\\msoffice.py",
    "line_number": 47,
    "line": "        # TODO: update any cache you may have of the item's rectangle/extent"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\framework\\intpyapp.py",
    "line_number": 19,
    "line": "# todo - _SetupSharedMenu should be moved to a framework class."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\framework\\scriptutils.py",
    "line_number": 566,
    "line": "    JumpToDocument(fileName, lineno, col)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\framework\\scriptutils.py",
    "line_number": 569,
    "line": "def JumpToDocument(fileName, lineno=0, col=1, nChars=0, bScrollToTop=0):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\framework\\sgrepmdi.py",
    "line_number": 380,
    "line": "            scriptutils.JumpToDocument(fname, line)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\framework\\toolmenu.py",
    "line_number": 79,
    "line": "    # todo - check the menu does not already exist."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\framework\\winout.py",
    "line_number": 192,
    "line": "                if not scriptutils.JumpToDocument(fileName, int(lineNoString)):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\framework\\editor\\ModuleBrowser.py",
    "line_number": 56,
    "line": "            pywin.framework.scriptutils.JumpToDocument("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\scintilla\\find.py",
    "line_number": 141,
    "line": "                        scriptutils.JumpToDocument("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\scintilla\\view.py",
    "line_number": 588,
    "line": "    # TODO: This is kinda slow. Probably need some kind of cache"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\pythonwin\\pywin\\tools\\browseProjects.py",
    "line_number": 46,
    "line": "            pywin.framework.scriptutils.JumpToDocument("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\requests\\adapters.py",
    "line_number": 686,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\rich\\text.py",
    "line_number": 562,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 131,
    "line": "            # TODO: define due_date, it may break old packages that are no longer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 176,
    "line": "        # TODO: should there be a `due_date` here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 445,
    "line": "                # TODO: Should we add a due date? It may affect old/unmaintained"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\unicode_utils.py",
    "line_number": 99,
    "line": "    # TODO: Add a deadline?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_core_metadata.py",
    "line_number": 122,
    "line": "        # TODO: Replace with `raise ValueError(\"newlines not allowed\")`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_normalization.py",
    "line_number": 126,
    "line": "    TODO: replace this with filename_component after pip 24 is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_normalization.py",
    "line_number": 150,
    "line": "    # TODO: Replace with only safe_version in the future (no need for best effort)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_static.py",
    "line_number": 24,
    "line": "    _mutated_: bool = False  # TODO: Remove after deprecation warning is solved"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_static.py",
    "line_number": 41,
    "line": "        # TODO: After deprecation period raise NotImplementedError instead of warning"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\__init__.py",
    "line_number": 194,
    "line": "           TODO: This method seems to be similar to the one in ``distutils.cmd``"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\bdist_wheel.py",
    "line_number": 72,
    "line": "            # TODO armv8l, packaging pull request #690 => this did not land"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\bdist_wheel.py",
    "line_number": 327,
    "line": "                    # TODO armv8l, packaging pull request #690 => this did not land"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\dist_info.py",
    "line_number": 101,
    "line": "        # TODO: if bdist_wheel if merged into setuptools, just add \"keep_egg_info\" there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1157,
    "line": "        extras = ''  # TODO: self.report_extras(req, dist)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 2347,
    "line": "        # TODO: Possible deprecation warnings to be added in the future:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 62,
    "line": "    COMPAT = \"compat\"  # TODO: Remove `compat` after Dec/2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 83,
    "line": "                # TODO: define due_date"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 281,
    "line": "        # TODO: Once plugins/customizations had the chance to catch up, replace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 314,
    "line": "                # TODO: define due_date"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 575,
    "line": "        # TODO: Python 3.13 replace the whole function with `bytes(content, \"utf-8\")`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\egg_info.py",
    "line_number": 675,
    "line": "    TODO: Remove this function in a version sufficiently > 68."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\install.py",
    "line_number": 70,
    "line": "            # TODO: Document how to bootstrap setuptools without install"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\command\\install_lib.py",
    "line_number": 62,
    "line": "        # TODO: is it necessary to short-circuit here? i.e. what's the cost"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\setupcfg.py",
    "line_number": 104,
    "line": "        # TODO: Temporary cast until mypy 1.12 is released with upstream fixes from typeshed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\setupcfg.py",
    "line_number": 651,
    "line": "                # TODO: define due date, see setuptools.dist:check_nsp."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\setupcfg.py",
    "line_number": 770,
    "line": "    # TODO: should we include due_date here? Initially introduced in 6 Aug 2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
    "line_number": 344,
    "line": "        # TODO: remove check when `bdist_wheel` has been fully removed from pypa/wheel"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
    "line_number": 520,
    "line": "    # TODO: Consider removing this check in the future?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\extra_validations.py",
    "line_number": 78,
    "line": "    # TODO: check for `include-group` cycles (can be conditional to graphlib)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 35,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/pyproject-toml/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://peps.python.org/pep-0621/#license>`_.', 'oneOf': [{'type': 'string', 'description': 'An SPDX license identifier', 'format': 'SPDX'}, {'type': 'object', 'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'type': 'object', 'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'license-files': {'description': 'Paths or globs to paths of license files', 'type': 'array', 'items': {'type': 'string'}}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'license-files', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'allOf': [{'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}}, {'if': {'required': ['license-files']}, 'then': {'properties': {'license': {'type': 'string'}}}}], 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html', 'title': '``tool.distutils`` table', '$$description': ['**EXPERIMENTAL** (NOT OFFICIALLY SUPPORTED): Use ``tool.distutils``', 'subtables to configure arguments for ``distutils`` commands.', 'Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` commands via `distutils configuration files', '<https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html>`_.', 'See also `the old Python docs <https://docs.python.org/3.11/install/>_`.'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html', 'title': '``tool.setuptools`` table', '$$description': ['``setuptools``-specific configurations that can be set by users that require', 'customization.', 'These configurations are completely optional and probably can be skipped when', 'creating simple packages. They are equivalent to some of the `Keywords', '<https://setuptools.pypa.io/en/latest/references/keywords.html>`_', 'used by the ``setup.py`` file, and can be set via the ``tool.setuptools`` table.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration>`_', 'that are not covered by :pep:`621`; and intentionally excludes ``dependency_links``', 'and ``setup_requires`` (incompatible with modern workflows/standards).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'$$description': ['Whether the project can be safely installed and run from a zip file.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'boolean'}, 'script-files': {'$$description': ['Legacy way of defining scripts (entry-points are preferred).', 'Equivalent to the ``script`` keyword in ``setup.py``', '(it was renamed to avoid confusion with entry-point based ``project.scripts``', 'defined in :pep:`621`).', '**DISCOURAGED**: generic script wrappers are tricky and may not work properly.', 'Whenever possible, please use ``project.scripts`` instead.'], 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'$ref': '#/definitions/package-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'const': ''}, {'$ref': '#/definitions/package-name'}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html', 'description': '**DEPRECATED**: use implicit namespaces instead (:pep:`420`).'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'ext-modules': {'description': 'Extension modules to be compiled by setuptools', 'type': 'array', 'items': {'$ref': '#/definitions/ext-module'}}, 'data-files': {'$$description': ['``dict``-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', '**DISCOURAGED**: please notice this might not work as expected with wheels.', 'Whenever possible, consider using data files inside the package directories', '(or create a new namespace package that only contains data files).', 'See `data files support', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['**PROVISIONAL**: list of glob patterns for all license files being distributed.', '(likely to become standard with :pep:`639`).', \"By default: ``['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']``\"], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.', 'Also ensure to set ``project.dynamic`` accordingly.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive-for-dependencies'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'type': 'string', 'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive-for-dependencies'}}}, 'readme': {'type': 'object', 'anyOf': [{'$ref': '#/definitions/file-directive'}, {'type': 'object', 'properties': {'content-type': {'type': 'string'}, 'file': {'$ref': '#/definitions/file-directive/properties/file'}}, 'additionalProperties': False}], 'required': ['file']}}}}, 'definitions': {'package-name': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}, 'ext-module': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}, 'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'file-directive-for-dependencies': {'title': \"'file:' directive for dependencies\", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, 'dependency-groups': {'type': 'object', 'description': 'Dependency groups following PEP 735', 'additionalProperties': False, 'patternProperties': {'^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9])$': {'type': 'array', 'items': {'oneOf': [{'type': 'string', 'description': 'Python package specifiers following PEP 508', 'format': 'pep508'}, {'type': 'object', 'additionalProperties': False, 'properties': {'include-group': {'description': 'Another dependency group to include in this one', 'type': 'string', 'pattern': '^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9])$'}}}]}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/pyproject-toml/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://peps.python.org/pep-0621/#license>`_.', 'oneOf': [{'type': 'string', 'description': 'An SPDX license identifier', 'format': 'SPDX'}, {'type': 'object', 'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'type': 'object', 'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'license-files': {'description': 'Paths or globs to paths of license files', 'type': 'array', 'items': {'type': 'string'}}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'license-files', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'allOf': [{'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}}, {'if': {'required': ['license-files']}, 'then': {'properties': {'license': {'type': 'string'}}}}], 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 43,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must be object\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 48,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must contain \" + (str(sorted(data__buildsystem__missing_keys)) + \" properties\"), value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 73,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path must be array\", value=data__buildsystem__backendpath, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path\", definition={'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 79,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \" must be string\", value=data__buildsystem__backendpath_item, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \"\", definition={'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 81,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must not contain \"+str(data__buildsystem_keys)+\" properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 90,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".tool must be object\", value=data__tool, name=\"\" + (name_prefix or \"data\") + \".tool\", definition={'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html', 'title': '``tool.distutils`` table', '$$description': ['**EXPERIMENTAL** (NOT OFFICIALLY SUPPORTED): Use ``tool.distutils``', 'subtables to configure arguments for ``distutils`` commands.', 'Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` commands via `distutils configuration files', '<https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html>`_.', 'See also `the old Python docs <https://docs.python.org/3.11/install/>_`.'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html', 'title': '``tool.setuptools`` table', '$$description': ['``setuptools``-specific configurations that can be set by users that require', 'customization.', 'These configurations are completely optional and probably can be skipped when', 'creating simple packages. They are equivalent to some of the `Keywords', '<https://setuptools.pypa.io/en/latest/references/keywords.html>`_', 'used by the ``setup.py`` file, and can be set via the ``tool.setuptools`` table.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration>`_', 'that are not covered by :pep:`621`; and intentionally excludes ``dependency_links``', 'and ``setup_requires`` (incompatible with modern workflows/standards).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'$$description': ['Whether the project can be safely installed and run from a zip file.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'boolean'}, 'script-files': {'$$description': ['Legacy way of defining scripts (entry-points are preferred).', 'Equivalent to the ``script`` keyword in ``setup.py``', '(it was renamed to avoid confusion with entry-point based ``project.scripts``', 'defined in :pep:`621`).', '**DISCOURAGED**: generic script wrappers are tricky and may not work properly.', 'Whenever possible, please use ``project.scripts`` instead.'], 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'$ref': '#/definitions/package-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'const': ''}, {'$ref': '#/definitions/package-name'}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html', 'description': '**DEPRECATED**: use implicit namespaces instead (:pep:`420`).'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'ext-modules': {'description': 'Extension modules to be compiled by setuptools', 'type': 'array', 'items': {'$ref': '#/definitions/ext-module'}}, 'data-files': {'$$description': ['``dict``-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', '**DISCOURAGED**: please notice this might not work as expected with wheels.', 'Whenever possible, consider using data files inside the package directories', '(or create a new namespace package that only contains data files).', 'See `data files support', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['**PROVISIONAL**: list of glob patterns for all license files being distributed.', '(likely to become standard with :pep:`639`).', \"By default: ``['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']``\"], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.', 'Also ensure to set ``project.dynamic`` accordingly.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive-for-dependencies'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'type': 'string', 'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive-for-dependencies'}}}, 'readme': {'type': 'object', 'anyOf': [{'$ref': '#/definitions/file-directive'}, {'type': 'object', 'properties': {'content-type': {'type': 'string'}, 'file': {'$ref': '#/definitions/file-directive/properties/file'}}, 'additionalProperties': False}], 'required': ['file']}}}}, 'definitions': {'package-name': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}, 'ext-module': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}, 'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'file-directive-for-dependencies': {'title': \"'file:' directive for dependencies\", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 154,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/pyproject-toml/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://peps.python.org/pep-0621/#license>`_.', 'oneOf': [{'type': 'string', 'description': 'An SPDX license identifier', 'format': 'SPDX'}, {'type': 'object', 'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'type': 'object', 'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'license-files': {'description': 'Paths or globs to paths of license files', 'type': 'array', 'items': {'type': 'string'}}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'license-files', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'allOf': [{'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}}, {'if': {'required': ['license-files']}, 'then': {'properties': {'license': {'type': 'string'}}}}], 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html', 'title': '``tool.distutils`` table', '$$description': ['**EXPERIMENTAL** (NOT OFFICIALLY SUPPORTED): Use ``tool.distutils``', 'subtables to configure arguments for ``distutils`` commands.', 'Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` commands via `distutils configuration files', '<https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html>`_.', 'See also `the old Python docs <https://docs.python.org/3.11/install/>_`.'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html', 'title': '``tool.setuptools`` table', '$$description': ['``setuptools``-specific configurations that can be set by users that require', 'customization.', 'These configurations are completely optional and probably can be skipped when', 'creating simple packages. They are equivalent to some of the `Keywords', '<https://setuptools.pypa.io/en/latest/references/keywords.html>`_', 'used by the ``setup.py`` file, and can be set via the ``tool.setuptools`` table.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration>`_', 'that are not covered by :pep:`621`; and intentionally excludes ``dependency_links``', 'and ``setup_requires`` (incompatible with modern workflows/standards).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'$$description': ['Whether the project can be safely installed and run from a zip file.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'boolean'}, 'script-files': {'$$description': ['Legacy way of defining scripts (entry-points are preferred).', 'Equivalent to the ``script`` keyword in ``setup.py``', '(it was renamed to avoid confusion with entry-point based ``project.scripts``', 'defined in :pep:`621`).', '**DISCOURAGED**: generic script wrappers are tricky and may not work properly.', 'Whenever possible, please use ``project.scripts`` instead.'], 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'$ref': '#/definitions/package-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'const': ''}, {'$ref': '#/definitions/package-name'}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html', 'description': '**DEPRECATED**: use implicit namespaces instead (:pep:`420`).'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'ext-modules': {'description': 'Extension modules to be compiled by setuptools', 'type': 'array', 'items': {'$ref': '#/definitions/ext-module'}}, 'data-files': {'$$description': ['``dict``-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', '**DISCOURAGED**: please notice this might not work as expected with wheels.', 'Whenever possible, consider using data files inside the package directories', '(or create a new namespace package that only contains data files).', 'See `data files support', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['**PROVISIONAL**: list of glob patterns for all license files being distributed.', '(likely to become standard with :pep:`639`).', \"By default: ``['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']``\"], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.', 'Also ensure to set ``project.dynamic`` accordingly.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive-for-dependencies'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'type': 'string', 'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive-for-dependencies'}}}, 'readme': {'type': 'object', 'anyOf': [{'$ref': '#/definitions/file-directive'}, {'type': 'object', 'properties': {'content-type': {'type': 'string'}, 'file': {'$ref': '#/definitions/file-directive/properties/file'}}, 'additionalProperties': False}], 'required': ['file']}}}}, 'definitions': {'package-name': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}, 'ext-module': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}, 'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'file-directive-for-dependencies': {'title': \"'file:' directive for dependencies\", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, 'dependency-groups': {'type': 'object', 'description': 'Dependency groups following PEP 735', 'additionalProperties': False, 'patternProperties': {'^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9])$': {'type': 'array', 'items': {'oneOf': [{'type': 'string', 'description': 'Python package specifiers following PEP 508', 'format': 'pep508'}, {'type': 'object', 'additionalProperties': False, 'properties': {'include-group': {'description': 'Another dependency group to include in this one', 'type': 'string', 'pattern': '^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9])$'}}}]}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/pyproject-toml/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://peps.python.org/pep-0621/#license>`_.', 'oneOf': [{'type': 'string', 'description': 'An SPDX license identifier', 'format': 'SPDX'}, {'type': 'object', 'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'type': 'object', 'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'license-files': {'description': 'Paths or globs to paths of license files', 'type': 'array', 'items': {'type': 'string'}}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'license-files', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'allOf': [{'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}}, {'if': {'required': ['license-files']}, 'then': {'properties': {'license': {'type': 'string'}}}}], 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 159,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html', 'title': '``tool.setuptools`` table', '$$description': ['``setuptools``-specific configurations that can be set by users that require', 'customization.', 'These configurations are completely optional and probably can be skipped when', 'creating simple packages. They are equivalent to some of the `Keywords', '<https://setuptools.pypa.io/en/latest/references/keywords.html>`_', 'used by the ``setup.py`` file, and can be set via the ``tool.setuptools`` table.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration>`_', 'that are not covered by :pep:`621`; and intentionally excludes ``dependency_links``', 'and ``setup_requires`` (incompatible with modern workflows/standards).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'$$description': ['Whether the project can be safely installed and run from a zip file.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'boolean'}, 'script-files': {'$$description': ['Legacy way of defining scripts (entry-points are preferred).', 'Equivalent to the ``script`` keyword in ``setup.py``', '(it was renamed to avoid confusion with entry-point based ``project.scripts``', 'defined in :pep:`621`).', '**DISCOURAGED**: generic script wrappers are tricky and may not work properly.', 'Whenever possible, please use ``project.scripts`` instead.'], 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'const': ''}, {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html', 'description': '**DEPRECATED**: use implicit namespaces instead (:pep:`420`).'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'ext-modules': {'description': 'Extension modules to be compiled by setuptools', 'type': 'array', 'items': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}}, 'data-files': {'$$description': ['``dict``-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', '**DISCOURAGED**: please notice this might not work as expected with wheels.', 'Whenever possible, consider using data files inside the package directories', '(or create a new namespace package that only contains data files).', 'See `data files support', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['**PROVISIONAL**: list of glob patterns for all license files being distributed.', '(likely to become standard with :pep:`639`).', \"By default: ``['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']``\"], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.', 'Also ensure to set ``project.dynamic`` accordingly.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'title': \"'file:' directive for dependencies\", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'type': 'string', 'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'title': \"'file:' directive for dependencies\", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}}}, 'readme': {'type': 'object', 'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'type': 'object', 'properties': {'content-type': {'type': 'string'}, 'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'additionalProperties': False}], 'required': ['file']}}}}, 'definitions': {'package-name': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}, 'ext-module': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}, 'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'file-directive-for-dependencies': {'title': \"'file:' directive for dependencies\", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 211,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".script-files must be array\", value=data__scriptfiles, name=\"\" + (name_prefix or \"data\") + \".script-files\", definition={'$$description': ['Legacy way of defining scripts (entry-points are preferred).', 'Equivalent to the ``script`` keyword in ``setup.py``', '(it was renamed to avoid confusion with entry-point based ``project.scripts``', 'defined in :pep:`621`).', '**DISCOURAGED**: generic script wrappers are tricky and may not work properly.', 'Whenever possible, please use ``project.scripts`` instead.'], 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 411,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".py-modules must be array\", value=data__pymodules, name=\"\" + (name_prefix or \"data\") + \".py-modules\", definition={'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 472,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".license-files must be array\", value=data__licensefiles, name=\"\" + (name_prefix or \"data\") + \".license-files\", definition={'type': 'array', 'items': {'type': 'string'}, '$$description': ['**PROVISIONAL**: list of glob patterns for all license files being distributed.', '(likely to become standard with :pep:`639`).', \"By default: ``['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']``\"], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 589,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html', 'title': '``tool.setuptools`` table', '$$description': ['``setuptools``-specific configurations that can be set by users that require', 'customization.', 'These configurations are completely optional and probably can be skipped when', 'creating simple packages. They are equivalent to some of the `Keywords', '<https://setuptools.pypa.io/en/latest/references/keywords.html>`_', 'used by the ``setup.py`` file, and can be set via the ``tool.setuptools`` table.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration>`_', 'that are not covered by :pep:`621`; and intentionally excludes ``dependency_links``', 'and ``setup_requires`` (incompatible with modern workflows/standards).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'$$description': ['Whether the project can be safely installed and run from a zip file.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'boolean'}, 'script-files': {'$$description': ['Legacy way of defining scripts (entry-points are preferred).', 'Equivalent to the ``script`` keyword in ``setup.py``', '(it was renamed to avoid confusion with entry-point based ``project.scripts``', 'defined in :pep:`621`).', '**DISCOURAGED**: generic script wrappers are tricky and may not work properly.', 'Whenever possible, please use ``project.scripts`` instead.'], 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.', '**OBSOLETE**: only relevant for ``pkg_resources``, ``easy_install`` and', '``setup.py install`` in the context of ``eggs`` (**DEPRECATED**).'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'const': ''}, {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'anyOf': [{'type': 'string', 'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html', 'description': '**DEPRECATED**: use implicit namespaces instead (:pep:`420`).'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name-relaxed'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'ext-modules': {'description': 'Extension modules to be compiled by setuptools', 'type': 'array', 'items': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}}, 'data-files': {'$$description': ['``dict``-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', '**DISCOURAGED**: please notice this might not work as expected with wheels.', 'Whenever possible, consider using data files inside the package directories', '(or create a new namespace package that only contains data files).', 'See `data files support', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['**PROVISIONAL**: list of glob patterns for all license files being distributed.', '(likely to become standard with :pep:`639`).', \"By default: ``['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']``\"], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.', 'Also ensure to set ``project.dynamic`` accordingly.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'title': \"'file:' directive for dependencies\", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'type': 'string', 'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'title': \"'file:' directive for dependencies\", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$ref': '#/definitions/file-directive'}]}}}, 'readme': {'type': 'object', 'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'type': 'object', 'properties': {'content-type': {'type': 'string'}, 'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'additionalProperties': False}], 'required': ['file']}}}}, 'definitions': {'package-name': {'$id': '#/definitions/package-name', 'title': 'Valid package name', 'description': 'Valid package name (importable or :pep:`561`).', 'type': 'string', 'anyOf': [{'type': 'string', 'format': 'python-module-name-relaxed'}, {'type': 'string', 'format': 'pep561-stub-name'}]}, 'ext-module': {'$id': '#/definitions/ext-module', 'title': 'Extension module', 'description': 'Parameters to construct a :class:`setuptools.Extension` object', 'type': 'object', 'required': ['name', 'sources'], 'additionalProperties': False, 'properties': {'name': {'type': 'string', 'format': 'python-module-name-relaxed'}, 'sources': {'type': 'array', 'items': {'type': 'string'}}, 'include-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'define-macros': {'type': 'array', 'items': {'type': 'array', 'items': [{'description': 'macro name', 'type': 'string'}, {'description': 'macro value', 'oneOf': [{'type': 'string'}, {'type': 'null'}]}], 'additionalItems': False}}, 'undef-macros': {'type': 'array', 'items': {'type': 'string'}}, 'library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'libraries': {'type': 'array', 'items': {'type': 'string'}}, 'runtime-library-dirs': {'type': 'array', 'items': {'type': 'string'}}, 'extra-objects': {'type': 'array', 'items': {'type': 'string'}}, 'extra-compile-args': {'type': 'array', 'items': {'type': 'string'}}, 'extra-link-args': {'type': 'array', 'items': {'type': 'string'}}, 'export-symbols': {'type': 'array', 'items': {'type': 'string'}}, 'swig-opts': {'type': 'array', 'items': {'type': 'string'}}, 'depends': {'type': 'array', 'items': {'type': 'string'}}, 'language': {'type': 'string'}, 'optional': {'type': 'boolean'}, 'py-limited-api': {'type': 'boolean'}}}, 'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'file-directive-for-dependencies': {'title': \"'file:' directive for dependencies\", 'allOf': [{'$$description': ['**BETA**: subset of the ``requirements.txt`` format', 'without ``pip`` flags and options', '(one :pep:`508`-compliant string per line,', 'lines that are blank or start with ``#`` are excluded).', 'See `dynamic metadata', '<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata>`_.']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string', 'format': 'python-qualified-identifier'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 969,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html', 'title': '``tool.distutils`` table', '$$description': ['**EXPERIMENTAL** (NOT OFFICIALLY SUPPORTED): Use ``tool.distutils``', 'subtables to configure arguments for ``distutils`` commands.', 'Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` commands via `distutils configuration files', '<https://setuptools.pypa.io/en/latest/deprecated/distutils/configfile.html>`_.', 'See also `the old Python docs <https://docs.python.org/3.11/install/>_`.'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 988,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/pyproject-toml/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://peps.python.org/pep-0621/#license>`_.', 'oneOf': [{'type': 'string', 'description': 'An SPDX license identifier', 'format': 'SPDX'}, {'type': 'object', 'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'type': 'object', 'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'license-files': {'description': 'Paths or globs to paths of license files', 'type': 'array', 'items': {'type': 'string'}}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'license-files', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'allOf': [{'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}}, {'if': {'required': ['license-files']}, 'then': {'properties': {'license': {'type': 'string'}}}}], 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 1044,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must contain \" + (str(sorted(data__missing_keys)) + \" properties\"), value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/pyproject-toml/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://peps.python.org/pep-0621/#license>`_.', 'oneOf': [{'type': 'string', 'description': 'An SPDX license identifier', 'format': 'SPDX'}, {'type': 'object', 'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'type': 'object', 'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'license-files': {'description': 'Paths or globs to paths of license files', 'type': 'array', 'items': {'type': 'string'}}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'license-files', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'allOf': [{'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}}, {'if': {'required': ['license-files']}, 'then': {'properties': {'license': {'type': 'string'}}}}], 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 1080,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be object\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 1118,
    "line": "                            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must contain \" + (str(sorted(data__readme__missing_keys)) + \" properties\"), value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 1124,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme.content-type must be string\", value=data__readme__contenttype, name=\"\" + (name_prefix or \"data\") + \".readme.content-type\", definition={'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 1128,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be valid exactly by one definition\" + (\" (\" + str(data__readme_one_of_count12) + \" matches found)\"), value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, rule='oneOf')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 1349,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema#', '$id': 'https://packaging.python.org/en/latest/specifications/pyproject-toml/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://peps.python.org/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://peps.python.org/pep-0621/#license>`_.', 'oneOf': [{'type': 'string', 'description': 'An SPDX license identifier', 'format': 'SPDX'}, {'type': 'object', 'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'type': 'object', 'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'license-files': {'description': 'Paths or globs to paths of license files', 'type': 'array', 'items': {'type': 'string'}}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'license-files', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'allOf': [{'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}}, {'if': {'required': ['license-files']}, 'then': {'properties': {'license': {'type': 'string'}}}}], 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://peps.python.org/pep-0621/#authors-maintainers', 'type': 'object', 'additionalProperties': False, 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\tests\\fixtures.py",
    "line_number": 124,
    "line": "    # TODO: Use `--no-wheel` when setuptools implements its own bdist_wheel"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\tests\\test_bdist_wheel.py",
    "line_number": 668,
    "line": "    # TODO: Remove this test after deprecation period is over"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\tests\\test_build_py.py",
    "line_number": 169,
    "line": "        # TODO: To fix #3260 we need some transition period to deprecate the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\tests\\test_build_py.py",
    "line_number": 199,
    "line": "            # TODO: Enforce the following assertion once #3260 is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\tests\\test_core_metadata.py",
    "line_number": 596,
    "line": "    # TODO: Handle lack of PEP 643 implementation in pypa/wheel?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\tests\\test_develop.py",
    "line_number": 64,
    "line": "            \"TODO: needs a fixture to cause 'develop' \""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\tests\\test_develop.py",
    "line_number": 100,
    "line": "    TODO: These tests were written with a minimal understanding"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\tests\\test_easy_install.py",
    "line_number": 500,
    "line": "        # TODO: Remove these tests once `setup.py install` is completely removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\tests\\test_editable_install.py",
    "line_number": 1040,
    "line": "    # TODO: Remove `compat` after Dec/2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\tests\\test_editable_install.py",
    "line_number": 1125,
    "line": "    # TODO: Remove tests after _run_build_steps is removed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\tests\\test_setuptools.py",
    "line_number": 119,
    "line": "        # TODO: Evaluate if this code is needed at all."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_distutils\\tests\\test_build_ext.py",
    "line_number": 87,
    "line": "    # TODO: can the file be scheduled for deletion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\autocommand\\autoparse.py",
    "line_number": 139,
    "line": "        # TODO: special case for list type."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\autocommand\\autoparse.py",
    "line_number": 152,
    "line": "        # TODO: consider depluralizing metavar/name here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\autocommand\\autoparse.py",
    "line_number": 303,
    "line": "    # TODO: attach an updated __signature__ to autoparse_wrapper, just in case."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\inflect\\__init__.py",
    "line_number": 1998,
    "line": "    ),  # TODO: isn't ue$ -> u encompassed in the following rule?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\inflect\\__init__.py",
    "line_number": 2790,
    "line": "            )  # TODO: what if 2 spaces between these words?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\inflect\\__init__.py",
    "line_number": 3282,
    "line": "            )  # TODO: what if 2 spaces between these words?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\metadata.py",
    "line_number": 204,
    "line": "        # TODO: The spec doesn't say anything about if the keys should be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\metadata.py",
    "line_number": 806,
    "line": "    description: _Validator[str | None] = _Validator()  # TODO 2.1: can be in body"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 29,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 32,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\tags.py",
    "line_number": 378,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\typeguard\\_checkers.py",
    "line_number": 725,
    "line": "            # TODO: raise exception on added keyword-only arguments without defaults"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\typeguard\\_checkers.py",
    "line_number": 736,
    "line": "            # TODO: implement assignability checks for non-callable members"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\wheel\\_bdist_wheel.py",
    "line_number": 92,
    "line": "            # TODO armv8l, packaging pull request #690 => this did not land"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\wheel\\_bdist_wheel.py",
    "line_number": 344,
    "line": "                    # TODO armv8l, packaging pull request #690 => this did not land"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\wheel\\vendored\\packaging\\requirements.py",
    "line_number": 28,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\wheel\\vendored\\packaging\\requirements.py",
    "line_number": 31,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\setuptools\\_vendor\\wheel\\vendored\\packaging\\tags.py",
    "line_number": 382,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\curl_httpclient.py",
    "line_number": 226,
    "line": "                # TODO: Don't smuggle extra data on an attribute of the Curl object."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\http1connection.py",
    "line_number": 210,
    "line": "                # TODO: this will need to change to support client-side keepalive"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\http1connection.py",
    "line_number": 250,
    "line": "                    # TODO: client delegates will get headers_received twice"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\http1connection.py",
    "line_number": 407,
    "line": "                # TODO: should this use"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\http1connection.py",
    "line_number": 444,
    "line": "        # TODO: headers are supposed to be of type str, but we still have some"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\http1connection.py",
    "line_number": 658,
    "line": "        # TODO: \"chunk extensions\" http://tools.ietf.org/html/rfc2616#section-3.6.1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\httpclient.py",
    "line_number": 553,
    "line": "        # TODO: headers may actually be a plain dict until fairly late in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\httpserver.py",
    "line_number": 183,
    "line": "        # This method's signature is not extracted with autodoc"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\httpserver.py",
    "line_number": 361,
    "line": "            # TODO: support trusting multiple layers of proxied protocol"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\httpserver.py",
    "line_number": 390,
    "line": "        # TODO: either make context an official part of the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\httputil.py",
    "line_number": 447,
    "line": "            # TODO: add a method to HTTPConnection for this so it can work with HTTP/2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\httputil.py",
    "line_number": 526,
    "line": "    # TODO: genericize this class to avoid exposing the Union."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\httputil.py",
    "line_number": 1002,
    "line": "            # TODO: quote if necessary."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\iostream.py",
    "line_number": 275,
    "line": "        # TODO: refactor that so subclasses can add additional futures"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\iostream.py",
    "line_number": 644,
    "line": "        # TODO: Clear the read buffer too; it currently breaks some tests."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\iostream.py",
    "line_number": 1031,
    "line": "        TODO: reevaluate this now that callbacks are gone."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\iostream.py",
    "line_number": 1446,
    "line": "        # TODO: This is trickier than it looks, since if write()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\netutil.py",
    "line_number": 613,
    "line": "    # TODO: Now that we have the server_side argument, can we switch to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\netutil.py",
    "line_number": 638,
    "line": "        # TODO: Do we need to do this ourselves or can we trust"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\netutil.py",
    "line_number": 666,
    "line": "    # TODO: add a unittest for hostname validation (python added server-side SNI support in 3.4)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\simple_httpclient.py",
    "line_number": 568,
    "line": "                # TODO: this may cause a StreamClosedError to be raised"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\simple_httpclient.py",
    "line_number": 675,
    "line": "            buffer = BytesIO(data)  # TODO: don't require one big string?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\tcpclient.py",
    "line_number": 280,
    "line": "        # TODO: For better performance we could cache the (af, addr)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\template.py",
    "line_number": 260,
    "line": "    # autodoc because _UNSET looks like garbage.  When changing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\web.py",
    "line_number": 234,
    "line": "        # TODO: need to add set_close_callback to HTTPConnection interface"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\web.py",
    "line_number": 1258,
    "line": "        # TODO: add detach to HTTPConnection?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\web.py",
    "line_number": 2591,
    "line": "            # TODO: figure out typing for the next line."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\web.py",
    "line_number": 3226,
    "line": "        # TODO: can/should this type be inherited from the superclass?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\websocket.py",
    "line_number": 392,
    "line": "        # TODO: Add wbits option."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\websocket.py",
    "line_number": 911,
    "line": "                # TODO: negotiate parameters if compression_options"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\websocket.py",
    "line_number": 1003,
    "line": "        # TODO: handle invalid parameters gracefully"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\websocket.py",
    "line_number": 1393,
    "line": "            # TODO: set server parameters for deflate extension"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\platform\\asyncio.py",
    "line_number": 119,
    "line": "        # TODO(bdarnell): consider making self.asyncio_loop a weakref"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\auth_test.py",
    "line_number": 225,
    "line": "        # TODO: would be nice to go through the login flow instead of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\auth_test.py",
    "line_number": 233,
    "line": "            # TODO(bdarnell): Should we catch HTTP errors and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\httpserver_test.py",
    "line_number": 499,
    "line": "            # TODO: need an async version of ExpectLog so we don't need"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\locale_test.py",
    "line_number": 13,
    "line": "    # TODO: less hacky way to get isolated tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\simple_httpclient_test.py",
    "line_number": 502,
    "line": "        # TODO(bdarnell): this test belongs in httpclient_test instead of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\template_test.py",
    "line_number": 26,
    "line": "        template = Template(\"Hello{# TODO i18n #} {{ name }}!\")"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\template_test.py",
    "line_number": 186,
    "line": "        # TODO(bdarnell): make a test like this for one of the future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\util.py",
    "line_number": 33,
    "line": "# TODO: remove this after pypy3 5.8 is obsolete."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\util_test.py",
    "line_number": 221,
    "line": "    # TODO(bdarnell): make a version of this test for one of the new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\websocket_test.py",
    "line_number": 817,
    "line": "        # TODO: test that the connection gets closed if ping responses stop."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\websocket_test.py",
    "line_number": 834,
    "line": "        # TODO: test that the connection gets closed if ping responses stop."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\websocket_test.py",
    "line_number": 883,
    "line": "        # TODO: Needs tests of messages split over multiple"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\web_test.py",
    "line_number": 1927,
    "line": "        # TODO: extend ExpectLog to test this more precisely"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\web_test.py",
    "line_number": 1995,
    "line": "        # TODO: fix template loader caching so this isn't necessary."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\web_test.py",
    "line_number": 2121,
    "line": "        # TODO: Make this test pass. See #820."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\web_test.py",
    "line_number": 2596,
    "line": "                # TODO: add a HTTP2-compatible version of this test."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\tornado\\test\\wsgi_test.py",
    "line_number": 13,
    "line": "    # TODO: Now that WSGIAdapter is gone, this is a pretty weak test."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\traitlets\\traitlets.py",
    "line_number": 537,
    "line": "            # define __doc__ so that inspectors like autodoc find traits"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\traitlets\\traitlets.py",
    "line_number": 1494,
    "line": "                        # TODO: Separate in a rollback function per notification type."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\traitlets\\config\\configurable.py",
    "line_number": 247,
    "line": "        # TODO: trigger change event if/when dict-update change events take place"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\twine\\repository.py",
    "line_number": 48,
    "line": "        # See TODO for utils.RepositoryConfig"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\twine\\repository.py",
    "line_number": 227,
    "line": "        # TODO(sigmavirus24): Add a way for users to download the package and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\twine\\utils.py",
    "line_number": 43,
    "line": "# TODO: In general, it seems to be assumed that the values retrieved from"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\connection.py",
    "line_number": 281,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\connection.py",
    "line_number": 387,
    "line": "        # object later. TODO: Remove this in favor of a real"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\connection.py",
    "line_number": 512,
    "line": "        # TODO should we implement it everywhere?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\connectionpool.py",
    "line_number": 578,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\connectionpool.py",
    "line_number": 1095,
    "line": "        # TODO revise this, see https://github.com/urllib3/urllib3/issues/2791"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\exceptions.py",
    "line_number": 306,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\response.py",
    "line_number": 980,
    "line": "                # TODO make sure to initially read enough data to get past the headers"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\_base_connection.py",
    "line_number": 20,
    "line": "    # TODO: Remove this in favor of a better"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\http2\\connection.py",
    "line_number": 144,
    "line": "        # TODO SKIPPABLE_HEADERS from urllib3 are ignored."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\http2\\connection.py",
    "line_number": 234,
    "line": "                # TODO: Arbitrary read value."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\http2\\connection.py",
    "line_number": 282,
    "line": "            # TODO this is often present from upstream."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\http2\\connection.py",
    "line_number": 325,
    "line": "    # TODO: This is a woefully incomplete response object, but works for non-streaming."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\http2\\connection.py",
    "line_number": 332,
    "line": "        decode_content: bool = False,  # TODO: support decoding"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\http2\\__init__.py",
    "line_number": 38,
    "line": "    # TODO: Offer 'http/1.1' as well, but for testing purposes this is handy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\util\\request.py",
    "line_number": 221,
    "line": "    # File-like object, TODO: use seek() and tell() for length?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\urllib3\\util\\url.py",
    "line_number": 454,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\watchdog\\observers\\fsevents.py",
    "line_number": 281,
    "line": "                # TODO: find out new path and generate DirMovedEvent?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\watchdog\\observers\\fsevents2.py",
    "line_number": 218,
    "line": "                # TODO: handle id wrapping"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\watchdog\\observers\\fsevents2.py",
    "line_number": 233,
    "line": "                # TODO: generate events for tree"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\watchdog\\observers\\inotify_c.py",
    "line_number": 369,
    "line": "                    # TODO: When a directory from another part of the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\watchdog\\observers\\kqueue.py",
    "line_number": 443,
    "line": "                # TODO: We could simply ignore these files."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\watchdog\\observers\\kqueue.py",
    "line_number": 577,
    "line": "                # TODO: Do we need to fire moved events for the items"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\watchdog\\observers\\kqueue.py",
    "line_number": 616,
    "line": "                # TODO: investigate why order appears to be reversed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32\\Demos\\rastest.py",
    "line_number": 46,
    "line": "    except win32ras.error as xxx_todo_changeme:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32\\Demos\\rastest.py",
    "line_number": 47,
    "line": "        (rc, function, msg) = xxx_todo_changeme.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32\\Demos\\win32gui_menu.py",
    "line_number": 6,
    "line": "# NOTE: This is a work in progress.  Todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32\\lib\\win32gui_struct.py",
    "line_number": 43,
    "line": "    # TODO: Dynamic namedtuple. This could be made static, also exposing the types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32\\test\\test_win32clipboard.py",
    "line_number": 55,
    "line": "        )  # @TODO - cfati: Do we want this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\__init__.py",
    "line_number": 27,
    "line": "### TODO - Load _all_ \\\\Extensions subkeys - for now, we only read the default"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\client\\dynamic.py",
    "line_number": 322,
    "line": "        # XXX - todo - We should support calling Item() here too!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\client\\__init__.py",
    "line_number": 165,
    "line": "    # todo - should support target being an IID"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\demos\\excelAddin.py",
    "line_number": 111,
    "line": "        except pythoncom.com_error as xxx_todo_changeme:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\demos\\excelAddin.py",
    "line_number": 112,
    "line": "            (hr, msg, exc, arg) = xxx_todo_changeme.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\demos\\ietoolbar.py",
    "line_number": 332,
    "line": "    # TODO: implement reg settings for standard toolbar button"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\server\\exception.py",
    "line_number": 77,
    "line": "        # todo - fill in the exception value"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\server\\policy.py",
    "line_number": 215,
    "line": "        except pythoncom.com_error as xxx_todo_changeme:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\server\\policy.py",
    "line_number": 216,
    "line": "            (hr, desc, exc, arg) = xxx_todo_changeme.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\server\\policy.py",
    "line_number": 331,
    "line": "            ### TODO - look at the fdex flags!!!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\server\\policy.py",
    "line_number": 736,
    "line": "        # TODO - Look at fdex flags."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\server\\register.py",
    "line_number": 50,
    "line": "    except win32api.error as xxx_todo_changeme1:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\server\\register.py",
    "line_number": 51,
    "line": "        (code, fn, msg) = xxx_todo_changeme1.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\server\\register.py",
    "line_number": 63,
    "line": "    except win32api.error as xxx_todo_changeme2:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\server\\register.py",
    "line_number": 64,
    "line": "        (code, fn, msg) = xxx_todo_changeme2.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\server\\register.py",
    "line_number": 75,
    "line": "                except win32api.error as xxx_todo_changeme:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\server\\register.py",
    "line_number": 76,
    "line": "                    (code, fn, msg) = xxx_todo_changeme.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\test\\policySemantics.py",
    "line_number": 56,
    "line": "        except pythoncom.com_error as xxx_todo_changeme:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\test\\policySemantics.py",
    "line_number": 57,
    "line": "            (hr, desc, exc, arg) = xxx_todo_changeme.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\test\\testDictionary.py",
    "line_number": 67,
    "line": "    except pythoncom.com_error as xxx_todo_changeme:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\test\\testDictionary.py",
    "line_number": 68,
    "line": "        (hr, desc, exc, argErr) = xxx_todo_changeme.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\test\\testDictionary.py",
    "line_number": 76,
    "line": "    except pythoncom.com_error as xxx_todo_changeme1:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\test\\testDictionary.py",
    "line_number": 77,
    "line": "        (hr, desc, exc, argErr) = xxx_todo_changeme1.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\test\\testDictionary.py",
    "line_number": 85,
    "line": "    except pythoncom.com_error as xxx_todo_changeme2:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\test\\testDictionary.py",
    "line_number": 86,
    "line": "        (hr, desc, exc, argErr) = xxx_todo_changeme2.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32com\\test\\testPyComTest.py",
    "line_number": 906,
    "line": "    # XXX - todo - Complete hack to crank threading support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32comext\\adsi\\demos\\scp.py",
    "line_number": 545,
    "line": "        except adsi.error as xxx_todo_changeme:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32comext\\adsi\\demos\\scp.py",
    "line_number": 546,
    "line": "            (hr, desc, exc, argerr) = xxx_todo_changeme.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32comext\\adsi\\demos\\scp.py",
    "line_number": 554,
    "line": "        except win32api.error as xxx_todo_changeme1:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32comext\\adsi\\demos\\scp.py",
    "line_number": 555,
    "line": "            (hr, func, msg) = xxx_todo_changeme1.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32comext\\axscript\\client\\framework.py",
    "line_number": 1081,
    "line": "            except pythoncom.com_error as xxx_todo_changeme:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32comext\\axscript\\client\\framework.py",
    "line_number": 1082,
    "line": "                (hr, desc, exc, arg) = xxx_todo_changeme.args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32comext\\axscript\\client\\pyscript.py",
    "line_number": 125,
    "line": "        # XXX - todo - if a known item, then should call its default"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32comext\\axscript\\client\\scriptdispatch.py",
    "line_number": 50,
    "line": "                # xxx - todo - work out what code block to pass???"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32comext\\propsys\\pscon.py",
    "line_number": 570,
    "line": "PKEY_Message_ToDoTitle = (IID(\"{BCCC8A3C-8CEF-42E5-9B1C-C69079398BC7}\"), 100)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\folder_view.py",
    "line_number": 270,
    "line": "        # todo - just return any \".ico that comes with python\" + \",0\" :)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\folder_view.py",
    "line_number": 614,
    "line": "        return 0  # XXX - todo - implement this!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\win32ctypes\\core\\cffi\\_system_information.py",
    "line_number": 10,
    "line": "# TODO: retrieve this value using ffi"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\yaml\\scanner.py",
    "line_number": 187,
    "line": "        # TODO: support for BOM within a stream."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\yaml\\scanner.py",
    "line_number": 761,
    "line": "        # TODO: We need to make tab handling rules more sane. A good rule is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\diff.py",
    "line_number": 408,
    "line": "# TODO: Check decorators? Maybe resolved by extensions and/or dynamic analysis."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\diff.py",
    "line_number": 421,
    "line": "# TODO: Check decorators? Maybe resolved by extensions and/or dynamic analysis."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\diff.py",
    "line_number": 498,
    "line": "    # TODO: Support annotation breaking changes."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\diff.py",
    "line_number": 597,
    "line": "    # TODO: Support annotation breaking changes."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\expressions.py",
    "line_number": 320,
    "line": "# TODO: `ExprConstant` is never instantiated,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\expressions.py",
    "line_number": 656,
    "line": "        # TODO: Support inheritance?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\expressions.py",
    "line_number": 657,
    "line": "        # TODO: Support `StrEnum` and `IntEnum`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\finder.py",
    "line_number": 243,
    "line": "            # TODO: Handle .py[cod] and .so files?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\finder.py",
    "line_number": 425,
    "line": "# TODO: For more robustness, we should load and minify the AST"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\mixins.py",
    "line_number": 432,
    "line": "        # TODO: In a future version, we will support two conventions regarding imports:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\models.py",
    "line_number": 943,
    "line": "        # TODO: Better match Python's own scoping rules?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\agents\\inspector.py",
    "line_number": 496,
    "line": "        # TODO: To improve."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\agents\\visitor.py",
    "line_number": 203,
    "line": "        # TODO: With options, could use `optimize=2` to remove docstrings."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\agents\\visitor.py",
    "line_number": 570,
    "line": "            # TODO: Handle assigns like `x.y = z`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\agents\\visitor.py",
    "line_number": 577,
    "line": "                # TODO: Might be better to inspect."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\agents\\nodes\\docstrings.py",
    "line_number": 22,
    "line": "    # TODO: Possible optimization using a type map."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\agents\\nodes\\exports.py",
    "line_number": 96,
    "line": "    log_level: LogLevel = LogLevel.debug,  # TODO: Set to error when we handle more things?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\agents\\nodes\\parameters.py",
    "line_number": 21,
    "line": "    # TODO: Probably some optimizations to do here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\agents\\nodes\\parameters.py",
    "line_number": 56,
    "line": "    # TODO: Probably some optimizations to do here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\docstrings\\sphinx.py",
    "line_number": 32,
    "line": "# TODO: Examples: from the documentation, we're not sure there is a standard format for examples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\docstrings\\sphinx.py",
    "line_number": 381,
    "line": "    # TODO: maybe support names"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\extensions\\base.py",
    "line_number": 442,
    "line": "    # TODO: Deprecate and remove at some point?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_griffe\\extensions\\dataclasses.py",
    "line_number": 93,
    "line": "                # TODO: It is better to explicitly check for `ClassVar`, but"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\cacheprovider.py",
    "line_number": 242,
    "line": "                # TODO: pass ignore_cleanup_errors=True when we no longer support python < 3.10."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\cacheprovider.py",
    "line_number": 576,
    "line": "        # TODO: evaluate generating upward relative paths"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\capture.py",
    "line_number": 706,
    "line": "        # TODO: This type error is real, need to fix."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\compat.py",
    "line_number": 121,
    "line": "    # TODO(RonnyPfannschmidt): This function should be refactored when we"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\doctest.py",
    "line_number": 316,
    "line": "    # TODO: Type ignored -- breaks Liskov Substitution."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\doctest.py",
    "line_number": 346,
    "line": "            # TODO: ReprFileLocation doesn't expect a None lineno."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\fixtures.py",
    "line_number": 1456,
    "line": "        # TODO: The order of the FixtureDefs list of each arg is significant,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\fixtures.py",
    "line_number": 1853,
    "line": "        # TODO: Fix this type ignore."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\junitxml.py",
    "line_number": 515,
    "line": "            # TODO: breaks for --dist=each"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\legacypath.py",
    "line_number": 389,
    "line": "        # TODO: This assert is probably not valid in all cases."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\main.py",
    "line_number": 941,
    "line": "                        # TODO: Remove parametrized workaround once collection structure contains"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\nodes.py",
    "line_number": 514,
    "line": "    # TODO: This omits the style= parameter which breaks Liskov Substitution."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\python.py",
    "line_number": 300,
    "line": "        # TODO: Improve the type of `parent` such that assert/ignore aren't needed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\python.py",
    "line_number": 1488,
    "line": "    # TODO: If escaping is turned off and the user passes bytes,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\python.py",
    "line_number": 1560,
    "line": "        # todo: this is a hell of a hack"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\python.py",
    "line_number": 1577,
    "line": "    # todo: determine sound type limitations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\python.py",
    "line_number": 1661,
    "line": "    # TODO: Type ignored -- breaks Liskov Substitution."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\reports.py",
    "line_number": 465,
    "line": "    # TODO: Check if this is actually reachable."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\reports.py",
    "line_number": 517,
    "line": "        # TODO: Investigate whether the duck typing is really necessary here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\terminal.py",
    "line_number": 109,
    "line": "        # todo Deprecate config.quiet"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\terminal.py",
    "line_number": 1498,
    "line": "        # TODO: Revisit after marks scope would be fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\unittest.py",
    "line_number": 302,
    "line": "        reason: twisted.trial.unittest.Todo | None = None,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py",
    "line_number": 879,
    "line": "            # TODO: This assert should not be needed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\assertion\\__init__.py",
    "line_number": 78,
    "line": "        # TODO(typing): Add a protocol for mark_rewrite() and use it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\AdvancedPython\\venv\\Lib\\site-packages\\_pytest\\mark\\structures.py",
    "line_number": 119,
    "line": "            # TODO: Refactor to fix this type-ignore. Currently the following"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\click\\_termui_impl.py",
    "line_number": 485,
    "line": "    # TODO: This never terminates if the passed generator never terminates."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\applications.py",
    "line_number": 877,
    "line": "        # TODO: remove when discarding the openapi_prefix parameter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 36,
    "line": "# TODO: pv2 should this return strings instead?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 217,
    "line": "        # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 239,
    "line": "            # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 36,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 150,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 236,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 320,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 406,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 490,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 606,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 690,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 55,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 380,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 684,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1000,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1327,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1642,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1956,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\routing.py",
    "line_number": 367,
    "line": "            # TODO: remove this scope later, after a few releases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\routing.py",
    "line_number": 523,
    "line": "            # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\_compat.py",
    "line_number": 202,
    "line": "            # TODO remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\openapi\\models.py",
    "line_number": 147,
    "line": "    # TODO: uncomment and remove below when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\openapi\\utils.py",
    "line_number": 323,
    "line": "                # TODO: probably make status_code a default class attribute for all"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\fastapi\\security\\oauth2.py",
    "line_number": 12,
    "line": "# TODO: import from typing when deprecating Python 3.9"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\httpx\\_auth.py",
    "line_number": 267,
    "line": "        # TODO: implement auth-int"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\ext.py",
    "line_number": 251,
    "line": "    # TODO: the i18n extension is currently reevaluating values in a few"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 212,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 213,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 214,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 217,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 222,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 223,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 224,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 228,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 233,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 234,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 235,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 237,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\markdown_it\\parser_inline.py",
    "line_number": 96,
    "line": "            # TODO: remove this workaround when CM standard will allow nested links"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\markdown_it\\rules_core\\replacements.py",
    "line_number": 26,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\mdurl\\_parse.py",
    "line_number": 168,
    "line": "            # v0.12 TODO(isaacs): This is not quite how Chrome does things."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
    "line_number": 279,
    "line": "                # TODO: use DirectUrl.equivalent when"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
    "line_number": 203,
    "line": "        # TODO: Try to get these passing down from the command?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\inspect.py",
    "line_number": 60,
    "line": "            # TODO tags? scheme?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\index\\collector.py",
    "line_number": 344,
    "line": "        # TODO: In the future, it would be nice if pip supported PEP 691"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 37,
    "line": "from pip._internal.utils.compat import stdlib_pkgs  # TODO: Move definition here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 167,
    "line": "        # TODO: this property is relatively costly to compute, memoize it ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 177,
    "line": "                # TODO: get project location from second line of egg_link file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\models\\installation_report.py",
    "line_number": 50,
    "line": "            # TODO: currently, the resolver uses the default environment to evaluate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\models\\selection_prefs.py",
    "line_number": 6,
    "line": "# TODO: This needs Python 3.10's improved slots support for dataclasses"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
    "line_number": 174,
    "line": "        # TODO: Get range requests to be correctly cached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 552,
    "line": "        # TODO: separate this part out from RequirementPreparer when the v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
    "line_number": 285,
    "line": "        # TODO: The is_installable_dir test here might not be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 107,
    "line": "    # TODO: replace this with slots=True when dropping Python 3.9 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 526,
    "line": "    # TODO: handle space after '\\'."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
    "line_number": 75,
    "line": "        TODO remove this property together with the legacy resolver, since the new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 227,
    "line": "        # TODO performance: this means we iterate the dependencies at least twice,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 360,
    "line": "        # TODO: Supply reason based on force_reinstall and upgrade_strategy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 201,
    "line": "        # TODO: Check already installed candidate, and use it if the link and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 622,
    "line": "        # TODO: Are there more cases this needs to return True? Editable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
    "line_number": 38,
    "line": "    # TODO: Remove this block after dropping Python 3.8 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
    "line_number": 226,
    "line": "        # TODO: There is an assumption that the result will be a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py",
    "line_number": 67,
    "line": "        # TODO: Add some logging here..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1278,
    "line": "    todo = graph.reverse_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1280,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1281,
    "line": "        d = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1285,
    "line": "                todo.append(succ)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1305,
    "line": "    todo = graph.adjacency_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1306,
    "line": "    seen = set(t[0] for t in todo)  # already added to todo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1308,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1309,
    "line": "        d = todo.pop()[0]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1316,
    "line": "                todo.append(pred)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 760,
    "line": "        XXX TODO Note: this cache is never actually cleared. It's assumed that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 922,
    "line": "                # TODO SHA256 digest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1237,
    "line": "        todo = set([dist])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1239,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1240,
    "line": "            dist = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1274,
    "line": "                            todo.add(provider)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 239,
    "line": "    # TODO document the mapping API and UNKNOWN default key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 560,
    "line": "    # TODO could add iter* variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 984,
    "line": "        # TODO: any other fields wanted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 190,
    "line": "            todo = [resource]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 191,
    "line": "            while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 192,
    "line": "                resource = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 203,
    "line": "                            todo.append(child)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 401,
    "line": "        # TODO check k, v for valid values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1131,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1133,
    "line": "        todo.append(final)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1134,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1135,
    "line": "            step = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1149,
    "line": "                todo.extend(preds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 267,
    "line": "        TODO: fill this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 516,
    "line": "    # TODO: unintended side-effect on, e.g., \"2003.05.09\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
    "line_number": 839,
    "line": "            # TODO version verification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 499,
    "line": "        # TODO should we eliminate the recursion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 503,
    "line": "                    # TODO check whether we need to call `list_hook`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 511,
    "line": "            # TODO is the interaction between `list_hook` and `use_list` ok?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 516,
    "line": "                    # TODO check whether we need to call hooks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 204,
    "line": "        # TODO: The spec doesn't say anything about if the keys should be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 806,
    "line": "    description: _Validator[str | None] = _Validator()  # TODO 2.1: can be in body"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 29,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 32,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
    "line_number": 378,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 1,
    "line": "# TODO: Add Generic type annotations to initialized collections."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 122,
    "line": "_ResourceStream = Any  # TODO / Incomplete: A readable file-like object"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3308,
    "line": "            # TODO: remove this except clause when python/cpython#103632 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3598,
    "line": "        # TODO: Add a deadline?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
    "line_number": 863,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
    "line_number": 547,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\latex.py",
    "line_number": 334,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\python.py",
    "line_number": 713,
    "line": "        # different tokens.  TODO: DelegatingLexer should support this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\_mapping.py",
    "line_number": 524,
    "line": "    'TodotxtLexer': ('pip._vendor.pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py",
    "line_number": 686,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\text.py",
    "line_number": 562,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\truststore\\_macos.py",
    "line_number": 558,
    "line": "            # TODO: Not sure if we need the SecTrustResultType for anything?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
    "line_number": 199,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py",
    "line_number": 522,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py",
    "line_number": 289,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 659,
    "line": "        # TODO: should I do clean shutdown here? Do I have to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 819,
    "line": "        # TODO: Well, crap."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 829,
    "line": "        # TODO: Update in line with above."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 31,
    "line": "# TODO: In v2 we can remove this sentinel and metaclass with deprecated options."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 261,
    "line": "        # TODO: Deprecated, remove in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 323,
    "line": "        # TODO: If already given in **kw we use what's given to us"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 454,
    "line": "        # TODO: For now favor if the Retry implementation sets its own method_whitelist"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 608,
    "line": "            # TODO: Remove this deprecated alias in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
    "line_number": 402,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\alias_generators.py",
    "line_number": 7,
    "line": "# TODO: in V3, change the argument names to be more descriptive"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\dataclasses.py",
    "line_number": 273,
    "line": "        # TODO `parent_namespace` is currently None, but we could do the same thing as Pydantic models:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\fields.py",
    "line_number": 677,
    "line": "            # TODO: properly make use of the protocol (https://rich.readthedocs.io/en/stable/pretty.html#rich-repr-protocol)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\fields.py",
    "line_number": 747,
    "line": "    default: ellipsis,  # noqa: F821  # TODO: use `_typing_extra.EllipsisType` when we drop Py3.9"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\functional_validators.py",
    "line_number": 212,
    "line": "            # TODO if `schema['serialization']` is one of `'include-exclude-dict/sequence',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 434,
    "line": "        TODO: the nested function definitions here seem like bad practice, I'd like to unpack these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 504,
    "line": "        # TODO: I dislike that we have to wrap these basic dict updates in callables, is there any way around this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 715,
    "line": "            # TODO: should we add regex flags to the pattern?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1127,
    "line": "        # TODO: improvements along with https://github.com/pydantic/pydantic/issues/8208"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1235,
    "line": "        # This reflects the v1 behavior; TODO: we should make it possible to exclude OpenAPI stuff from the JSON schema"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1276,
    "line": "                        # TODO: fixme - this is a workaround for the fact that we can't always resolve refs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1315,
    "line": "        # TODO: Need to read the default value off of model config or whatever"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1316,
    "line": "        use_strict = schema.get('strict', False)  # TODO: replace this default False"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 124,
    "line": "    # TODO v3 fallback to `dict` when the deprecated `dict` method gets removed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 230,
    "line": "        # TODO: V3 - remove `model_fields` and `model_computed_fields` properties from the `BaseModel` class - they should only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 924,
    "line": "                # TODO - matching error"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\mypy.py",
    "line_number": 493,
    "line": "                    # TODO: Only do this if the first argument of the decorated function is `cls`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\mypy.py",
    "line_number": 602,
    "line": "                # TODO: We shouldn't be performing type operations during the main"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\type_adapter.py",
    "line_number": 275,
    "line": "            # TODO: we don't go through the rebuild logic here directly because we don't want"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\deprecated\\json.py",
    "line_number": 112,
    "line": "# TODO: Add a suggested migration path once there is a way to use custom encoders"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\experimental\\pipeline.py",
    "line_number": 124,
    "line": "# TODO: ultimately, make this public, see https://github.com/pydantic/pydantic/pull/9459#discussion_r1628197626"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\experimental\\pipeline.py",
    "line_number": 592,
    "line": "            # TODO: is there a better way? should we just not do this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\v1\\networks.py",
    "line_number": 535,
    "line": "    # TODO: Needed to generic \"Parts\" for \"Replica Set\", \"Sharded Cluster\", and other mongodb deployment modes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\v1\\utils.py",
    "line_number": 270,
    "line": "            # TODO: replace annotation with actual expected types once #1055 solved"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_metadata.py",
    "line_number": 25,
    "line": "    TODO: Perhaps we should move this structure to pydantic-core. At the moment, though,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_metadata.py",
    "line_number": 28,
    "line": "    TODO: It's unfortunate how functionally oriented JSON schema generation is, especially that which occurs during"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_utils.py",
    "line_number": 169,
    "line": "# TODO: Should we move _WalkCoreSchema into pydantic_core proper?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_utils.py",
    "line_number": 297,
    "line": "    # TODO duplicate schema types for serializers and validators, needs to be deduplicated:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_utils.py",
    "line_number": 305,
    "line": "    # TODO duplicate schema types for serializers and validators, needs to be deduplicated:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py",
    "line_number": 332,
    "line": "                    # TODO: We should probably do something with this so that validate_assignment behaves properly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py",
    "line_number": 344,
    "line": "                        # TODO: same note as above re validate_assignment"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py",
    "line_number": 361,
    "line": "            # was already evaluated. TODO: is this method relevant?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 302,
    "line": "        # TODO: in theory we should check that the schema accepts a serialization key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 402,
    "line": "            # TODO this is an ugly hack, how do we trigger an Any schema for serialization?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 487,
    "line": "        # TODO: note, this is a fairly common pattern, re lax / strict for attempted type coercion,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1223,
    "line": "            # TODO Can we use field_info.apply_typevars_map here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1557,
    "line": "        # TODO: do we really need to resolve type vars here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1576,
    "line": "                # TODO: something like https://github.com/pydantic/pydantic/issues/5952"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1814,
    "line": "        TODO support functional validators once we support them in Config"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 2001,
    "line": "        # TODO: I'd rather we didn't handle the generic nature in the annotations prep, but the same way we do other"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 2265,
    "line": "# TODO V3: this function is only used for deprecated decorators. It should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generics.py",
    "line_number": 244,
    "line": "    # TODO: This could be unified with `get_standard_typevars_map` if we stored the generic metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_known_annotated_metadata.py",
    "line_number": 82,
    "line": "    # TODO: this is a bit redundant, we could probably avoid some of these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_namespace_utils.py",
    "line_number": 240,
    "line": "            # TODO: should we merge the parent namespace here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_std_types_schema.py",
    "line_number": 6,
    "line": "# TODO: eventually, we'd like to move all of the types handled here to have pydantic-core validators"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_typing_extra.py",
    "line_number": 88,
    "line": "# TODO remove and replace with `get_args` when we drop support for Python 3.8"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_typing_extra.py",
    "line_number": 272,
    "line": "# TODO implement `is_finalvar_annotation` as Final can be wrapped with other special forms:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_typing_extra.py",
    "line_number": 401,
    "line": "# TODO: Ideally, we should avoid relying on the private `typing` constructs:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_validators.py",
    "line_number": 37,
    "line": "    # TODO: refactor sequence validation to validate with either a list or a tuple"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic\\_internal\\_validators.py",
    "line_number": 126,
    "line": "        # todo strict mode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pydantic_core\\core_schema.py",
    "line_number": 1135,
    "line": "            TODO: use of a tzinfo where offset changes based on the datetime is not yet supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexer.py",
    "line_number": 861,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\formatters\\img.py",
    "line_number": 548,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\formatters\\latex.py",
    "line_number": 334,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\ada.py",
    "line_number": 116,
    "line": "            # TODO: use Name.Namespace if appropriate.  This needs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\css.py",
    "line_number": 555,
    "line": "            # TODO: broken, and prone to infinite loops."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\c_like.py",
    "line_number": 212,
    "line": "            # TODO: \"correctly\" parse complex code attributes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\dns.py",
    "line_number": 53,
    "line": "            # TODO, $GENERATE https://bind9.readthedocs.io/en/v9.18.14/chapter3.html#soa-rr"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\dotnet.py",
    "line_number": 558,
    "line": "# TODO support multiple languages within the same source file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\fantom.py",
    "line_number": 49,
    "line": "            # TODO: highlight references in fandocs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\fantom.py",
    "line_number": 85,
    "line": "        'insideUri': [  # TODO: remove copy/paste str/uri"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\felix.py",
    "line_number": 53,
    "line": "        'requires', 'todo', 'virtual', 'use',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\gleam.py",
    "line_number": 33,
    "line": "        'panic', 'pub', 'test', 'todo', 'type', 'use',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\haskell.py",
    "line_number": 445,
    "line": "            # TODO: these don't match the comments in docs, remove."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\inferno.py",
    "line_number": 24,
    "line": "    TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\inferno.py",
    "line_number": 85,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\javascript.py",
    "line_number": 133,
    "line": "            # TODO: should this include single-line comments and allow nesting strings?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\jvm.py",
    "line_number": 886,
    "line": "    # TODO / should divide keywords/symbols into namespace/rest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\jvm.py",
    "line_number": 1341,
    "line": "            (r'\\S+\\s+', Text)   # TODO: make tests pass without \\s+"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 648,
    "line": "            (r'^(\\* )(TODO)( .*)',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 650,
    "line": "            (r'^(\\*\\*+ )(TODO)( .*)',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 656,
    "line": "            # Unordered lists items, including TODO items and description items"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 672,
    "line": "            # TODO: language-dependent syntax highlighting (see Markdown lexer)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 701,
    "line": "            (_inline(r'=', r'='), String), # TODO token"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\meson.py",
    "line_number": 27,
    "line": "    # TODO String interpolation @VARNAME@ inner matches"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\meson.py",
    "line_number": 28,
    "line": "    # TODO keyword_arg: value inner matches"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\mips.py",
    "line_number": 28,
    "line": "    # TODO: add '*.s' and '*.asm', which will require designing an analyse_text"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\modula2.py",
    "line_number": 474,
    "line": "        'TODO', 'FFI', 'ADDR', 'VARGLIST', 'VARGC',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 123,
    "line": "                \"varname\",  # TODO varname the right fit?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 273,
    "line": "                        \"async for\",  # TODO https://docs.modular.com/mojo/roadmap#no-async-for-or-async-with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 274,
    "line": "                        \"async with\",  # TODO https://docs.modular.com/mojo/roadmap#no-async-for-or-async-with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 702,
    "line": "        # TODO supported?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 79,
    "line": "                'charactertodouble', 'charactertofloat', 'charactertointeger',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 81,
    "line": "                'chartodouble', 'chartofloat', 'chartoint', 'chartointeger',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 219,
    "line": "                'stringtocharacter', 'stringtodouble', 'stringtofloat',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 229,
    "line": "                'tochar', 'todouble', 'tofloat', 'toint', 'toint64', 'tointeger',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\nix.py",
    "line_number": 123,
    "line": "            # TODO: we should probably escape also here ''${ \\${"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\nix.py",
    "line_number": 135,
    "line": "        # TODO: let/in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\oberon.py",
    "line_number": 50,
    "line": "            # TODO: nested comments (* (* ... *) ... (* ... *) *) not supported!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\objective.py",
    "line_number": 130,
    "line": "                # TODO unsure if ellipses are allowed elsewhere, see"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\objective.py",
    "line_number": 452,
    "line": "            (r':param: [a-zA-Z_]\\w*|:returns?:|(FIXME|MARK|TODO):',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\openscad.py",
    "line_number": 81,
    "line": "            (r':param: [a-zA-Z_]\\w*|:returns?:|(FIXME|MARK|TODO):',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\parsers.py",
    "line_number": 396,
    "line": "            # TODO finish implementing other possibilities for scope"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\pascal.py",
    "line_number": 131,
    "line": "            'chr', 'close', 'closefile', 'comptocurrency', 'comptodouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\perl.py",
    "line_number": 35,
    "line": "    # TODO: give this to a perl guy who knows how to parse perl..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\perl.py",
    "line_number": 360,
    "line": "        'throws-like','timezone','tmpdir','to','today','todo','toggle','to-posix',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\python.py",
    "line_number": 715,
    "line": "        # different tokens.  TODO: DelegatingLexer should support this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\rnc.py",
    "line_number": 36,
    "line": "            # TODO single quoted strings and escape sequences outside of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\rust.py",
    "line_number": 62,
    "line": "        'thread_local', 'todo', 'trace_macros', 'unimplemented', 'unreachable',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\scripting.py",
    "line_number": 1500,
    "line": "            # TODO: JES3 statement"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\sql.py",
    "line_number": 157,
    "line": "            # TODO: better logging"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\sql.py",
    "line_number": 352,
    "line": "                # TODO: better handle multiline comments at the end with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\sql.py",
    "line_number": 686,
    "line": "            # TODO: Backslash escapes?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\templates.py",
    "line_number": 755,
    "line": "            # TODO support other Python syntax like $foo['bar']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\testing.py",
    "line_number": 199,
    "line": "            # Extract todo items."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\testing.py",
    "line_number": 200,
    "line": "            (r'(?i)\\bTODO\\b', Comment.Preproc),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textedit.py",
    "line_number": 140,
    "line": "            # TODO: regexes can have other delims"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textedit.py",
    "line_number": 191,
    "line": "        # TODO: builtins are only subsequent tokens on lines"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 19,
    "line": "__all__ = ['IrcLogsLexer', 'TodotxtLexer', 'HttpLexer', 'GettextLexer',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 208,
    "line": "class TodotxtLexer(RegexLexer):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 210,
    "line": "    Lexer for Todo.txt todo list format."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 213,
    "line": "    name = 'Todotxt'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 214,
    "line": "    url = 'http://todotxt.com/'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 215,
    "line": "    aliases = ['todotxt']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 217,
    "line": "    # *.todotxt is not a standard extension for Todo.txt files; including it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 219,
    "line": "    filenames = ['todo.txt', '*.todotxt']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 220,
    "line": "    mimetypes = ['text/x-todo']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 222,
    "line": "    # Aliases mapping standard token types of Todo.txt format concepts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 240,
    "line": "    # TODO: Make date regex more ISO 8601 compliant"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\urbi.py",
    "line_number": 34,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\wgsl.py",
    "line_number": 390,
    "line": "            # TODO: Treat context-depedendent names specially"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\wgsl.py",
    "line_number": 396,
    "line": "            # TODO: templates start and end tokens."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\_asy_builtins.py",
    "line_number": 9,
    "line": "    TODO: perl/python script in Asymptote SVN similar to asy-list.pl but only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\_lasso_builtins.py",
    "line_number": 2504,
    "line": "        'ical_todo',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\_lasso_builtins.py",
    "line_number": 5297,
    "line": "        'todos',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\_mapping.py",
    "line_number": 535,
    "line": "    'TodotxtLexer': ('pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\_mql_builtins.py",
    "line_number": 257,
    "line": "    'StrToDouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\_mql_builtins.py",
    "line_number": 278,
    "line": "    'StringToDouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\_scilab_builtins.py",
    "line_number": 431,
    "line": "    'csvStringToDouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\_sourcemod_builtins.py",
    "line_number": 786,
    "line": "    'AddFileToDownloadsTable',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\pygments\\lexers\\_stata_builtins.py",
    "line_number": 80,
    "line": "    \"esti\", \"estimates\", \"etodow\", \"etof\", \"etomdy\", \"ex\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 473,
    "line": "            # TODO: what happens if we don't have a filename?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1464,
    "line": "        # TODO: verify that we're in the state MultipartState.END, otherwise throw an"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1655,
    "line": "                # TODO: check for error here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1685,
    "line": "                # TODO: handle mixed case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1692,
    "line": "                # TODO: check for errors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1703,
    "line": "                # TODO: check that we properly handle 8bit / 7bit encoding."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1764,
    "line": "        # TODO: check the parser's return value for errors?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\rich\\text.py",
    "line_number": 562,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\rich_toolkit\\menu.py",
    "line_number": 137,
    "line": "        # TODO: inline is not wrapped (maybe that's good?)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\rich_toolkit\\progress.py",
    "line_number": 32,
    "line": "    # TODO: remove this once rich uses \"Self\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 158,
    "line": "        # TODO: Replace with `raise ValueError(\"newlines not allowed\")`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\__init__.py",
    "line_number": 179,
    "line": "           TODO: This method seems to be similar to the one in ``distutils.cmd``"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\command\\dist_info.py",
    "line_number": 103,
    "line": "        # TODO: if bdist_wheel if merged into setuptools, just add \"keep_egg_info\" there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1123,
    "line": "        extras = ''  # TODO: self.report_extras(req, dist)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1722,
    "line": "    # TODO: This code doesn't make sense. What is it trying to do?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 69,
    "line": "    COMPAT = \"compat\"  # TODO: Remove `compat` after Dec/2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 279,
    "line": "        # TODO: Once plugins/customisations had the chance to catch up, replace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\command\\install_lib.py",
    "line_number": 54,
    "line": "        # TODO: is it necessary to short-circuit here? i.e. what's the cost"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 106,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 128,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 131,
    "line": "        # TODO: After the previous statement is removed the try/except can be replaced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 369,
    "line": "                # TODO: Don't set field when support for pyproject.toml stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
    "line_number": 96,
    "line": "    # TODO: Set fields back to `None` once the feature stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 33,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 41,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must be object\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 46,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must contain ['requires'] properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 71,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path must be array\", value=data__buildsystem__backendpath, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path\", definition={'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 77,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \" must be string\", value=data__buildsystem__backendpath_item, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \"\", definition={'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 79,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must not contain \"+str(data__buildsystem_keys)+\" properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 88,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".tool must be object\", value=data__tool, name=\"\" + (name_prefix or \"data\") + \".tool\", definition={'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 101,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 106,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 158,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".script-files must be array\", value=data__scriptfiles, name=\"\" + (name_prefix or \"data\") + \".script-files\", definition={'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 360,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".py-modules must be array\", value=data__pymodules, name=\"\" + (name_prefix or \"data\") + \".py-modules\", definition={'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 411,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".license-files must be array\", value=data__licensefiles, name=\"\" + (name_prefix or \"data\") + \".license-files\", definition={'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 517,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 635,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 654,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 659,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must contain ['name'] properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 695,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be object\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 733,
    "line": "                            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must contain ['content-type'] properties\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 739,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme.content-type must be string\", value=data__readme__contenttype, name=\"\" + (name_prefix or \"data\") + \".readme.content-type\", definition={'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 743,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be valid exactly by one definition\" + (\" (\" + str(data__readme_one_of_count8) + \" matches found)\"), value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, rule='oneOf')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 940,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\starlette\\middleware\\exceptions.py",
    "line_number": 25,
    "line": "        self.debug = debug  # TODO: We ought to handle 404 cases if debug is set."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\core.py",
    "line_number": 272,
    "line": "        # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\core.py",
    "line_number": 413,
    "line": "        # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\models.py",
    "line_number": 177,
    "line": "        # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\models.py",
    "line_number": 287,
    "line": "        # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\models.py",
    "line_number": 305,
    "line": "        # TODO: remove is_flag and flag_value in a future release"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\models.py",
    "line_number": 416,
    "line": "        # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 23,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 40,
    "line": "    # TODO: remove is_flag and flag_value in a future release"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 89,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 106,
    "line": "    # TODO: remove is_flag and flag_value in a future release"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 153,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 171,
    "line": "    # TODO: remove is_flag and flag_value in a future release"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 275,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 332,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 387,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\_completion_classes.py",
    "line_number": 48,
    "line": "        # TODO: Explore replicating the new behavior from Click, with item types and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\_completion_classes.py",
    "line_number": 92,
    "line": "        # TODO: Explore replicating the new behavior from Click, pay attention to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\_completion_classes.py",
    "line_number": 134,
    "line": "        # TODO: Explore replicating the new behavior from Click, pay attention to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\_completion_shared.py",
    "line_number": 78,
    "line": "# TODO: Probably refactor this, copied from Click 7.x"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\typer\\_completion_shared.py",
    "line_number": 135,
    "line": "    # TODO: consider setting the style only for the current program"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\uvicorn\\protocols\\websockets\\wsproto_impl.py",
    "line_number": 120,
    "line": "            # TODO: Remove `type: ignore` when wsproto fixes the type annotation."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\uvicorn\\protocols\\websockets\\wsproto_impl.py",
    "line_number": 204,
    "line": "        # todo: we may want to guard the size of self.bytes and self.text"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\yaml\\scanner.py",
    "line_number": 187,
    "line": "        # TODO: support for BOM within a stream."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\BooksApi\\venv\\Lib\\site-packages\\yaml\\scanner.py",
    "line_number": 761,
    "line": "        # TODO: We need to make tab handling rules more sane. A good rule is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
    "line_number": 416,
    "line": "        def info(self) -> Any:  # TODO: add return type annotation when Typeshed gets it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\click\\_termui_impl.py",
    "line_number": 485,
    "line": "    # TODO: This never terminates if the passed generator never terminates."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\applications.py",
    "line_number": 877,
    "line": "        # TODO: remove when discarding the openapi_prefix parameter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 36,
    "line": "# TODO: pv2 should this return strings instead?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 217,
    "line": "        # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 239,
    "line": "            # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 36,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 150,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 236,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 320,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 406,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 490,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 606,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 690,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 55,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 380,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 684,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1000,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1327,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1642,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1956,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\routing.py",
    "line_number": 367,
    "line": "            # TODO: remove this scope later, after a few releases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\routing.py",
    "line_number": 523,
    "line": "            # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\_compat.py",
    "line_number": 202,
    "line": "            # TODO remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\openapi\\models.py",
    "line_number": 147,
    "line": "    # TODO: uncomment and remove below when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\openapi\\utils.py",
    "line_number": 344,
    "line": "                # TODO: probably make status_code a default class attribute for all"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\fastapi\\security\\oauth2.py",
    "line_number": 12,
    "line": "# TODO: import from typing when deprecating Python 3.9"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\httpx\\_auth.py",
    "line_number": 267,
    "line": "        # TODO: implement auth-int"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\ext.py",
    "line_number": 251,
    "line": "    # TODO: the i18n extension is currently reevaluating values in a few"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 212,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 213,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 214,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 217,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 222,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 223,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 224,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 228,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 233,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 234,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 235,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 237,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\pagination.py",
    "line_number": 89,
    "line": "            # TODO emit warning log"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\pagination.py",
    "line_number": 122,
    "line": "            # TODO emit warning log"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 91,
    "line": "# TODO: make base page type vars covariant"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 178,
    "line": "        # TODO: do we have to preprocess params here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 505,
    "line": "        # TODO: report this error to httpx"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 523,
    "line": "            # TODO: type ignore is required as stringify_items is well typed but we can't be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 1320,
    "line": "            # TODO(someday): support non asyncio runtimes here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 1974,
    "line": "    # TODO: untested"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 1981,
    "line": "    # TODO: untested"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_compat.py",
    "line_number": 74,
    "line": "        # TODO: provide an error message here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_models.py",
    "line_number": 747,
    "line": "elif not TYPE_CHECKING:  # TODO: condition is weird"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_qs.py",
    "line_number": 81,
    "line": "                        # TODO: error if unknown format"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\cli\\_api\\audio.py",
    "line_number": 39,
    "line": "    # TODO: doesn't seem to be supported by the API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\cli\\_api\\completions.py",
    "line_number": 89,
    "line": "    # TODO: add support for logit_bias"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\resources\\vector_stores\\file_batches.py",
    "line_number": 203,
    "line": "        # TODO: don't poll unless necessary??"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\resources\\vector_stores\\file_batches.py",
    "line_number": 540,
    "line": "        # TODO: don't poll unless necessary??"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_utils\\_transform.py",
    "line_number": 33,
    "line": "# TODO: support for drilling globals() and locals()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_utils\\_transform.py",
    "line_number": 34,
    "line": "# TODO: ensure works correctly with forward references in all cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_utils\\_transform.py",
    "line_number": 192,
    "line": "        # TODO: there may be edge cases where the same normalized field name will transform to two different names"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_utils\\_transform.py",
    "line_number": 340,
    "line": "        # TODO: there may be edge cases where the same normalized field name will transform to two different names"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_utils\\_utils.py",
    "line_number": 43,
    "line": "    # TODO: this needs to take Dict but variance issues....."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\openai\\_utils\\_utils.py",
    "line_number": 272,
    "line": "                    # TODO: this error message is not deterministic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
    "line_number": 279,
    "line": "                # TODO: use DirectUrl.equivalent when"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
    "line_number": 203,
    "line": "        # TODO: Try to get these passing down from the command?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\inspect.py",
    "line_number": 60,
    "line": "            # TODO tags? scheme?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\index\\collector.py",
    "line_number": 344,
    "line": "        # TODO: In the future, it would be nice if pip supported PEP 691"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 37,
    "line": "from pip._internal.utils.compat import stdlib_pkgs  # TODO: Move definition here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 167,
    "line": "        # TODO: this property is relatively costly to compute, memoize it ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 177,
    "line": "                # TODO: get project location from second line of egg_link file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\models\\installation_report.py",
    "line_number": 50,
    "line": "            # TODO: currently, the resolver uses the default environment to evaluate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\models\\selection_prefs.py",
    "line_number": 6,
    "line": "# TODO: This needs Python 3.10's improved slots support for dataclasses"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
    "line_number": 174,
    "line": "        # TODO: Get range requests to be correctly cached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 552,
    "line": "        # TODO: separate this part out from RequirementPreparer when the v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
    "line_number": 285,
    "line": "        # TODO: The is_installable_dir test here might not be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 107,
    "line": "    # TODO: replace this with slots=True when dropping Python 3.9 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 526,
    "line": "    # TODO: handle space after '\\'."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
    "line_number": 75,
    "line": "        TODO remove this property together with the legacy resolver, since the new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 227,
    "line": "        # TODO performance: this means we iterate the dependencies at least twice,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 360,
    "line": "        # TODO: Supply reason based on force_reinstall and upgrade_strategy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 201,
    "line": "        # TODO: Check already installed candidate, and use it if the link and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 622,
    "line": "        # TODO: Are there more cases this needs to return True? Editable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
    "line_number": 38,
    "line": "    # TODO: Remove this block after dropping Python 3.8 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
    "line_number": 226,
    "line": "        # TODO: There is an assumption that the result will be a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py",
    "line_number": 67,
    "line": "        # TODO: Add some logging here..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1278,
    "line": "    todo = graph.reverse_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1280,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1281,
    "line": "        d = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1285,
    "line": "                todo.append(succ)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1305,
    "line": "    todo = graph.adjacency_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1306,
    "line": "    seen = set(t[0] for t in todo)  # already added to todo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1308,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1309,
    "line": "        d = todo.pop()[0]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1316,
    "line": "                todo.append(pred)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 760,
    "line": "        XXX TODO Note: this cache is never actually cleared. It's assumed that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 922,
    "line": "                # TODO SHA256 digest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1237,
    "line": "        todo = set([dist])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1239,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1240,
    "line": "            dist = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1274,
    "line": "                            todo.add(provider)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 239,
    "line": "    # TODO document the mapping API and UNKNOWN default key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 560,
    "line": "    # TODO could add iter* variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 984,
    "line": "        # TODO: any other fields wanted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 190,
    "line": "            todo = [resource]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 191,
    "line": "            while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 192,
    "line": "                resource = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 203,
    "line": "                            todo.append(child)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 401,
    "line": "        # TODO check k, v for valid values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1131,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1133,
    "line": "        todo.append(final)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1134,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1135,
    "line": "            step = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1149,
    "line": "                todo.extend(preds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 267,
    "line": "        TODO: fill this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 516,
    "line": "    # TODO: unintended side-effect on, e.g., \"2003.05.09\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
    "line_number": 839,
    "line": "            # TODO version verification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 499,
    "line": "        # TODO should we eliminate the recursion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 503,
    "line": "                    # TODO check whether we need to call `list_hook`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 511,
    "line": "            # TODO is the interaction between `list_hook` and `use_list` ok?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 516,
    "line": "                    # TODO check whether we need to call hooks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 204,
    "line": "        # TODO: The spec doesn't say anything about if the keys should be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 806,
    "line": "    description: _Validator[str | None] = _Validator()  # TODO 2.1: can be in body"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 29,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 32,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
    "line_number": 378,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 1,
    "line": "# TODO: Add Generic type annotations to initialized collections."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 122,
    "line": "_ResourceStream = Any  # TODO / Incomplete: A readable file-like object"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3308,
    "line": "            # TODO: remove this except clause when python/cpython#103632 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3598,
    "line": "        # TODO: Add a deadline?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
    "line_number": 863,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
    "line_number": 547,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\latex.py",
    "line_number": 334,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\python.py",
    "line_number": 713,
    "line": "        # different tokens.  TODO: DelegatingLexer should support this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\_mapping.py",
    "line_number": 524,
    "line": "    'TodotxtLexer': ('pip._vendor.pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py",
    "line_number": 686,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\text.py",
    "line_number": 562,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\truststore\\_macos.py",
    "line_number": 558,
    "line": "            # TODO: Not sure if we need the SecTrustResultType for anything?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
    "line_number": 199,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py",
    "line_number": 522,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py",
    "line_number": 289,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 659,
    "line": "        # TODO: should I do clean shutdown here? Do I have to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 819,
    "line": "        # TODO: Well, crap."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 829,
    "line": "        # TODO: Update in line with above."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 31,
    "line": "# TODO: In v2 we can remove this sentinel and metaclass with deprecated options."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 261,
    "line": "        # TODO: Deprecated, remove in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 323,
    "line": "        # TODO: If already given in **kw we use what's given to us"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 454,
    "line": "        # TODO: For now favor if the Retry implementation sets its own method_whitelist"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 608,
    "line": "            # TODO: Remove this deprecated alias in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
    "line_number": 402,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\alias_generators.py",
    "line_number": 7,
    "line": "# TODO: in V3, change the argument names to be more descriptive"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\dataclasses.py",
    "line_number": 273,
    "line": "        # TODO `parent_namespace` is currently None, but we could do the same thing as Pydantic models:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\fields.py",
    "line_number": 677,
    "line": "            # TODO: properly make use of the protocol (https://rich.readthedocs.io/en/stable/pretty.html#rich-repr-protocol)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\fields.py",
    "line_number": 747,
    "line": "    default: ellipsis,  # noqa: F821  # TODO: use `_typing_extra.EllipsisType` when we drop Py3.9"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\functional_validators.py",
    "line_number": 212,
    "line": "            # TODO if `schema['serialization']` is one of `'include-exclude-dict/sequence',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 434,
    "line": "        TODO: the nested function definitions here seem like bad practice, I'd like to unpack these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 504,
    "line": "        # TODO: I dislike that we have to wrap these basic dict updates in callables, is there any way around this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 715,
    "line": "            # TODO: should we add regex flags to the pattern?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1127,
    "line": "        # TODO: improvements along with https://github.com/pydantic/pydantic/issues/8208"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1235,
    "line": "        # This reflects the v1 behavior; TODO: we should make it possible to exclude OpenAPI stuff from the JSON schema"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1276,
    "line": "                        # TODO: fixme - this is a workaround for the fact that we can't always resolve refs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1315,
    "line": "        # TODO: Need to read the default value off of model config or whatever"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1316,
    "line": "        use_strict = schema.get('strict', False)  # TODO: replace this default False"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 124,
    "line": "    # TODO v3 fallback to `dict` when the deprecated `dict` method gets removed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 230,
    "line": "        # TODO: V3 - remove `model_fields` and `model_computed_fields` properties from the `BaseModel` class - they should only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 924,
    "line": "                # TODO - matching error"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\mypy.py",
    "line_number": 493,
    "line": "                    # TODO: Only do this if the first argument of the decorated function is `cls`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\mypy.py",
    "line_number": 602,
    "line": "                # TODO: We shouldn't be performing type operations during the main"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\type_adapter.py",
    "line_number": 275,
    "line": "            # TODO: we don't go through the rebuild logic here directly because we don't want"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\deprecated\\json.py",
    "line_number": 112,
    "line": "# TODO: Add a suggested migration path once there is a way to use custom encoders"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\experimental\\pipeline.py",
    "line_number": 124,
    "line": "# TODO: ultimately, make this public, see https://github.com/pydantic/pydantic/pull/9459#discussion_r1628197626"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\experimental\\pipeline.py",
    "line_number": 592,
    "line": "            # TODO: is there a better way? should we just not do this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\v1\\networks.py",
    "line_number": 535,
    "line": "    # TODO: Needed to generic \"Parts\" for \"Replica Set\", \"Sharded Cluster\", and other mongodb deployment modes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\v1\\utils.py",
    "line_number": 270,
    "line": "            # TODO: replace annotation with actual expected types once #1055 solved"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_metadata.py",
    "line_number": 25,
    "line": "    TODO: Perhaps we should move this structure to pydantic-core. At the moment, though,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_metadata.py",
    "line_number": 28,
    "line": "    TODO: It's unfortunate how functionally oriented JSON schema generation is, especially that which occurs during"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_utils.py",
    "line_number": 169,
    "line": "# TODO: Should we move _WalkCoreSchema into pydantic_core proper?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_utils.py",
    "line_number": 297,
    "line": "    # TODO duplicate schema types for serializers and validators, needs to be deduplicated:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_utils.py",
    "line_number": 305,
    "line": "    # TODO duplicate schema types for serializers and validators, needs to be deduplicated:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py",
    "line_number": 332,
    "line": "                    # TODO: We should probably do something with this so that validate_assignment behaves properly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py",
    "line_number": 344,
    "line": "                        # TODO: same note as above re validate_assignment"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py",
    "line_number": 361,
    "line": "            # was already evaluated. TODO: is this method relevant?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 302,
    "line": "        # TODO: in theory we should check that the schema accepts a serialization key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 402,
    "line": "            # TODO this is an ugly hack, how do we trigger an Any schema for serialization?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 487,
    "line": "        # TODO: note, this is a fairly common pattern, re lax / strict for attempted type coercion,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1223,
    "line": "            # TODO Can we use field_info.apply_typevars_map here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1557,
    "line": "        # TODO: do we really need to resolve type vars here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1576,
    "line": "                # TODO: something like https://github.com/pydantic/pydantic/issues/5952"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1814,
    "line": "        TODO support functional validators once we support them in Config"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 2001,
    "line": "        # TODO: I'd rather we didn't handle the generic nature in the annotations prep, but the same way we do other"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 2265,
    "line": "# TODO V3: this function is only used for deprecated decorators. It should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generics.py",
    "line_number": 244,
    "line": "    # TODO: This could be unified with `get_standard_typevars_map` if we stored the generic metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_known_annotated_metadata.py",
    "line_number": 82,
    "line": "    # TODO: this is a bit redundant, we could probably avoid some of these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_namespace_utils.py",
    "line_number": 240,
    "line": "            # TODO: should we merge the parent namespace here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_std_types_schema.py",
    "line_number": 6,
    "line": "# TODO: eventually, we'd like to move all of the types handled here to have pydantic-core validators"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_typing_extra.py",
    "line_number": 88,
    "line": "# TODO remove and replace with `get_args` when we drop support for Python 3.8"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_typing_extra.py",
    "line_number": 272,
    "line": "# TODO implement `is_finalvar_annotation` as Final can be wrapped with other special forms:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_typing_extra.py",
    "line_number": 401,
    "line": "# TODO: Ideally, we should avoid relying on the private `typing` constructs:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_validators.py",
    "line_number": 37,
    "line": "    # TODO: refactor sequence validation to validate with either a list or a tuple"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_validators.py",
    "line_number": 126,
    "line": "        # todo strict mode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\pydantic_core\\core_schema.py",
    "line_number": 1135,
    "line": "            TODO: use of a tzinfo where offset changes based on the datetime is not yet supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 473,
    "line": "            # TODO: what happens if we don't have a filename?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1464,
    "line": "        # TODO: verify that we're in the state MultipartState.END, otherwise throw an"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1655,
    "line": "                # TODO: check for error here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1685,
    "line": "                # TODO: handle mixed case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1692,
    "line": "                # TODO: check for errors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1703,
    "line": "                # TODO: check that we properly handle 8bit / 7bit encoding."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1764,
    "line": "        # TODO: check the parser's return value for errors?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 158,
    "line": "        # TODO: Replace with `raise ValueError(\"newlines not allowed\")`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\__init__.py",
    "line_number": 179,
    "line": "           TODO: This method seems to be similar to the one in ``distutils.cmd``"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\command\\dist_info.py",
    "line_number": 103,
    "line": "        # TODO: if bdist_wheel if merged into setuptools, just add \"keep_egg_info\" there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1123,
    "line": "        extras = ''  # TODO: self.report_extras(req, dist)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1722,
    "line": "    # TODO: This code doesn't make sense. What is it trying to do?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 69,
    "line": "    COMPAT = \"compat\"  # TODO: Remove `compat` after Dec/2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 279,
    "line": "        # TODO: Once plugins/customisations had the chance to catch up, replace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\command\\install_lib.py",
    "line_number": 54,
    "line": "        # TODO: is it necessary to short-circuit here? i.e. what's the cost"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 106,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 128,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 131,
    "line": "        # TODO: After the previous statement is removed the try/except can be replaced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 369,
    "line": "                # TODO: Don't set field when support for pyproject.toml stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
    "line_number": 96,
    "line": "    # TODO: Set fields back to `None` once the feature stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 33,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 41,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must be object\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 46,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must contain ['requires'] properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 71,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path must be array\", value=data__buildsystem__backendpath, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path\", definition={'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 77,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \" must be string\", value=data__buildsystem__backendpath_item, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \"\", definition={'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 79,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must not contain \"+str(data__buildsystem_keys)+\" properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 88,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".tool must be object\", value=data__tool, name=\"\" + (name_prefix or \"data\") + \".tool\", definition={'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 101,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 106,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 158,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".script-files must be array\", value=data__scriptfiles, name=\"\" + (name_prefix or \"data\") + \".script-files\", definition={'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 360,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".py-modules must be array\", value=data__pymodules, name=\"\" + (name_prefix or \"data\") + \".py-modules\", definition={'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 411,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".license-files must be array\", value=data__licensefiles, name=\"\" + (name_prefix or \"data\") + \".license-files\", definition={'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 517,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 635,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 654,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 659,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must contain ['name'] properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 695,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be object\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 733,
    "line": "                            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must contain ['content-type'] properties\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 739,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme.content-type must be string\", value=data__readme__contenttype, name=\"\" + (name_prefix or \"data\") + \".readme.content-type\", definition={'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 743,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be valid exactly by one definition\" + (\" (\" + str(data__readme_one_of_count8) + \" matches found)\"), value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, rule='oneOf')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 940,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\starlette\\middleware\\exceptions.py",
    "line_number": 25,
    "line": "        self.debug = debug  # TODO: We ought to handle 404 cases if debug is set."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\tqdm\\cli.py",
    "line_number": 117,
    "line": "# TODO: add custom support for some of the following?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\tqdm\\cli.py",
    "line_number": 125,
    "line": "        TODO: find out why this is needed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\tqdm\\gui.py",
    "line_number": 26,
    "line": "    # TODO: @classmethod: write() on GUI?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\tqdm\\rich.py",
    "line_number": 74,
    "line": "    # TODO: @classmethod: write()?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\tqdm\\std.py",
    "line_number": 1442,
    "line": "        # TODO: private method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\tqdm\\tk.py",
    "line_number": 31,
    "line": "    # TODO: @classmethod: write()?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\tqdm\\utils.py",
    "line_number": 9,
    "line": "# TODO consider using wcswidth third-party package for 0-width characters"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\tqdm\\__init__.py",
    "line_number": 3,
    "line": "from .cli import main  # TODO: remove in v5.0.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\tqdm\\__init__.py",
    "line_number": 4,
    "line": "from .gui import tqdm as tqdm_gui  # TODO: remove in v5.0.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\tqdm\\__init__.py",
    "line_number": 5,
    "line": "from .gui import trange as tgrange  # TODO: remove in v5.0.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\uvicorn\\protocols\\websockets\\wsproto_impl.py",
    "line_number": 120,
    "line": "            # TODO: Remove `type: ignore` when wsproto fixes the type annotation."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\uvicorn\\protocols\\websockets\\wsproto_impl.py",
    "line_number": 204,
    "line": "        # todo: we may want to guard the size of self.bytes and self.text"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ChatBot\\venv\\Lib\\site-packages\\wheel\\vendored\\packaging\\tags.py",
    "line_number": 317,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\api\\program.py",
    "line_number": 12,
    "line": "# TODO: check if code below works"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 1020,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 3568,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
    "line_number": 416,
    "line": "        def info(self) -> Any:  # TODO: add return type annotation when Typeshed gets it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\dammit.py",
    "line_number": 86,
    "line": "# TODO-TYPING: The Pattern type here could use more refinement, but it's tricky."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\dammit.py",
    "line_number": 880,
    "line": "        TODO: Since this is only used to convert smart quotes, it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\element.py",
    "line_number": 1063,
    "line": "        # TODO-TYPING: \"There is no syntax to indicate optional or"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\element.py",
    "line_number": 1320,
    "line": "    # TODO-TYPING This should be SupportsIndex|slice but SupportsIndex"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\filter.py",
    "line_number": 220,
    "line": "    # TODO-TYPING: All MatchRule objects also have an attribute"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
    "line_number": 195,
    "line": "            # TODO: Why is the parser 'html.parser' here? Using"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
    "line_number": 201,
    "line": "        # TODO: What are **kwargs exactly? Should they be passed in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
    "line_number": 258,
    "line": "        # TODO: This code is not covered by the BS4 tests, and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
    "line_number": 338,
    "line": "    # TODO-TYPING: typeshed stubs are incorrect about this;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
    "line_number": 378,
    "line": "            # TODO This has O(n^2) performance, for input like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
    "line_number": 544,
    "line": "                # TODO-COVERAGE: This code has no test coverage and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
    "line_number": 565,
    "line": "    # TODO-TYPING: typeshed stubs are incorrect about this;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
    "line_number": 570,
    "line": "    # TODO-TYPING: typeshed stubs are incorrect about this;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
    "line_number": 154,
    "line": "        # TODO: handle namespaces here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
    "line_number": 233,
    "line": "        # TODO: This was originally a workaround for a bug in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
    "line_number": 176,
    "line": "        # TODO: Issue a warning if parser is present but not a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
    "line_number": 243,
    "line": "            # TODO: This is a workaround for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
    "line_number": 225,
    "line": "        # TODO: store_line_numbers is probably irrelevant now that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
    "line_number": 600,
    "line": "    #: TODO: Arguably <noscript> could go here but it seems"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
    "line_number": 652,
    "line": "        # TODO: This cast will fail in the (very unlikely) scenario"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\tests\\test_builder_registry.py",
    "line_number": 30,
    "line": "# TODO: Split out the lxml and html5lib tests into their own classes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\tests\\test_tag.py",
    "line_number": 223,
    "line": "        # TODO: This code is in the builder and should be tested there."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\tests\\test_tree.py",
    "line_number": 1058,
    "line": "        # TODO: OK but what happens?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\bs4\\tests\\test_tree.py",
    "line_number": 1095,
    "line": "        # TODO: OK but what does it look like?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\charset_normalizer\\legacy.py",
    "line_number": 9,
    "line": "# TODO: remove this check when dropping Python 3.7 support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\click\\_termui_impl.py",
    "line_number": 485,
    "line": "    # TODO: This never terminates if the passed generator never terminates."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\applications.py",
    "line_number": 877,
    "line": "        # TODO: remove when discarding the openapi_prefix parameter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 36,
    "line": "# TODO: pv2 should this return strings instead?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 217,
    "line": "        # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 239,
    "line": "            # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 36,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 150,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 236,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 320,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 406,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 490,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 606,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 690,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 55,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 380,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 684,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1000,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1327,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1642,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1956,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\routing.py",
    "line_number": 367,
    "line": "            # TODO: remove this scope later, after a few releases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\routing.py",
    "line_number": 523,
    "line": "            # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\_compat.py",
    "line_number": 202,
    "line": "            # TODO remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\openapi\\models.py",
    "line_number": 147,
    "line": "    # TODO: uncomment and remove below when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\openapi\\utils.py",
    "line_number": 344,
    "line": "                # TODO: probably make status_code a default class attribute for all"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\fastapi\\security\\oauth2.py",
    "line_number": 12,
    "line": "# TODO: import from typing when deprecating Python 3.9"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\httpx\\_auth.py",
    "line_number": 267,
    "line": "        # TODO: implement auth-int"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\ext.py",
    "line_number": 251,
    "line": "    # TODO: the i18n extension is currently reevaluating values in a few"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 212,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 213,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 214,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 217,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 222,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 223,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 224,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 228,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 233,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 234,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 235,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 237,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\markdown_it\\parser_inline.py",
    "line_number": 96,
    "line": "            # TODO: remove this workaround when CM standard will allow nested links"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\markdown_it\\rules_core\\replacements.py",
    "line_number": 26,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\mdurl\\_parse.py",
    "line_number": 168,
    "line": "            # v0.12 TODO(isaacs): This is not quite how Chrome does things."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\pagination.py",
    "line_number": 89,
    "line": "            # TODO emit warning log"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\pagination.py",
    "line_number": 122,
    "line": "            # TODO emit warning log"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 91,
    "line": "# TODO: make base page type vars covariant"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 194,
    "line": "        # TODO: do we have to preprocess params here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 535,
    "line": "        # TODO: report this error to httpx"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 553,
    "line": "            # TODO: type ignore is required as stringify_items is well typed but we can't be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 1354,
    "line": "            # TODO(someday): support non asyncio runtimes here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 2012,
    "line": "    # TODO: untested"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_base_client.py",
    "line_number": 2019,
    "line": "    # TODO: untested"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_compat.py",
    "line_number": 74,
    "line": "        # TODO: provide an error message here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_models.py",
    "line_number": 746,
    "line": "elif not TYPE_CHECKING:  # TODO: condition is weird"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_qs.py",
    "line_number": 81,
    "line": "                        # TODO: error if unknown format"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\cli\\_api\\audio.py",
    "line_number": 39,
    "line": "    # TODO: doesn't seem to be supported by the API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\cli\\_api\\completions.py",
    "line_number": 89,
    "line": "    # TODO: add support for logit_bias"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\resources\\vector_stores\\file_batches.py",
    "line_number": 203,
    "line": "        # TODO: don't poll unless necessary??"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\resources\\vector_stores\\file_batches.py",
    "line_number": 540,
    "line": "        # TODO: don't poll unless necessary??"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_utils\\_transform.py",
    "line_number": 35,
    "line": "# TODO: support for drilling globals() and locals()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_utils\\_transform.py",
    "line_number": 36,
    "line": "# TODO: ensure works correctly with forward references in all cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_utils\\_transform.py",
    "line_number": 208,
    "line": "        # TODO: there may be edge cases where the same normalized field name will transform to two different names"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_utils\\_transform.py",
    "line_number": 370,
    "line": "        # TODO: there may be edge cases where the same normalized field name will transform to two different names"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_utils\\_utils.py",
    "line_number": 43,
    "line": "    # TODO: this needs to take Dict but variance issues....."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\openai\\_utils\\_utils.py",
    "line_number": 272,
    "line": "                    # TODO: this error message is not deterministic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
    "line_number": 279,
    "line": "                # TODO: use DirectUrl.equivalent when"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
    "line_number": 203,
    "line": "        # TODO: Try to get these passing down from the command?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\inspect.py",
    "line_number": 60,
    "line": "            # TODO tags? scheme?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\index\\collector.py",
    "line_number": 344,
    "line": "        # TODO: In the future, it would be nice if pip supported PEP 691"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 37,
    "line": "from pip._internal.utils.compat import stdlib_pkgs  # TODO: Move definition here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 167,
    "line": "        # TODO: this property is relatively costly to compute, memoize it ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 177,
    "line": "                # TODO: get project location from second line of egg_link file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\models\\installation_report.py",
    "line_number": 50,
    "line": "            # TODO: currently, the resolver uses the default environment to evaluate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\models\\selection_prefs.py",
    "line_number": 6,
    "line": "# TODO: This needs Python 3.10's improved slots support for dataclasses"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
    "line_number": 174,
    "line": "        # TODO: Get range requests to be correctly cached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 552,
    "line": "        # TODO: separate this part out from RequirementPreparer when the v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
    "line_number": 285,
    "line": "        # TODO: The is_installable_dir test here might not be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 107,
    "line": "    # TODO: replace this with slots=True when dropping Python 3.9 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 526,
    "line": "    # TODO: handle space after '\\'."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
    "line_number": 75,
    "line": "        TODO remove this property together with the legacy resolver, since the new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 227,
    "line": "        # TODO performance: this means we iterate the dependencies at least twice,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 360,
    "line": "        # TODO: Supply reason based on force_reinstall and upgrade_strategy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 201,
    "line": "        # TODO: Check already installed candidate, and use it if the link and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 622,
    "line": "        # TODO: Are there more cases this needs to return True? Editable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
    "line_number": 38,
    "line": "    # TODO: Remove this block after dropping Python 3.8 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
    "line_number": 226,
    "line": "        # TODO: There is an assumption that the result will be a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py",
    "line_number": 67,
    "line": "        # TODO: Add some logging here..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1278,
    "line": "    todo = graph.reverse_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1280,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1281,
    "line": "        d = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1285,
    "line": "                todo.append(succ)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1305,
    "line": "    todo = graph.adjacency_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1306,
    "line": "    seen = set(t[0] for t in todo)  # already added to todo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1308,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1309,
    "line": "        d = todo.pop()[0]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1316,
    "line": "                todo.append(pred)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 760,
    "line": "        XXX TODO Note: this cache is never actually cleared. It's assumed that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 922,
    "line": "                # TODO SHA256 digest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1237,
    "line": "        todo = set([dist])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1239,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1240,
    "line": "            dist = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1274,
    "line": "                            todo.add(provider)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 239,
    "line": "    # TODO document the mapping API and UNKNOWN default key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 560,
    "line": "    # TODO could add iter* variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 984,
    "line": "        # TODO: any other fields wanted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 190,
    "line": "            todo = [resource]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 191,
    "line": "            while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 192,
    "line": "                resource = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 203,
    "line": "                            todo.append(child)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 401,
    "line": "        # TODO check k, v for valid values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1131,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1133,
    "line": "        todo.append(final)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1134,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1135,
    "line": "            step = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1149,
    "line": "                todo.extend(preds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 267,
    "line": "        TODO: fill this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 516,
    "line": "    # TODO: unintended side-effect on, e.g., \"2003.05.09\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
    "line_number": 839,
    "line": "            # TODO version verification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 499,
    "line": "        # TODO should we eliminate the recursion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 503,
    "line": "                    # TODO check whether we need to call `list_hook`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 511,
    "line": "            # TODO is the interaction between `list_hook` and `use_list` ok?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 516,
    "line": "                    # TODO check whether we need to call hooks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 204,
    "line": "        # TODO: The spec doesn't say anything about if the keys should be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 806,
    "line": "    description: _Validator[str | None] = _Validator()  # TODO 2.1: can be in body"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 29,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 32,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
    "line_number": 378,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 1,
    "line": "# TODO: Add Generic type annotations to initialized collections."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 122,
    "line": "_ResourceStream = Any  # TODO / Incomplete: A readable file-like object"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3308,
    "line": "            # TODO: remove this except clause when python/cpython#103632 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3598,
    "line": "        # TODO: Add a deadline?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
    "line_number": 863,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
    "line_number": 547,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\latex.py",
    "line_number": 334,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\python.py",
    "line_number": 713,
    "line": "        # different tokens.  TODO: DelegatingLexer should support this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\_mapping.py",
    "line_number": 524,
    "line": "    'TodotxtLexer': ('pip._vendor.pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py",
    "line_number": 686,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\text.py",
    "line_number": 562,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\truststore\\_macos.py",
    "line_number": 558,
    "line": "            # TODO: Not sure if we need the SecTrustResultType for anything?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
    "line_number": 199,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py",
    "line_number": 522,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py",
    "line_number": 289,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 659,
    "line": "        # TODO: should I do clean shutdown here? Do I have to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 819,
    "line": "        # TODO: Well, crap."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 829,
    "line": "        # TODO: Update in line with above."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 31,
    "line": "# TODO: In v2 we can remove this sentinel and metaclass with deprecated options."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 261,
    "line": "        # TODO: Deprecated, remove in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 323,
    "line": "        # TODO: If already given in **kw we use what's given to us"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 454,
    "line": "        # TODO: For now favor if the Retry implementation sets its own method_whitelist"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 608,
    "line": "            # TODO: Remove this deprecated alias in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
    "line_number": 402,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\alias_generators.py",
    "line_number": 7,
    "line": "# TODO: in V3, change the argument names to be more descriptive"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\dataclasses.py",
    "line_number": 276,
    "line": "        # TODO `parent_namespace` is currently None, but we could do the same thing as Pydantic models:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\fields.py",
    "line_number": 55,
    "line": "    # TODO PEP 747: use TypeForm:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\fields.py",
    "line_number": 333,
    "line": "        # TODO check for classvar and error?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\fields.py",
    "line_number": 411,
    "line": "        # TODO check for classvar and error?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\fields.py",
    "line_number": 413,
    "line": "        # TODO infer from the default, this can be done in v3 once we treat final fields with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\fields.py",
    "line_number": 703,
    "line": "            # TODO: properly make use of the protocol (https://rich.readthedocs.io/en/stable/pretty.html#rich-repr-protocol)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\fields.py",
    "line_number": 780,
    "line": "    default: ellipsis,  # noqa: F821  # TODO: use `_typing_extra.EllipsisType` when we drop Py3.9"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\functional_validators.py",
    "line_number": 213,
    "line": "            # TODO if `schema['serialization']` is one of `'include-exclude-dict/sequence',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 436,
    "line": "        TODO: the nested function definitions here seem like bad practice, I'd like to unpack these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 505,
    "line": "        # TODO: I dislike that we have to wrap these basic dict updates in callables, is there any way around this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 713,
    "line": "            # TODO: should we add regex flags to the pattern?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1117,
    "line": "        # TODO: improvements along with https://github.com/pydantic/pydantic/issues/8208"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1240,
    "line": "        # This reflects the v1 behavior; TODO: we should make it possible to exclude OpenAPI stuff from the JSON schema"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1281,
    "line": "                        # TODO: fixme - this is a workaround for the fact that we can't always resolve refs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1320,
    "line": "        # TODO: Need to read the default value off of model config or whatever"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1321,
    "line": "        use_strict = schema.get('strict', False)  # TODO: replace this default False"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 4,
    "line": "# TODO v3 fallback to `dict` when the deprecated `dict` method gets removed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 1046,
    "line": "                    # TODO - matching error"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 1692,
    "line": "    # TODO PEP 747: replace `Any` by the TypeForm:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\mypy.py",
    "line_number": 510,
    "line": "                    # TODO: Only do this if the first argument of the decorated function is `cls`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\mypy.py",
    "line_number": 619,
    "line": "                # TODO: We shouldn't be performing type operations during the main"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\mypy.py",
    "line_number": 782,
    "line": "            # TODO this path should be removed (see https://github.com/pydantic/pydantic/issues/11119)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\type_adapter.py",
    "line_number": 274,
    "line": "            # TODO: we don't go through the rebuild logic here directly because we don't want"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\deprecated\\json.py",
    "line_number": 112,
    "line": "# TODO: Add a suggested migration path once there is a way to use custom encoders"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\experimental\\pipeline.py",
    "line_number": 124,
    "line": "# TODO: ultimately, make this public, see https://github.com/pydantic/pydantic/pull/9459#discussion_r1628197626"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\experimental\\pipeline.py",
    "line_number": 592,
    "line": "            # TODO: is there a better way? should we just not do this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\v1\\networks.py",
    "line_number": 535,
    "line": "    # TODO: Needed to generic \"Parts\" for \"Replica Set\", \"Sharded Cluster\", and other mongodb deployment modes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\v1\\utils.py",
    "line_number": 270,
    "line": "            # TODO: replace annotation with actual expected types once #1055 solved"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_metadata.py",
    "line_number": 29,
    "line": "    TODO: Perhaps we should move this structure to pydantic-core. At the moment, though,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_metadata.py",
    "line_number": 32,
    "line": "    TODO: It's unfortunate how functionally oriented JSON schema generation is, especially that which occurs during"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py",
    "line_number": 390,
    "line": "                    # TODO: We should probably do something with this so that validate_assignment behaves properly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py",
    "line_number": 402,
    "line": "                        # TODO: same note as above re validate_assignment"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py",
    "line_number": 423,
    "line": "            # was already evaluated. TODO: is this method relevant?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 298,
    "line": "        # TODO: in theory we should check that the schema accepts a serialization key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 402,
    "line": "            # TODO this is an ugly hack, how do we trigger an Any schema for serialization?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 608,
    "line": "        # TODO: note, this is a fairly common pattern, re lax / strict for attempted type coercion,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1704,
    "line": "        # TODO: do we really need to resolve type vars here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1723,
    "line": "                # TODO: something like https://github.com/pydantic/pydantic/issues/5952"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1972,
    "line": "        TODO support functional validators once we support them in Config"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 2478,
    "line": "# TODO V3: this function is only used for deprecated decorators. It should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generics.py",
    "line_number": 235,
    "line": "    # TODO: This could be unified with `get_standard_typevars_map` if we stored the generic metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generics.py",
    "line_number": 276,
    "line": "        # TODO remove parentheses when we drop support for Python 3.10:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_known_annotated_metadata.py",
    "line_number": 84,
    "line": "    # TODO: this is a bit redundant, we could probably avoid some of these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_model_construction.py",
    "line_number": 230,
    "line": "                # TODO we can also stop there if `__pydantic_fields_complete__` is False."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_namespace_utils.py",
    "line_number": 236,
    "line": "            # TODO: should we merge the parent namespace here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_namespace_utils.py",
    "line_number": 263,
    "line": "        # TODO `typ.__type_params__` when we drop support for Python 3.11:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_schema_gather.py",
    "line_number": 91,
    "line": "    # TODO When we drop 3.9, use a match statement to get better type checking and remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_schema_gather.py",
    "line_number": 165,
    "line": "        # TODO duplicate schema types for serializers and validators, needs to be deduplicated."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_schema_gather.py",
    "line_number": 171,
    "line": "        # TODO duplicate schema types for serializers and validators, needs to be deduplicated."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_typing_extra.py",
    "line_number": 139,
    "line": "# TODO implement `is_finalvar_annotation` as Final can be wrapped with other special forms:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_typing_extra.py",
    "line_number": 186,
    "line": "# TODO In 2.12, delete this export. It is currently defined only to not break"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_typing_extra.py",
    "line_number": 195,
    "line": "# TODO: Ideally, we should avoid relying on the private `typing` constructs:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_typing_extra.py",
    "line_number": 445,
    "line": "        # TODO ideally recursion errors should be checked in `eval_type` above, but `eval_type_backport`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_validators.py",
    "line_number": 44,
    "line": "    # TODO: refactor sequence validation to validate with either a list or a tuple"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic\\_internal\\_validators.py",
    "line_number": 133,
    "line": "        # todo strict mode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pydantic_core\\core_schema.py",
    "line_number": 1135,
    "line": "            TODO: use of a tzinfo where offset changes based on the datetime is not yet supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexer.py",
    "line_number": 861,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\formatters\\img.py",
    "line_number": 548,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\formatters\\latex.py",
    "line_number": 334,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\ada.py",
    "line_number": 116,
    "line": "            # TODO: use Name.Namespace if appropriate.  This needs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\css.py",
    "line_number": 555,
    "line": "            # TODO: broken, and prone to infinite loops."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\c_like.py",
    "line_number": 212,
    "line": "            # TODO: \"correctly\" parse complex code attributes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\dns.py",
    "line_number": 53,
    "line": "            # TODO, $GENERATE https://bind9.readthedocs.io/en/v9.18.14/chapter3.html#soa-rr"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\dotnet.py",
    "line_number": 558,
    "line": "# TODO support multiple languages within the same source file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\fantom.py",
    "line_number": 49,
    "line": "            # TODO: highlight references in fandocs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\fantom.py",
    "line_number": 85,
    "line": "        'insideUri': [  # TODO: remove copy/paste str/uri"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\felix.py",
    "line_number": 53,
    "line": "        'requires', 'todo', 'virtual', 'use',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\gleam.py",
    "line_number": 33,
    "line": "        'panic', 'pub', 'test', 'todo', 'type', 'use',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\haskell.py",
    "line_number": 445,
    "line": "            # TODO: these don't match the comments in docs, remove."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\inferno.py",
    "line_number": 24,
    "line": "    TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\inferno.py",
    "line_number": 85,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\javascript.py",
    "line_number": 133,
    "line": "            # TODO: should this include single-line comments and allow nesting strings?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\jvm.py",
    "line_number": 886,
    "line": "    # TODO / should divide keywords/symbols into namespace/rest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\jvm.py",
    "line_number": 1341,
    "line": "            (r'\\S+\\s+', Text)   # TODO: make tests pass without \\s+"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 648,
    "line": "            (r'^(\\* )(TODO)( .*)',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 650,
    "line": "            (r'^(\\*\\*+ )(TODO)( .*)',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 656,
    "line": "            # Unordered lists items, including TODO items and description items"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 672,
    "line": "            # TODO: language-dependent syntax highlighting (see Markdown lexer)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\markup.py",
    "line_number": 701,
    "line": "            (_inline(r'=', r'='), String), # TODO token"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\meson.py",
    "line_number": 27,
    "line": "    # TODO String interpolation @VARNAME@ inner matches"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\meson.py",
    "line_number": 28,
    "line": "    # TODO keyword_arg: value inner matches"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\mips.py",
    "line_number": 28,
    "line": "    # TODO: add '*.s' and '*.asm', which will require designing an analyse_text"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\modula2.py",
    "line_number": 474,
    "line": "        'TODO', 'FFI', 'ADDR', 'VARGLIST', 'VARGC',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 123,
    "line": "                \"varname\",  # TODO varname the right fit?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 273,
    "line": "                        \"async for\",  # TODO https://docs.modular.com/mojo/roadmap#no-async-for-or-async-with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 274,
    "line": "                        \"async with\",  # TODO https://docs.modular.com/mojo/roadmap#no-async-for-or-async-with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\mojo.py",
    "line_number": 702,
    "line": "        # TODO supported?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 79,
    "line": "                'charactertodouble', 'charactertofloat', 'charactertointeger',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 81,
    "line": "                'chartodouble', 'chartofloat', 'chartoint', 'chartointeger',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 219,
    "line": "                'stringtocharacter', 'stringtodouble', 'stringtofloat',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\ncl.py",
    "line_number": 229,
    "line": "                'tochar', 'todouble', 'tofloat', 'toint', 'toint64', 'tointeger',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\nix.py",
    "line_number": 123,
    "line": "            # TODO: we should probably escape also here ''${ \\${"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\nix.py",
    "line_number": 135,
    "line": "        # TODO: let/in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\oberon.py",
    "line_number": 50,
    "line": "            # TODO: nested comments (* (* ... *) ... (* ... *) *) not supported!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\objective.py",
    "line_number": 130,
    "line": "                # TODO unsure if ellipses are allowed elsewhere, see"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\objective.py",
    "line_number": 452,
    "line": "            (r':param: [a-zA-Z_]\\w*|:returns?:|(FIXME|MARK|TODO):',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\openscad.py",
    "line_number": 81,
    "line": "            (r':param: [a-zA-Z_]\\w*|:returns?:|(FIXME|MARK|TODO):',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\parsers.py",
    "line_number": 396,
    "line": "            # TODO finish implementing other possibilities for scope"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\pascal.py",
    "line_number": 131,
    "line": "            'chr', 'close', 'closefile', 'comptocurrency', 'comptodouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\perl.py",
    "line_number": 35,
    "line": "    # TODO: give this to a perl guy who knows how to parse perl..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\perl.py",
    "line_number": 360,
    "line": "        'throws-like','timezone','tmpdir','to','today','todo','toggle','to-posix',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\python.py",
    "line_number": 715,
    "line": "        # different tokens.  TODO: DelegatingLexer should support this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\rnc.py",
    "line_number": 36,
    "line": "            # TODO single quoted strings and escape sequences outside of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\rust.py",
    "line_number": 62,
    "line": "        'thread_local', 'todo', 'trace_macros', 'unimplemented', 'unreachable',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\scripting.py",
    "line_number": 1500,
    "line": "            # TODO: JES3 statement"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\sql.py",
    "line_number": 157,
    "line": "            # TODO: better logging"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\sql.py",
    "line_number": 352,
    "line": "                # TODO: better handle multiline comments at the end with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\sql.py",
    "line_number": 686,
    "line": "            # TODO: Backslash escapes?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\templates.py",
    "line_number": 755,
    "line": "            # TODO support other Python syntax like $foo['bar']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\testing.py",
    "line_number": 199,
    "line": "            # Extract todo items."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\testing.py",
    "line_number": 200,
    "line": "            (r'(?i)\\bTODO\\b', Comment.Preproc),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textedit.py",
    "line_number": 140,
    "line": "            # TODO: regexes can have other delims"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textedit.py",
    "line_number": 191,
    "line": "        # TODO: builtins are only subsequent tokens on lines"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 19,
    "line": "__all__ = ['IrcLogsLexer', 'TodotxtLexer', 'HttpLexer', 'GettextLexer',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 208,
    "line": "class TodotxtLexer(RegexLexer):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 210,
    "line": "    Lexer for Todo.txt todo list format."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 213,
    "line": "    name = 'Todotxt'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 214,
    "line": "    url = 'http://todotxt.com/'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 215,
    "line": "    aliases = ['todotxt']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 217,
    "line": "    # *.todotxt is not a standard extension for Todo.txt files; including it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 219,
    "line": "    filenames = ['todo.txt', '*.todotxt']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 220,
    "line": "    mimetypes = ['text/x-todo']"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 222,
    "line": "    # Aliases mapping standard token types of Todo.txt format concepts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\textfmts.py",
    "line_number": 240,
    "line": "    # TODO: Make date regex more ISO 8601 compliant"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\urbi.py",
    "line_number": 34,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\wgsl.py",
    "line_number": 390,
    "line": "            # TODO: Treat context-depedendent names specially"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\wgsl.py",
    "line_number": 396,
    "line": "            # TODO: templates start and end tokens."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\_asy_builtins.py",
    "line_number": 9,
    "line": "    TODO: perl/python script in Asymptote SVN similar to asy-list.pl but only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\_lasso_builtins.py",
    "line_number": 2504,
    "line": "        'ical_todo',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\_lasso_builtins.py",
    "line_number": 5297,
    "line": "        'todos',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\_mapping.py",
    "line_number": 535,
    "line": "    'TodotxtLexer': ('pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\_mql_builtins.py",
    "line_number": 257,
    "line": "    'StrToDouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\_mql_builtins.py",
    "line_number": 278,
    "line": "    'StringToDouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\_scilab_builtins.py",
    "line_number": 431,
    "line": "    'csvStringToDouble',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\_sourcemod_builtins.py",
    "line_number": 786,
    "line": "    'AddFileToDownloadsTable',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\pygments\\lexers\\_stata_builtins.py",
    "line_number": 80,
    "line": "    \"esti\", \"estimates\", \"etodow\", \"etof\", \"etomdy\", \"ex\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 473,
    "line": "            # TODO: what happens if we don't have a filename?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1464,
    "line": "        # TODO: verify that we're in the state MultipartState.END, otherwise throw an"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1655,
    "line": "                # TODO: check for error here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1685,
    "line": "                # TODO: handle mixed case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1692,
    "line": "                # TODO: check for errors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1703,
    "line": "                # TODO: check that we properly handle 8bit / 7bit encoding."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\python_multipart\\multipart.py",
    "line_number": 1764,
    "line": "        # TODO: check the parser's return value for errors?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\requests\\adapters.py",
    "line_number": 686,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\rich\\text.py",
    "line_number": 562,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\rich_toolkit\\progress.py",
    "line_number": 51,
    "line": "    # TODO: remove this once rich uses \"Self\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\rich_toolkit\\toolkit.py",
    "line_number": 27,
    "line": "        # TODO: deprecate this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\rich_toolkit\\styles\\base.py",
    "line_number": 171,
    "line": "        # TODO: is there a better way for this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\rich_toolkit\\styles\\base.py",
    "line_number": 217,
    "line": "        # TODO: do we need this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\rich_toolkit\\styles\\base.py",
    "line_number": 231,
    "line": "    # TODO: maybe don't reuse this for menus"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\rich_toolkit\\styles\\tagged.py",
    "line_number": 98,
    "line": "            # TODO: why do we add 2? :D we probably did this in the previous version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 158,
    "line": "        # TODO: Replace with `raise ValueError(\"newlines not allowed\")`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\__init__.py",
    "line_number": 179,
    "line": "           TODO: This method seems to be similar to the one in ``distutils.cmd``"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\command\\dist_info.py",
    "line_number": 103,
    "line": "        # TODO: if bdist_wheel if merged into setuptools, just add \"keep_egg_info\" there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1123,
    "line": "        extras = ''  # TODO: self.report_extras(req, dist)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1722,
    "line": "    # TODO: This code doesn't make sense. What is it trying to do?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 69,
    "line": "    COMPAT = \"compat\"  # TODO: Remove `compat` after Dec/2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 279,
    "line": "        # TODO: Once plugins/customisations had the chance to catch up, replace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\command\\install_lib.py",
    "line_number": 54,
    "line": "        # TODO: is it necessary to short-circuit here? i.e. what's the cost"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 106,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 128,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 131,
    "line": "        # TODO: After the previous statement is removed the try/except can be replaced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 369,
    "line": "                # TODO: Don't set field when support for pyproject.toml stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
    "line_number": 96,
    "line": "    # TODO: Set fields back to `None` once the feature stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 33,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 41,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must be object\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 46,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must contain ['requires'] properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 71,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path must be array\", value=data__buildsystem__backendpath, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path\", definition={'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 77,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \" must be string\", value=data__buildsystem__backendpath_item, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \"\", definition={'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 79,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must not contain \"+str(data__buildsystem_keys)+\" properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 88,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".tool must be object\", value=data__tool, name=\"\" + (name_prefix or \"data\") + \".tool\", definition={'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 101,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 106,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 158,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".script-files must be array\", value=data__scriptfiles, name=\"\" + (name_prefix or \"data\") + \".script-files\", definition={'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 360,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".py-modules must be array\", value=data__pymodules, name=\"\" + (name_prefix or \"data\") + \".py-modules\", definition={'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 411,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".license-files must be array\", value=data__licensefiles, name=\"\" + (name_prefix or \"data\") + \".license-files\", definition={'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 517,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 635,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 654,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 659,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must contain ['name'] properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 695,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be object\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 733,
    "line": "                            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must contain ['content-type'] properties\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 739,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme.content-type must be string\", value=data__readme__contenttype, name=\"\" + (name_prefix or \"data\") + \".readme.content-type\", definition={'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 743,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be valid exactly by one definition\" + (\" (\" + str(data__readme_one_of_count8) + \" matches found)\"), value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, rule='oneOf')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 940,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\starlette\\middleware\\exceptions.py",
    "line_number": 25,
    "line": "        self.debug = debug  # TODO: We ought to handle 404 cases if debug is set."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\tqdm\\cli.py",
    "line_number": 117,
    "line": "# TODO: add custom support for some of the following?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\tqdm\\cli.py",
    "line_number": 125,
    "line": "        TODO: find out why this is needed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\tqdm\\gui.py",
    "line_number": 26,
    "line": "    # TODO: @classmethod: write() on GUI?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\tqdm\\rich.py",
    "line_number": 74,
    "line": "    # TODO: @classmethod: write()?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\tqdm\\std.py",
    "line_number": 1442,
    "line": "        # TODO: private method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\tqdm\\tk.py",
    "line_number": 31,
    "line": "    # TODO: @classmethod: write()?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\tqdm\\utils.py",
    "line_number": 9,
    "line": "# TODO consider using wcswidth third-party package for 0-width characters"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\tqdm\\__init__.py",
    "line_number": 3,
    "line": "from .cli import main  # TODO: remove in v5.0.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\tqdm\\__init__.py",
    "line_number": 4,
    "line": "from .gui import tqdm as tqdm_gui  # TODO: remove in v5.0.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\tqdm\\__init__.py",
    "line_number": 5,
    "line": "from .gui import trange as tgrange  # TODO: remove in v5.0.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\core.py",
    "line_number": 269,
    "line": "        # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\core.py",
    "line_number": 410,
    "line": "        # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\models.py",
    "line_number": 177,
    "line": "        # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\models.py",
    "line_number": 287,
    "line": "        # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\models.py",
    "line_number": 305,
    "line": "        # TODO: remove is_flag and flag_value in a future release"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\models.py",
    "line_number": 416,
    "line": "        # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 23,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 40,
    "line": "    # TODO: remove is_flag and flag_value in a future release"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 89,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 106,
    "line": "    # TODO: remove is_flag and flag_value in a future release"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 153,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 171,
    "line": "    # TODO: remove is_flag and flag_value in a future release"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 275,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 332,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\params.py",
    "line_number": 387,
    "line": "    # TODO: Remove shell_complete in a future version (after 0.16.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\_completion_classes.py",
    "line_number": 58,
    "line": "        # TODO: Explore replicating the new behavior from Click, with item types and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\_completion_classes.py",
    "line_number": 102,
    "line": "        # TODO: Explore replicating the new behavior from Click, pay attention to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\_completion_classes.py",
    "line_number": 144,
    "line": "        # TODO: Explore replicating the new behavior from Click, pay attention to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\_completion_shared.py",
    "line_number": 78,
    "line": "# TODO: Probably refactor this, copied from Click 7.x"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typer\\_completion_shared.py",
    "line_number": 135,
    "line": "    # TODO: consider setting the style only for the current program"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typing_inspection\\introspection.py",
    "line_number": 182,
    "line": "# TODO at some point, we could switch to an enum flag, so that multiple sources"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typing_inspection\\introspection.py",
    "line_number": 185,
    "line": "    # TODO if/when https://peps.python.org/pep-0767/ is accepted, add 'read_only'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\typing_inspection\\introspection.py",
    "line_number": 280,
    "line": "        # TODO use a match statement when Python 3.9 support is dropped."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\connection.py",
    "line_number": 281,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\connection.py",
    "line_number": 387,
    "line": "        # object later. TODO: Remove this in favor of a real"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\connection.py",
    "line_number": 512,
    "line": "        # TODO should we implement it everywhere?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\connectionpool.py",
    "line_number": 578,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\connectionpool.py",
    "line_number": 1095,
    "line": "        # TODO revise this, see https://github.com/urllib3/urllib3/issues/2791"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\exceptions.py",
    "line_number": 306,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\response.py",
    "line_number": 980,
    "line": "                # TODO make sure to initially read enough data to get past the headers"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\_base_connection.py",
    "line_number": 20,
    "line": "    # TODO: Remove this in favor of a better"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\http2\\connection.py",
    "line_number": 144,
    "line": "        # TODO SKIPPABLE_HEADERS from urllib3 are ignored."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\http2\\connection.py",
    "line_number": 234,
    "line": "                # TODO: Arbitrary read value."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\http2\\connection.py",
    "line_number": 282,
    "line": "            # TODO this is often present from upstream."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\http2\\connection.py",
    "line_number": 325,
    "line": "    # TODO: This is a woefully incomplete response object, but works for non-streaming."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\http2\\connection.py",
    "line_number": 332,
    "line": "        decode_content: bool = False,  # TODO: support decoding"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\http2\\__init__.py",
    "line_number": 38,
    "line": "    # TODO: Offer 'http/1.1' as well, but for testing purposes this is handy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\util\\request.py",
    "line_number": 221,
    "line": "    # File-like object, TODO: use seek() and tell() for length?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\urllib3\\util\\url.py",
    "line_number": 454,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\uvicorn\\protocols\\websockets\\wsproto_impl.py",
    "line_number": 120,
    "line": "            # TODO: Remove `type: ignore` when wsproto fixes the type annotation."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\uvicorn\\protocols\\websockets\\wsproto_impl.py",
    "line_number": 204,
    "line": "        # todo: we may want to guard the size of self.bytes and self.text"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\wheel\\vendored\\packaging\\tags.py",
    "line_number": 317,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\yaml\\scanner.py",
    "line_number": 187,
    "line": "        # TODO: support for BOM within a stream."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\CopyPilot\\venv\\Lib\\site-packages\\yaml\\scanner.py",
    "line_number": 761,
    "line": "        # TODO: We need to make tab handling rules more sane. A good rule is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\cryptography\\hazmat\\primitives\\padding.py",
    "line_number": 142,
    "line": "        # TODO: more copies than necessary, we should use zero-buffer (#193)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\cryptography\\hazmat\\primitives\\padding.py",
    "line_number": 167,
    "line": "        # TODO: more copies than necessary, we should use zero-buffer (#193)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\cryptography\\hazmat\\primitives\\asymmetric\\rsa.py",
    "line_number": 209,
    "line": "    # TODO: Replace with lcm(p - 1, q - 1) once the minimum"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\cryptography\\x509\\name.py",
    "line_number": 345,
    "line": "        # TODO: this is relatively expensive, if this looks like a bottleneck"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
    "line_number": 262,
    "line": "            # TODO: use DirectUrl.equivalent when https://github.com/pypa/pip/pull/10564"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
    "line_number": 134,
    "line": "        # TODO: Try to get these passing down from the command?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\inspect.py",
    "line_number": 60,
    "line": "            # TODO tags? scheme?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\index\\collector.py",
    "line_number": 356,
    "line": "        # TODO: In the future, it would be nice if pip supported PEP 691"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 37,
    "line": "from pip._internal.utils.compat import stdlib_pkgs  # TODO: Move definition here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 175,
    "line": "        # TODO: this property is relatively costly to compute, memoize it ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 185,
    "line": "                # TODO: get project location from second line of egg_link file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\importlib\\_envs.py",
    "line_number": 177,
    "line": "                # _emit_egg_deprecation(dist.location)  # TODO: Enable this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\models\\installation_report.py",
    "line_number": 47,
    "line": "            # TODO: currently, the resolver uses the default environment to evaluate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
    "line_number": 174,
    "line": "        # TODO: Get range requests to be correctly cached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 322,
    "line": "        # TODO: this check is now probably dead code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 541,
    "line": "        # TODO: separate this part out from RequirementPreparer when the v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
    "line_number": 264,
    "line": "        # TODO: The is_installable_dir test here might not be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 489,
    "line": "    # TODO: handle space after '\\'."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
    "line_number": 75,
    "line": "        TODO remove this property together with the legacy resolver, since the new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 348,
    "line": "        # TODO: Supply reason based on force_reinstall and upgrade_strategy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 174,
    "line": "        # TODO: Check already installed candidate, and use it if the link and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 547,
    "line": "        # TODO: Are there more cases this needs to return True? Editable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
    "line_number": 33,
    "line": "    # TODO: Remove this block after dropping Python 3.8 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\subprocess.py",
    "line_number": 26,
    "line": "    # TODO: Remove `if TYPE_CHECKING` when dropping support for Python 3.7."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
    "line_number": 45,
    "line": "    # TODO: Remove `if TYPE_CHECKING` when dropping support for Python 3.7."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
    "line_number": 192,
    "line": "        # TODO: There is an assumption that the result will be a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py",
    "line_number": 59,
    "line": "        # TODO: Add some logging here..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\codingstatemachinedict.py",
    "line_number": 6,
    "line": "    # TODO: Remove the else block and TYPE_CHECKING check when dropping support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\resultdict.py",
    "line_number": 6,
    "line": "    # TODO: Remove the else block and TYPE_CHECKING check when dropping support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcharsetprober.py",
    "line_number": 95,
    "line": "        # TODO: Make filter_international_words keep things in self.alphabet"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcsgroupprober.py",
    "line_number": 57,
    "line": "        # TODO: See if using ISO-8859-8 Hebrew model works better here, since"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcsgroupprober.py",
    "line_number": 63,
    "line": "        # TODO: ORDER MATTERS HERE. I changed the order vs what was in master"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcsgroupprober.py",
    "line_number": 78,
    "line": "            # TODO: Restore Hungarian encodings (iso-8859-2 and windows-1250)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\universaldetector.py",
    "line_number": 194,
    "line": "                    # TODO: This encoding is not supported by Python. Should remove?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\universaldetector.py",
    "line_number": 202,
    "line": "                    # TODO: This encoding is not supported by Python. Should remove?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\metadata\\languages.py",
    "line_number": 11,
    "line": "# TODO: Add Ukrainian (KOI8-U)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1299,
    "line": "    todo = graph.reverse_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1301,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1302,
    "line": "        d = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1306,
    "line": "                todo.append(succ)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1326,
    "line": "    todo = graph.adjacency_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1327,
    "line": "    seen = set(t[0] for t in todo) # already added to todo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1329,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1330,
    "line": "        d = todo.pop()[0]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1337,
    "line": "                todo.append(pred)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 766,
    "line": "        XXX TODO Note: this cache is never actually cleared. It's assumed that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 929,
    "line": "                # TODO SHA256 digest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1240,
    "line": "        todo = set([dist])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1242,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1243,
    "line": "            dist = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1277,
    "line": "                            todo.add(provider)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 263,
    "line": "    # TODO document the mapping API and UNKNOWN default key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 593,
    "line": "    # TODO could add iter* variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 1026,
    "line": "        # TODO: any other fields wanted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 190,
    "line": "            todo = [resource]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 191,
    "line": "            while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 192,
    "line": "                resource = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 203,
    "line": "                            todo.append(child)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 402,
    "line": "        # TODO check k, v for valid values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1114,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1116,
    "line": "        todo.append(final)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1117,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1118,
    "line": "            step = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1132,
    "line": "                todo.extend(preds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 259,
    "line": "        TODO: fill this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 507,
    "line": "    #TODO: unintended side-effect on, e.g., \"2003.05.09\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
    "line_number": 838,
    "line": "            # TODO version verification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 554,
    "line": "        # TODO should we eliminate the recursion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 558,
    "line": "                    # TODO check whether we need to call `list_hook`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 566,
    "line": "            # TODO is the interaction between `list_hook` and `use_list` ok?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 571,
    "line": "                    # TODO check whether we need to call hooks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3050,
    "line": "            # TODO: remove this except clause when python/cpython#103632 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
    "line_number": 783,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
    "line_number": 511,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\latex.py",
    "line_number": 337,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\_mapping.py",
    "line_number": 498,
    "line": "    'TodotxtLexer': ('pip._vendor.pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py",
    "line_number": 551,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\cells.py",
    "line_number": 122,
    "line": "# TODO: This is inefficient"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\cells.py",
    "line_number": 123,
    "line": "# TODO: This might not work with CWJ type characters"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\text.py",
    "line_number": 542,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
    "line_number": 199,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py",
    "line_number": 509,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py",
    "line_number": 289,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 660,
    "line": "        # TODO: should I do clean shutdown here? Do I have to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 820,
    "line": "        # TODO: Well, crap."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 830,
    "line": "        # TODO: Update in line with above."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 31,
    "line": "# TODO: In v2 we can remove this sentinel and metaclass with deprecated options."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 259,
    "line": "        # TODO: Deprecated, remove in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 321,
    "line": "        # TODO: If already given in **kw we use what's given to us"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 452,
    "line": "        # TODO: For now favor if the Retry implementation sets its own method_whitelist"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 606,
    "line": "            # TODO: Remove this deprecated alias in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
    "line_number": 402,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 158,
    "line": "        # TODO: Replace with `raise ValueError(\"newlines not allowed\")`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\__init__.py",
    "line_number": 179,
    "line": "           TODO: This method seems to be similar to the one in ``distutils.cmd``"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\command\\dist_info.py",
    "line_number": 103,
    "line": "        # TODO: if bdist_wheel if merged into setuptools, just add \"keep_egg_info\" there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1123,
    "line": "        extras = ''  # TODO: self.report_extras(req, dist)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1722,
    "line": "    # TODO: This code doesn't make sense. What is it trying to do?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 69,
    "line": "    COMPAT = \"compat\"  # TODO: Remove `compat` after Dec/2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 279,
    "line": "        # TODO: Once plugins/customisations had the chance to catch up, replace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\command\\install_lib.py",
    "line_number": 54,
    "line": "        # TODO: is it necessary to short-circuit here? i.e. what's the cost"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 106,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 128,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 131,
    "line": "        # TODO: After the previous statement is removed the try/except can be replaced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 369,
    "line": "                # TODO: Don't set field when support for pyproject.toml stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
    "line_number": 96,
    "line": "    # TODO: Set fields back to `None` once the feature stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 33,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 41,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must be object\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 46,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must contain ['requires'] properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 71,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path must be array\", value=data__buildsystem__backendpath, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path\", definition={'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 77,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \" must be string\", value=data__buildsystem__backendpath_item, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \"\", definition={'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 79,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must not contain \"+str(data__buildsystem_keys)+\" properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 88,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".tool must be object\", value=data__tool, name=\"\" + (name_prefix or \"data\") + \".tool\", definition={'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 101,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 106,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 158,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".script-files must be array\", value=data__scriptfiles, name=\"\" + (name_prefix or \"data\") + \".script-files\", definition={'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 360,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".py-modules must be array\", value=data__pymodules, name=\"\" + (name_prefix or \"data\") + \".py-modules\", definition={'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 411,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".license-files must be array\", value=data__licensefiles, name=\"\" + (name_prefix or \"data\") + \".license-files\", definition={'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 517,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 635,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 654,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 659,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must contain ['name'] properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 695,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be object\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 733,
    "line": "                            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must contain ['content-type'] properties\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 739,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme.content-type must be string\", value=data__readme__contenttype, name=\"\" + (name_prefix or \"data\") + \".readme.content-type\", definition={'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 743,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be valid exactly by one definition\" + (\" (\" + str(data__readme_one_of_count8) + \" matches found)\"), value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, rule='oneOf')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 940,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\dec-app\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\click\\_termui_impl.py",
    "line_number": 452,
    "line": "    # TODO: This never terminates if the passed generator never terminates."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\applications.py",
    "line_number": 877,
    "line": "        # TODO: remove when discarding the openapi_prefix parameter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 36,
    "line": "# TODO: pv2 should this return strings instead?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 217,
    "line": "        # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\encoders.py",
    "line_number": 239,
    "line": "            # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 32,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 146,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 232,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 316,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 402,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 486,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 602,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\params.py",
    "line_number": 686,
    "line": "        # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 55,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 380,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 684,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1000,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1327,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1642,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\param_functions.py",
    "line_number": 1956,
    "line": "    # TODO: update when deprecating Pydantic v1, import these types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\routing.py",
    "line_number": 367,
    "line": "            # TODO: remove this scope later, after a few releases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\routing.py",
    "line_number": 523,
    "line": "            # TODO: remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\_compat.py",
    "line_number": 201,
    "line": "            # TODO remove when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\openapi\\models.py",
    "line_number": 147,
    "line": "    # TODO: uncomment and remove below when deprecating Pydantic v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\openapi\\utils.py",
    "line_number": 323,
    "line": "                # TODO: probably make status_code a default class attribute for all"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\fastapi\\security\\oauth2.py",
    "line_number": 12,
    "line": "# TODO: import from typing when deprecating Python 3.9"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
    "line_number": 262,
    "line": "            # TODO: use DirectUrl.equivalent when https://github.com/pypa/pip/pull/10564"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
    "line_number": 134,
    "line": "        # TODO: Try to get these passing down from the command?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\inspect.py",
    "line_number": 60,
    "line": "            # TODO tags? scheme?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\index\\collector.py",
    "line_number": 356,
    "line": "        # TODO: In the future, it would be nice if pip supported PEP 691"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 37,
    "line": "from pip._internal.utils.compat import stdlib_pkgs  # TODO: Move definition here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 175,
    "line": "        # TODO: this property is relatively costly to compute, memoize it ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 185,
    "line": "                # TODO: get project location from second line of egg_link file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\importlib\\_envs.py",
    "line_number": 177,
    "line": "                # _emit_egg_deprecation(dist.location)  # TODO: Enable this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\models\\installation_report.py",
    "line_number": 47,
    "line": "            # TODO: currently, the resolver uses the default environment to evaluate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
    "line_number": 174,
    "line": "        # TODO: Get range requests to be correctly cached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 322,
    "line": "        # TODO: this check is now probably dead code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 541,
    "line": "        # TODO: separate this part out from RequirementPreparer when the v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
    "line_number": 264,
    "line": "        # TODO: The is_installable_dir test here might not be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 489,
    "line": "    # TODO: handle space after '\\'."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
    "line_number": 75,
    "line": "        TODO remove this property together with the legacy resolver, since the new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 348,
    "line": "        # TODO: Supply reason based on force_reinstall and upgrade_strategy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 174,
    "line": "        # TODO: Check already installed candidate, and use it if the link and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 547,
    "line": "        # TODO: Are there more cases this needs to return True? Editable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
    "line_number": 33,
    "line": "    # TODO: Remove this block after dropping Python 3.8 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\subprocess.py",
    "line_number": 26,
    "line": "    # TODO: Remove `if TYPE_CHECKING` when dropping support for Python 3.7."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
    "line_number": 45,
    "line": "    # TODO: Remove `if TYPE_CHECKING` when dropping support for Python 3.7."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
    "line_number": 192,
    "line": "        # TODO: There is an assumption that the result will be a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py",
    "line_number": 59,
    "line": "        # TODO: Add some logging here..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\codingstatemachinedict.py",
    "line_number": 6,
    "line": "    # TODO: Remove the else block and TYPE_CHECKING check when dropping support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\resultdict.py",
    "line_number": 6,
    "line": "    # TODO: Remove the else block and TYPE_CHECKING check when dropping support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcharsetprober.py",
    "line_number": 95,
    "line": "        # TODO: Make filter_international_words keep things in self.alphabet"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcsgroupprober.py",
    "line_number": 57,
    "line": "        # TODO: See if using ISO-8859-8 Hebrew model works better here, since"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcsgroupprober.py",
    "line_number": 63,
    "line": "        # TODO: ORDER MATTERS HERE. I changed the order vs what was in master"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcsgroupprober.py",
    "line_number": 78,
    "line": "            # TODO: Restore Hungarian encodings (iso-8859-2 and windows-1250)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\universaldetector.py",
    "line_number": 194,
    "line": "                    # TODO: This encoding is not supported by Python. Should remove?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\universaldetector.py",
    "line_number": 202,
    "line": "                    # TODO: This encoding is not supported by Python. Should remove?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\metadata\\languages.py",
    "line_number": 11,
    "line": "# TODO: Add Ukrainian (KOI8-U)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1299,
    "line": "    todo = graph.reverse_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1301,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1302,
    "line": "        d = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1306,
    "line": "                todo.append(succ)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1326,
    "line": "    todo = graph.adjacency_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1327,
    "line": "    seen = set(t[0] for t in todo) # already added to todo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1329,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1330,
    "line": "        d = todo.pop()[0]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1337,
    "line": "                todo.append(pred)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 766,
    "line": "        XXX TODO Note: this cache is never actually cleared. It's assumed that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 929,
    "line": "                # TODO SHA256 digest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1240,
    "line": "        todo = set([dist])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1242,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1243,
    "line": "            dist = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1277,
    "line": "                            todo.add(provider)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 263,
    "line": "    # TODO document the mapping API and UNKNOWN default key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 593,
    "line": "    # TODO could add iter* variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 1026,
    "line": "        # TODO: any other fields wanted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 190,
    "line": "            todo = [resource]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 191,
    "line": "            while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 192,
    "line": "                resource = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 203,
    "line": "                            todo.append(child)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 402,
    "line": "        # TODO check k, v for valid values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1114,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1116,
    "line": "        todo.append(final)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1117,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1118,
    "line": "            step = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1132,
    "line": "                todo.extend(preds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 259,
    "line": "        TODO: fill this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 507,
    "line": "    #TODO: unintended side-effect on, e.g., \"2003.05.09\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
    "line_number": 838,
    "line": "            # TODO version verification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 554,
    "line": "        # TODO should we eliminate the recursion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 558,
    "line": "                    # TODO check whether we need to call `list_hook`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 566,
    "line": "            # TODO is the interaction between `list_hook` and `use_list` ok?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 571,
    "line": "                    # TODO check whether we need to call hooks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3050,
    "line": "            # TODO: remove this except clause when python/cpython#103632 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
    "line_number": 783,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
    "line_number": 511,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\latex.py",
    "line_number": 337,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\_mapping.py",
    "line_number": 498,
    "line": "    'TodotxtLexer': ('pip._vendor.pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py",
    "line_number": 551,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\cells.py",
    "line_number": 122,
    "line": "# TODO: This is inefficient"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\cells.py",
    "line_number": 123,
    "line": "# TODO: This might not work with CWJ type characters"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\text.py",
    "line_number": 542,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
    "line_number": 199,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py",
    "line_number": 509,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py",
    "line_number": 289,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 660,
    "line": "        # TODO: should I do clean shutdown here? Do I have to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 820,
    "line": "        # TODO: Well, crap."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 830,
    "line": "        # TODO: Update in line with above."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 31,
    "line": "# TODO: In v2 we can remove this sentinel and metaclass with deprecated options."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 259,
    "line": "        # TODO: Deprecated, remove in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 321,
    "line": "        # TODO: If already given in **kw we use what's given to us"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 452,
    "line": "        # TODO: For now favor if the Retry implementation sets its own method_whitelist"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 606,
    "line": "            # TODO: Remove this deprecated alias in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
    "line_number": 402,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\alias_generators.py",
    "line_number": 7,
    "line": "# TODO: in V3, change the argument names to be more descriptive"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\functional_validators.py",
    "line_number": 193,
    "line": "            # TODO if `schema['serialization']` is one of `'include-exclude-dict/sequence',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 664,
    "line": "            # TODO: should we add regex flags to the pattern?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1058,
    "line": "        # TODO: improvements along with https://github.com/pydantic/pydantic/issues/8208"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1166,
    "line": "        # This reflects the v1 behavior; TODO: we should make it possible to exclude OpenAPI stuff from the JSON schema"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1241,
    "line": "        # TODO: Need to read the default value off of model config or whatever"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\json_schema.py",
    "line_number": 1242,
    "line": "        use_strict = schema.get('strict', False)  # TODO: replace this default False"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 120,
    "line": "    # TODO v3 fallback to `dict` when the deprecated `dict` method gets removed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 772,
    "line": "                    # TODO: Make sure validation fails if there are still undefined types, perhaps using MockValidator"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\main.py",
    "line_number": 883,
    "line": "                # TODO - matching error"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\mypy.py",
    "line_number": 565,
    "line": "                    # TODO: Only do this if the first argument of the decorated function is `cls`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\mypy.py",
    "line_number": 674,
    "line": "                # TODO: We shouldn't be performing type operations during the main"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\type_adapter.py",
    "line_number": 335,
    "line": "        # TODO reevaluate this logic when we have a better understanding of how defer_build should work with TypeAdapter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\deprecated\\json.py",
    "line_number": 112,
    "line": "# TODO: Add a suggested migration path once there is a way to use custom encoders"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\experimental\\pipeline.py",
    "line_number": 124,
    "line": "# TODO: ultimately, make this public, see https://github.com/pydantic/pydantic/pull/9459#discussion_r1628197626"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\experimental\\pipeline.py",
    "line_number": 592,
    "line": "            # TODO: is there a better way? should we just not do this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\v1\\networks.py",
    "line_number": 535,
    "line": "    # TODO: Needed to generic \"Parts\" for \"Replica Set\", \"Sharded Cluster\", and other mongodb deployment modes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\v1\\utils.py",
    "line_number": 270,
    "line": "            # TODO: replace annotation with actual expected types once #1055 solved"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_metadata.py",
    "line_number": 40,
    "line": "    TODO: We'd like to refactor the storage of json related metadata to be more explicit, and less functionally oriented."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_utils.py",
    "line_number": 149,
    "line": "            # TODO: Replace this with a (new) CoreSchema that, if present at any level, makes validation fail"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_core_utils.py",
    "line_number": 180,
    "line": "# TODO: Should we move _WalkCoreSchema into pydantic_core proper?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py",
    "line_number": 294,
    "line": "            # TODO: We should probably do something with this so that validate_assignment behaves properly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py",
    "line_number": 306,
    "line": "                # TODO: same note as above re validate_assignment"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 317,
    "line": "        # TODO: in theory we should check that the schema accepts a serialization key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 466,
    "line": "            # TODO this is an ugly hack, how do we trigger an Any schema for serialization?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1611,
    "line": "        # TODO: do we really need to resolve type vars here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1630,
    "line": "                # TODO: something like https://github.com/pydantic/pydantic/issues/5952"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 1874,
    "line": "        TODO support functional validators once we support them in Config"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 2052,
    "line": "        # TODO: I'd rather we didn't handle the generic nature in the annotations prep, but the same way we do other"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
    "line_number": 2320,
    "line": "# TODO V3: this function is only used for deprecated decorators. It should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_generics.py",
    "line_number": 244,
    "line": "    # TODO: This could be unified with `get_standard_typevars_map` if we stored the generic metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_known_annotated_metadata.py",
    "line_number": 82,
    "line": "    # TODO: this is a bit redundant, we could probably avoid some of these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_std_types_schema.py",
    "line_number": 6,
    "line": "# TODO: eventually, we'd like to move all of the types handled here to have pydantic-core validators"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_validate_call.py",
    "line_number": 46,
    "line": "        # TODO: this is a bit of a hack, we should probably have a better way to handle this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_validators.py",
    "line_number": 36,
    "line": "    # TODO: refactor sequence validation to validate with either a list or a tuple"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic\\_internal\\_validators.py",
    "line_number": 125,
    "line": "        # todo strict mode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\pydantic_core\\core_schema.py",
    "line_number": 1112,
    "line": "            TODO: use of a tzinfo where offset changes based on the datetime is not yet supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 158,
    "line": "        # TODO: Replace with `raise ValueError(\"newlines not allowed\")`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\__init__.py",
    "line_number": 179,
    "line": "           TODO: This method seems to be similar to the one in ``distutils.cmd``"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\command\\dist_info.py",
    "line_number": 103,
    "line": "        # TODO: if bdist_wheel if merged into setuptools, just add \"keep_egg_info\" there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1123,
    "line": "        extras = ''  # TODO: self.report_extras(req, dist)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1722,
    "line": "    # TODO: This code doesn't make sense. What is it trying to do?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 69,
    "line": "    COMPAT = \"compat\"  # TODO: Remove `compat` after Dec/2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 279,
    "line": "        # TODO: Once plugins/customisations had the chance to catch up, replace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\command\\install_lib.py",
    "line_number": 54,
    "line": "        # TODO: is it necessary to short-circuit here? i.e. what's the cost"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 106,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 128,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 131,
    "line": "        # TODO: After the previous statement is removed the try/except can be replaced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 369,
    "line": "                # TODO: Don't set field when support for pyproject.toml stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
    "line_number": 96,
    "line": "    # TODO: Set fields back to `None` once the feature stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 33,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 41,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must be object\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 46,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must contain ['requires'] properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 71,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path must be array\", value=data__buildsystem__backendpath, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path\", definition={'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 77,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \" must be string\", value=data__buildsystem__backendpath_item, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \"\", definition={'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 79,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must not contain \"+str(data__buildsystem_keys)+\" properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 88,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".tool must be object\", value=data__tool, name=\"\" + (name_prefix or \"data\") + \".tool\", definition={'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 101,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 106,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 158,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".script-files must be array\", value=data__scriptfiles, name=\"\" + (name_prefix or \"data\") + \".script-files\", definition={'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 360,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".py-modules must be array\", value=data__pymodules, name=\"\" + (name_prefix or \"data\") + \".py-modules\", definition={'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 411,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".license-files must be array\", value=data__licensefiles, name=\"\" + (name_prefix or \"data\") + \".license-files\", definition={'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 517,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 635,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 654,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 659,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must contain ['name'] properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 695,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be object\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 733,
    "line": "                            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must contain ['content-type'] properties\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 739,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme.content-type must be string\", value=data__readme__contenttype, name=\"\" + (name_prefix or \"data\") + \".readme.content-type\", definition={'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 743,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be valid exactly by one definition\" + (\" (\" + str(data__readme_one_of_count8) + \" matches found)\"), value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, rule='oneOf')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 940,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\starlette\\middleware\\exceptions.py",
    "line_number": 25,
    "line": "        self.debug = debug  # TODO: We ought to handle 404 cases if debug is set."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\uvicorn\\protocols\\websockets\\wsproto_impl.py",
    "line_number": 120,
    "line": "            # TODO: Remove `type: ignore` when wsproto fixes the type annotation."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\fastapi-lms\\venv\\Lib\\site-packages\\uvicorn\\protocols\\websockets\\wsproto_impl.py",
    "line_number": 204,
    "line": "        # todo: we may want to guard the size of self.bytes and self.text"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\cv2\\__init__.py",
    "line_number": 19,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\cycler\\__init__.py",
    "line_number": 252,
    "line": "        # TODO : maybe add numpy style fancy slicing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\cycler\\__init__.py",
    "line_number": 434,
    "line": "        # TODO : sort out if this is a bottle neck, if there is a better way"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\cycler\\__init__.py",
    "line_number": 456,
    "line": "        # TODO: sort out if it is worth the effort to make sure this is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
    "line_number": 1182,
    "line": "                    # TODO: Check -numweeks for next year."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 55,
    "line": "# TODO: pandas.core.tools.datetimes imports this explicitly.  Might be worth"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 265,
    "line": "                (\"Tue\", \"Tuesday\"),     # TODO: \"Tues\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 267,
    "line": "                (\"Thu\", \"Thursday\"),    # TODO: \"Thurs\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 272,
    "line": "              (\"Feb\", \"February\"),      # TODO: \"Febr\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 291,
    "line": "    # TODO: ERA = [\"AD\", \"BC\", \"CE\", \"BCE\", \"Stardate\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 777,
    "line": "                                # TODO: not hit in tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 815,
    "line": "                    # TODO: check that l[i + 1] is integer?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 823,
    "line": "                        min_offset = int(l[i + 3])  # TODO: Check that l[i+3] is minute-like?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 910,
    "line": "                # TODO: Check if res attributes already set."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 934,
    "line": "                # TODO: checking that hour/minute/second are not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 941,
    "line": "            value = self._to_decimal(tokens[idx + 2])  # TODO: try/except for this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 1032,
    "line": "            # TODO: Are we sure this is the right condition here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 1100,
    "line": "        # TODO: Every usage of this function sets res.second to the return"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
    "line_number": 1112,
    "line": "        # TODO: Is this going to admit a lot of false-positives for when we"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py",
    "line_number": 25,
    "line": "    except IOError as e:  # TODO  switch to FileNotFoundError?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py",
    "line_number": 76,
    "line": "# TODO: Remove after deprecation period."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\__main__.py",
    "line_number": 8,
    "line": "    # TODO Handle library-wide options. Eg.:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\__main__.py",
    "line_number": 12,
    "line": "    # TODO Allow a way to run arbitrary modules? Useful for setting"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
    "line_number": 27,
    "line": "    The CFF2 font cannot be variable. (TODO Accept those and convert to the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
    "line_number": 211,
    "line": "    # TODO(behdad): What does the following comment even mean? Both CFF and CFF2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\cffLib\\specializer.py",
    "line_number": 648,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\cffLib\\specializer.py",
    "line_number": 652,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\cffLib\\transforms.py",
    "line_number": 317,
    "line": "            # TODO CFF2 no need for endchar."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
    "line_number": 38,
    "line": "# TODO move type aliases to colorLib.types?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
    "line_number": 65,
    "line": "    # TODO apparently no builder_test confirms this works (?)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
    "line_number": 444,
    "line": "    # TODO feels like something itertools might have already"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
    "line_number": 52,
    "line": "    # TODO on python3+, there's os.path.samefile"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
    "line_number": 93,
    "line": "            # TODO(Python 3.10): use TypeGuard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
    "line_number": 204,
    "line": "            # TODO(Python 3.10): use TypeGuard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
    "line_number": 430,
    "line": "                # TODO: Ensure that all(key in conditionset for key in region.keys())?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
    "line_number": 30,
    "line": "# TODO(Python 3.8): use Literal"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
    "line_number": 123,
    "line": "            # TODO(Python 3.10): use TypeGuard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
    "line_number": 1892,
    "line": "                # TODO(Python 3.10): use TypeGuard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
    "line_number": 3271,
    "line": "                # TODO(Python 3.10): use TypeGuard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py",
    "line_number": 385,
    "line": "        # TODO(sascha): Handle use_extension."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py",
    "line_number": 436,
    "line": "        # TODO(sascha): Handle use_extension."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py",
    "line_number": 932,
    "line": "        # TODO: consider lazy-loading the including parser/lexer?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\cmap.py",
    "line_number": 48,
    "line": "    # TODO Warn if advances not the same but within tolerance."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\cmap.py",
    "line_number": 69,
    "line": "    # TODO Handle format=14."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\cmap.py",
    "line_number": 125,
    "line": "                    # TODO: Try harder to do something about these."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
    "line_number": 17,
    "line": "    # TODO Do smarter merge."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
    "line_number": 52,
    "line": "    # TODO Support merging ReqFeatureIndex"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
    "line_number": 112,
    "line": "    \"ScriptCount\": lambda lst: None,  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
    "line_number": 116,
    "line": "    \"BaseScriptCount\": lambda lst: None,  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
    "line_number": 117,
    "line": "    # TODO: Merge duplicate entries"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
    "line_number": 244,
    "line": "                        # TODO: make them do the same"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
    "line_number": 457,
    "line": "    # TODO FeatureParams nameIDs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
    "line_number": 526,
    "line": "    # TODO FeatureParams nameIDs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py",
    "line_number": 25,
    "line": "    # TODO When we correctly merge hinting data, update these values:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py",
    "line_number": 315,
    "line": "    # TODO Handle format=14."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\unicode.py",
    "line_number": 7,
    "line": "    # TODO Move me to unicodedata module and autogenerate."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
    "line_number": 169,
    "line": "            # TODO: Add an option to disable this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\misc\\classifyTools.py",
    "line_number": 50,
    "line": "            # Remove processed items from todo list"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
    "line_number": 1106,
    "line": "            # TODO accept set names"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
    "line_number": 1208,
    "line": "        # TODO BytesIO / StringIO as needed?  also, figure out whether we work on bytes or unicode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
    "line_number": 1939,
    "line": "    # TODO: Consider emitting multiple subtables to save space."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
    "line_number": 2030,
    "line": "    # TODO: Consider splitting into multiple subtables to save space,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
    "line_number": 2684,
    "line": "        # TODO: Instead of counting the number of glyphs in each class,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
    "line_number": 190,
    "line": "    # TODO(Python 3.7): Turn this into a dataclass"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
    "line_number": 194,
    "line": "    # TODO(Python 3.8): use functools.cached_property instead of the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\pens\\cu2quPen.py",
    "line_number": 242,
    "line": "    # TODO Simplify like 3e8ebcdce592fe8a59ca4c3a294cc9724351e1ce"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
    "line_number": 32,
    "line": "# TODO(antrotype): Replace with functools.cache once we are 3.9+"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
    "line_number": 64,
    "line": "    # TODO(anthrotype): Check we aren't missing other supported kinds of reference"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 1203,
    "line": "                        # TODO Can we improve this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 1238,
    "line": "                        # TODO Can we improve this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 1267,
    "line": "                # TODO Can we improve this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 1369,
    "line": "        # TODO: We can do a second round of remapping class values based"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 2335,
    "line": "    # TODO Return emptiness..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 2378,
    "line": "    # TODO Return emptiness..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 2540,
    "line": "    # TODO: also prune ununsed varIndices in COLR.VarStore"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 2550,
    "line": "    # TODO(anthrotype): Do The Right Thing (TM)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 2901,
    "line": "    # TODO(behdad) Only keep one subtable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 2923,
    "line": "            # TODO(behdad) We drop all the default-UVS mappings"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 2969,
    "line": "    # TODO(behdad) Convert formats when needed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3006,
    "line": "        # TODO(behdad) Sometimes (eg Apple Color Emoji) there's only a macroman"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3009,
    "line": "    # TODO(behdad) Option to keep only one platform's"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3011,
    "line": "        # TODO(behdad) This is Windows-platform specific!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3035,
    "line": "# TODO(behdad) OS/2 ulCodePageRange?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3036,
    "line": "# TODO(behdad) Drop AAT tables."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3037,
    "line": "# TODO(behdad) Drop unneeded GSUB/GPOS Script/LangSys entries."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3038,
    "line": "# TODO(behdad) Drop empty GSUB/GPOS, and GDEF if no GSUB/GPOS left"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3039,
    "line": "# TODO(behdad) Drop GDEF subitems if unused by lookups"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3040,
    "line": "# TODO(behdad) Avoid recursing too much (in GSUB/GPOS and in CFF)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3041,
    "line": "# TODO(behdad) Text direction considerations."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3042,
    "line": "# TODO(behdad) Text script / language considerations."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3043,
    "line": "# TODO(behdad) Optionally drop 'kern' table if GPOS available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3044,
    "line": "# TODO(behdad) Implement --unicode='*' to choose all cmap'ed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
    "line_number": 3045,
    "line": "# TODO(behdad) Drop old-spec Indic scripts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\shapes.py",
    "line_number": 23,
    "line": "    # TODO assumes a 'matrix' transform."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\shapes.py",
    "line_number": 121,
    "line": "        # TODO there are more rules for adjusting rx, ry"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
    "line_number": 122,
    "line": "    # TODO(anthrotype): remove once this Skia bug is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
    "line_number": 206,
    "line": "# TODO Port to otTraverse"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\scaleUpem.py",
    "line_number": 168,
    "line": "                # TODO Move this code duplicated below to MultiVarStore.__getitem__,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\ttGlyphSet.py",
    "line_number": 51,
    "line": "            # TODO VVAR, VORG"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\ttGlyphSet.py",
    "line_number": 130,
    "line": "            # TODO Optimize by using instancer.setLocation()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\ttGlyphSet.py",
    "line_number": 192,
    "line": "        # TODO: VVAR/VORG"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\E_B_D_T_.py",
    "line_number": 453,
    "line": "        # TODO Currently non-lazy decompilation is untested here..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\E_B_L_C_.py",
    "line_number": 375,
    "line": "        # TODO Currently non-lazy decompiling doesn't work for this class..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otBase.py",
    "line_number": 1008,
    "line": "        # TODO Following hack to be removed by rewriting how FormatSwitching tables"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otBase.py",
    "line_number": 1042,
    "line": "            )  # TODO Handle defaults instead of defaulting to None!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otBase.py",
    "line_number": 1140,
    "line": "                )  # TODO Handle defaults instead of defaulting to None!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otConverters.py",
    "line_number": 632,
    "line": "            # TODO Cache table.hasPropagated."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otConverters.py",
    "line_number": 750,
    "line": "# TODO Clean / merge the SubTable and SubStruct"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otConverters.py",
    "line_number": 859,
    "line": "        # TODO: Also implement format 4."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otConverters.py",
    "line_number": 1267,
    "line": "# TODO: Untangle the implementation of the various lookup-specific formats."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otConverters.py",
    "line_number": 1907,
    "line": "            # TODO: Advance reader"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
    "line_number": 674,
    "line": "        # TODO: Report this specification bug to Apple."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
    "line_number": 1729,
    "line": "                )  # TODO Handle defaults instead of defaulting to None!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\O_S_2f_2.py",
    "line_number": 726,
    "line": "        # TODO: Symbol bit has a special meaning (check the spec), we need"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\sbixGlyph.py",
    "line_number": 94,
    "line": "            # TODO: if ttFont has no maxp, cmap etc., ignore glyph names and compile by index?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\sbixGlyph.py",
    "line_number": 110,
    "line": "            # TODO: ignore empty glyphs?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\sbixStrike.py",
    "line_number": 134,
    "line": "                # TODO: what if there are more glyph data records than (glyf table) glyphs?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\ttProgram.py",
    "line_number": 112,
    "line": "    (0x3d,  'RTDG',          0,    'RoundToDoubleGrid',      0,  0),    #                                    -               -"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\TupleVariation.py",
    "line_number": 259,
    "line": "                # TODO This never switches back to a byte-encoding from a short-encoding."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_g_l_y_f.py",
    "line_number": 999,
    "line": "            # TODO(behdad): Add a configuration option for this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py",
    "line_number": 372,
    "line": "        # TODO: Should minimize BCP 47 language codes."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\errors.py",
    "line_number": 16,
    "line": "        # TODO: Replace with https://docs.python.org/3.11/library/exceptions.html#BaseException.add_note"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\__init__.py",
    "line_number": 158,
    "line": "            # TODO(anthrotype): try to narrow this down a little"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\interpolate_layout.py",
    "line_number": 57,
    "line": "    # TODO GSUB/GDEF"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\merger.py",
    "line_number": 295,
    "line": "            for rec in pvr:  # TODO Speed up"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\merger.py",
    "line_number": 351,
    "line": "            # TODO(behdad) Check and warn if that happens?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\merger.py",
    "line_number": 537,
    "line": "                    # TODO: When merger becomes selfless, revert e6125b353e1f54a0280ded5434b8e40d042de69f"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\merger.py",
    "line_number": 557,
    "line": "                rec1 = matrix[klass]  # TODO handle out-of-range?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\merger.py",
    "line_number": 627,
    "line": "    self.Class1Record = list(matrices[0])  # TODO move merger to be selfless"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\merger.py",
    "line_number": 697,
    "line": "        # TODO Right now we require that all marks have same class in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\merger.py",
    "line_number": 1096,
    "line": "    # TODO Handle differing valueformats"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\mutator.py",
    "line_number": 402,
    "line": "            # TODO: prune unused ltag tags and re-enumerate langIDs accordingly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 555,
    "line": "    # - Put all encodings into a \"todo\" list."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 557,
    "line": "    # - Sort todo list by decreasing gain (for stability)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 560,
    "line": "    #   encodings in the todo list. The priority queue is sorted by"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 566,
    "line": "    #   - Remove the two encodings from the todo list,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 568,
    "line": "    #     all existing todo list items into the priority queue,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 569,
    "line": "    #   - If a todo list item with the same characteristic bitmap as"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 570,
    "line": "    #     the new encoding exists, remove it from the todo list and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 572,
    "line": "    #   - Insert the new encoding into the todo list,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 574,
    "line": "    # - Encode all remaining items in the todo list."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 593,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 617,
    "line": "                    )  # TODO https://github.com/fonttools/fonttools/pull/3126#discussion_r1205439785"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 629,
    "line": "    todo = sorted(encodings.values(), key=_Encoding.gain_sort_key)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 635,
    "line": "    for i, encoding in enumerate(todo):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 636,
    "line": "        for j in range(i + 1, len(todo)):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 637,
    "line": "            other_encoding = todo[j]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 644,
    "line": "        if todo[i] is None or todo[j] is None:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 647,
    "line": "        encoding, other_encoding = todo[i], todo[j]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 648,
    "line": "        todo[i], todo[j] = None, None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 656,
    "line": "        for k, enc in enumerate(todo):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 664,
    "line": "                todo[k] = None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 669,
    "line": "                heappush(heap, (-combining_gain, k, len(todo)))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 671,
    "line": "        todo.append(combined_encoding)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 673,
    "line": "    encodings = [encoding for encoding in todo if encoding is not None]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
    "line_number": 729,
    "line": "    # TODO: allow user to configure logging via command-line options"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py",
    "line_number": 100,
    "line": "        # TODO Skip axes that have no variation."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py",
    "line_number": 174,
    "line": "        # TODO(anthrotype) revert this (and 19c4b37) when issue is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py",
    "line_number": 418,
    "line": "    # TODO: Modify gasp table to deactivate gridfitting for all ranges?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py",
    "line_number": 456,
    "line": "            # TODO Only drop hinting from this glyph."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py",
    "line_number": 719,
    "line": "        # TODO support gasp entries"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py",
    "line_number": 888,
    "line": "    # TODO: remove this and always assume 'designspace' is a DesignSpaceDocument,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py",
    "line_number": 900,
    "line": "    # TODO: Use fontTools.designspaceLib.tagForAxisName instead."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py",
    "line_number": 972,
    "line": "    # TODO This mapping should ideally be moved closer to logic in _add_fvar/avar"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py",
    "line_number": 1181,
    "line": "    # TODO: 'master_ttfs' is unused except for return value, remove later"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py",
    "line_number": 1202,
    "line": "    # TODO append masters as named-instances as well; needs .designspace change."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py",
    "line_number": 1260,
    "line": "    # TODO: Only return vf for 4.0+, the rest is unused."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\names.py",
    "line_number": 63,
    "line": "        # TODO: Only prune unused ltag tags, renumerating langIDs accordingly."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\names.py",
    "line_number": 270,
    "line": "    # TODO (Marc F) It may be nice to make this part a standalone"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\__init__.py",
    "line_number": 488,
    "line": "    # TODO(behdad) My confidence in this function is rather low;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\__init__.py",
    "line_number": 1074,
    "line": "# TODO(anthrotype) Add support for HVAR/VVAR in CFF2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\__init__.py",
    "line_number": 1283,
    "line": "    # TODO(anthrotype) Support partial instancing of JSTF and BASE tables"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\asyn.py",
    "line_number": 335,
    "line": "        # TODO: implement on_error"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\asyn.py",
    "line_number": 499,
    "line": "        # TODO: on_error"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\asyn.py",
    "line_number": 986,
    "line": "    # TODO: readahead might still be useful here, but needs async version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\caching.py",
    "line_number": 93,
    "line": "        # TODO: use rich for better formatting"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\caching.py",
    "line_number": 463,
    "line": "        # TODO: only set start/end after fetch, in case it fails?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\compression.py",
    "line_number": 13,
    "line": "# TODO: files should also be available as contexts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\spec.py",
    "line_number": 493,
    "line": "        # TODO: allow equivalent of -name parameter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\utils.py",
    "line_number": 302,
    "line": "    # TODO: allow length to be None and read to the end of the file?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\cached.py",
    "line_number": 322,
    "line": "            # TODO: action where partial file exists in read-only cache"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\cache_metadata.py",
    "line_number": 158,
    "line": "                # TODO: consolidate blocks here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\github.py",
    "line_number": 9,
    "line": "# TODO: add GIST backend, would be very similar"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\http.py",
    "line_number": 104,
    "line": "        # TODO: Maybe rename `self.kwargs` to `self.request_options` to make"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\local.py",
    "line_number": 346,
    "line": "    # TODO: if all incoming paths were posix-compliant then separator would"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\local.py",
    "line_number": 374,
    "line": "                # TODO: check if path is writable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\reference.py",
    "line_number": 147,
    "line": "        # TODO: derive fs from `root`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\reference.py",
    "line_number": 468,
    "line": "        # TODO: only save needed columns"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\reference.py",
    "line_number": 542,
    "line": "        # TODO: only clear those that we wrote to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\reference.py",
    "line_number": 744,
    "line": "            # TODO: warning here, since this can be very expensive?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\reference.py",
    "line_number": 873,
    "line": "        # TODO: if references is lazy, pre-fetch all paths in batch before access"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\reference.py",
    "line_number": 974,
    "line": "        # TODO: we make dircache by iterating over all entries, but for Spec >= 1,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\smb.py",
    "line_number": 394,
    "line": "        # TODO: use transaction support in SMB protocol"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\tar.py",
    "line_number": 78,
    "line": "            # TODO: tarfile already implements compression with modes like \"'r:gz'\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\tar.py",
    "line_number": 92,
    "line": "        # TODO: load and set saved index, if exists"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\fsspec\\implementations\\tar.py",
    "line_number": 101,
    "line": "        # TODO: save index to self.index_store here, if set"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\v2.py",
    "line_number": 211,
    "line": "        # TODO: write metadata in the future; there is currently no"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\v2.py",
    "line_number": 229,
    "line": "        # TODO: write metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\core\\format.py",
    "line_number": 24,
    "line": "# todo: do we even use the known extensions?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\dicom.py",
    "line_number": 36,
    "line": "# todo: Use pydicom:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\freeimage.py",
    "line_number": 34,
    "line": "# todo: support files with only meta data"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\freeimage.py",
    "line_number": 147,
    "line": "# todo: there is also FIF_LOAD_NOPIXELS,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\freeimagemulti.py",
    "line_number": 208,
    "line": "        # todo: subrectangles"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\freeimagemulti.py",
    "line_number": 209,
    "line": "        # todo: global palette"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\pillow_legacy.py",
    "line_number": 180,
    "line": "# todo: Pillow ImageGrab module supports grabbing the screen on Win and OSX."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\spe.py",
    "line_number": 225,
    "line": "        # TODO: complete"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\tifffile_v3.py",
    "line_number": 298,
    "line": "                    \"orientation\": None,  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_bsdf.py",
    "line_number": 21,
    "line": "# todo: in 2020, remove six stuff, __future__ and _isidentifier"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_bsdf.py",
    "line_number": 22,
    "line": "# todo: in 2020, remove 'utf-8' args to encode/decode; it's faster"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_dicom.py",
    "line_number": 7,
    "line": "# todo: Use pydicom:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_freeimage.py",
    "line_number": 652,
    "line": "        # todo: there is also FreeImage_TagToString, is that useful?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_freeimage.py",
    "line_number": 1258,
    "line": "        # todo: Set flags at close func"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_swf.py",
    "line_number": 48,
    "line": "# todo: use Pillow to support reading JPEG images from SWF?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_swf.py",
    "line_number": 589,
    "line": "        # todo: nbits for fillStyle and lineStyle is hard coded."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 591,
    "line": "            # TODO: fail before creating file or writing data"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 618,
    "line": "    # TODO: help() doesn't work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 919,
    "line": "        # TODO: refactor this function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 1442,
    "line": "        # TODO: check TIFFReadDirectoryCheckOrder warning in files containing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 1653,
    "line": "        # TODO: assemble IFD chain in memory"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 2173,
    "line": "        # TODO: fix loading of color, composite, or palette images"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 2326,
    "line": "            # TODO: test badly encoded OME-XML"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 2346,
    "line": "                # TODO: load OME-XML from master or companion file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 2744,
    "line": "        # TODO: remove this or return XML?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 2829,
    "line": "        # TODO: read stamps from all pages"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 2937,
    "line": "        # TODO: scanimage_artist_metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 3740,
    "line": "            # TODO: file should remain open if an exception occurred above"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 3795,
    "line": "            # TODO: convert to uint8?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 4374,
    "line": "        # TODO: fix TypeError on Python 2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 4527,
    "line": "            # TODO: test this case; need example file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 5384,
    "line": "            4864: \"AndorId\",  # TODO: Andor Technology 4864 - 5030"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 5615,
    "line": "            # TODO: Pilatus/CHESS/TV6 36864..37120 conflicting with Exif tags"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 5769,
    "line": "            50495: \"PCO_RAW\",  # TODO: PCO CamWare"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 6439,
    "line": "        # TODO: is there a standard for character axes labels?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 6660,
    "line": "        # TODO: read more CZ_LSMINFO sub-records"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 7723,
    "line": "    # TODO: test this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 8077,
    "line": "    # TODO: implement read_metaseries_catalog"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 8503,
    "line": "    result[\"\"] = items[0].strip()  # TODO: parse this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 9296,
    "line": "    # TODO: handle invalid input"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 9297,
    "line": "    # TODO: review unboxing of multidimensional arrays"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 9460,
    "line": "    # TODO: pythonize this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 9656,
    "line": "    # TODO: subarrays"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 9924,
    "line": "    # TODO: finish and test multiline snip"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 10418,
    "line": "    import optparse  # TODO: use argparse"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\imageio\\plugins\\_tifffile.py",
    "line_number": 10508,
    "line": "        # TODO: handle image sequences"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\ext.py",
    "line_number": 251,
    "line": "    # TODO: the i18n extension is currently reevaluating values in a few"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 212,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 213,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 214,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 217,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 222,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 223,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 224,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 228,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 233,
    "line": "        todo = deque([self])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 234,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 235,
    "line": "            node = todo.popleft()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\jinja2\\nodes.py",
    "line_number": 237,
    "line": "            todo.extend(node.iter_child_nodes())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\compressor.py",
    "line_number": 234,
    "line": "    TODO python2_drop: is it still needed since we dropped Python 2 support A"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\func_inspect.py",
    "line_number": 165,
    "line": "        # TODO: Maybe add a warning here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\memory.py",
    "line_number": 37,
    "line": "# TODO: The following object should have a data store object as a sub"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\memory.py",
    "line_number": 46,
    "line": "# TODO: Same remark for the logger, and probably use the Python logging"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\memory.py",
    "line_number": 423,
    "line": "            # Strip backspace-overprints for compatibility with autodoc"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\memory.py",
    "line_number": 553,
    "line": "            # TODO (pierreglaser): do the same with get_func_name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\numpy_pickle_utils.py",
    "line_number": 214,
    "line": "    TODO python2_drop: is it still needed? The docstring mentions python 2.6"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\parallel.py",
    "line_number": 1989,
    "line": "            # TODO: this iterator should be batch_size * n_jobs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\pool.py",
    "line_number": 51,
    "line": "    TODO python2_drop : can this be simplified ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\_memmapping_reducer.py",
    "line_number": 159,
    "line": "        # TODO: check scipy sparse datastructure if scipy is installed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\_store_backends.py",
    "line_number": 205,
    "line": "                        # TODO(1.5) turn into error"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\externals\\cloudpickle\\cloudpickle.py",
    "line_number": 1284,
    "line": "        # TODO: decorrelate reducer_override (which is tied to CPython's"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\externals\\loky\\_base.py",
    "line_number": 20,
    "line": "# TODO investigate why using `concurrent.futures.Future` directly does not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\externals\\loky\\backend\\resource_tracker.py",
    "line_number": 11,
    "line": "# TODO: multiprocessing.resource_tracker was contributed to Python 3.8 so"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\externals\\loky\\backend\\synchronize.py",
    "line_number": 11,
    "line": "# TODO: investigate which Python version is required to be able to use"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\test\\common.py",
    "line_number": 34,
    "line": "# TODO: Turn this back on after refactoring yield based tests in test_hashing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\joblib\\test\\test_memory.py",
    "line_number": 140,
    "line": "    # TODO: test that the cache related to the function cache persists across"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\animation.py",
    "line_number": 280,
    "line": "            # TODO MovieWriter is still an abstract class and needs to be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\animation.py",
    "line_number": 1087,
    "line": "        # TODO: Right now, after closing the figure, saving a movie won't work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\animation.py",
    "line_number": 1111,
    "line": "            # TODO: Currently only FuncAnimation has a save_count"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\animation.py",
    "line_number": 1121,
    "line": "                    # TODO: See if turning off blit is really necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\artist.py",
    "line_number": 257,
    "line": "        # TODO: the fix for the collections relim problem is to move the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\artist.py",
    "line_number": 261,
    "line": "        # TODO: add legend support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backend_bases.py",
    "line_number": 565,
    "line": "            # todo: handle properties"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\cbook.py",
    "line_number": 1723,
    "line": "        # TODO do the finite filtering on this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\cm.py",
    "line_number": 21,
    "line": "# TODO make this warn on access"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\collections.py",
    "line_number": 312,
    "line": "        # TODO: check to ensure that this does not fail for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\colorbar.py",
    "line_number": 770,
    "line": "            # TODO: Make colorbar lines auto-follow changes in contour lines."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\dviread.py",
    "line_number": 538,
    "line": "        # TODO: actually read the postamble and finale?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\figure.py",
    "line_number": 2747,
    "line": "    # TODO: I'd like to dynamically add the _repr_html_ method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\font_manager.py",
    "line_number": 1526,
    "line": "                # TODO: _load_fontmanager should really be (used by) a method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\image.py",
    "line_number": 467,
    "line": "                    # TODO slice input array first"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\image.py",
    "line_number": 612,
    "line": "        # TODO: make sure this is consistent with patch and patch"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\image.py",
    "line_number": 614,
    "line": "        # TODO: consider returning image coordinates (shouldn't"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\legend.py",
    "line_number": 1163,
    "line": "            # XXX TODO: If markers are present, it would be good to take them"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\lines.py",
    "line_number": 450,
    "line": "            TODO: sort returned indices by distance"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\offsetbox.py",
    "line_number": 235,
    "line": "        # TODO deal with this better"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\offsetbox.py",
    "line_number": 1391,
    "line": "            # TODO: Rotation needs to be accounted."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\pyplot.py",
    "line_number": 1599,
    "line": ") -> tuple[Figure, np.ndarray]:  # TODO numpy/numpy#24738"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\rcsetup.py",
    "line_number": 817,
    "line": "        # TODO: We might want to rethink this..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\spines.py",
    "line_number": 585,
    "line": "        # TODO: Do we want to deprecate adding spines?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\spines.py",
    "line_number": 589,
    "line": "        # TODO: Do we want to deprecate deleting spines?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\table.py",
    "line_number": 434,
    "line": "        # TODO: Return index of the cell containing the cursor so that the user"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\text.py",
    "line_number": 33,
    "line": "    # TODO : This function may move into the Text class as a method. As a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\text.py",
    "line_number": 1964,
    "line": "        # TODO : Rotation needs to be accounted."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\ticker.py",
    "line_number": 2960,
    "line": "            # TODO: Figure out a way to still be able to display minor ticks with less"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 70,
    "line": "        for todo in ['left', 'right', 'leftcb', 'rightcb']:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 73,
    "line": "            self.margin_vals[todo] = np.zeros(ncols)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 79,
    "line": "        for todo in ['left', 'right', 'leftcb', 'rightcb']:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 80,
    "line": "            self.margins[todo] = [Variable(f'{sn}margins[{todo}][{i}]')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 83,
    "line": "                sol.addEditVariable(self.margins[todo][i], 'strong')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 85,
    "line": "        for todo in ['bottom', 'top', 'bottomcb', 'topcb']:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 86,
    "line": "            self.margins[todo] = np.empty((nrows), dtype=object)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 87,
    "line": "            self.margin_vals[todo] = np.zeros(nrows)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 91,
    "line": "        for todo in ['bottom', 'top', 'bottomcb', 'topcb']:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 92,
    "line": "            self.margins[todo] = [Variable(f'{sn}margins[{todo}][{i}]')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 95,
    "line": "                sol.addEditVariable(self.margins[todo][i], 'strong')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 126,
    "line": "        for todo in ['left', 'right', 'bottom', 'top',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 128,
    "line": "            self.edit_margins(todo, 0.0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 250,
    "line": "    def edit_margin(self, todo, size, cell):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 256,
    "line": "        todo : string (one of 'left', 'right', 'bottom', 'top')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 266,
    "line": "        self.solver.suggestValue(self.margins[todo][cell], size)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 267,
    "line": "        self.margin_vals[todo][cell] = size"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 269,
    "line": "    def edit_margin_min(self, todo, size, cell=0):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 275,
    "line": "        todo : string (one of 'left', 'right', 'bottom', 'top')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 287,
    "line": "        if size > self.margin_vals[todo][cell]:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 288,
    "line": "            self.edit_margin(todo, size, cell)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 290,
    "line": "    def edit_margins(self, todo, size):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 296,
    "line": "        todo : string (one of 'left', 'right', 'bottom', 'top')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 303,
    "line": "        for i in range(len(self.margin_vals[todo])):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 304,
    "line": "            self.edit_margin(todo, size, i)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 306,
    "line": "    def edit_all_margins_min(self, todo, size):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 313,
    "line": "        todo : {'left', 'right', 'bottom', 'top'}"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 322,
    "line": "        for i in range(len(self.margin_vals[todo])):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 323,
    "line": "            self.edit_margin_min(todo, size, i)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 350,
    "line": "    def get_margins(self, todo, col):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py",
    "line_number": 352,
    "line": "        return self.margin_vals[todo][col]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\axes\\_base.py",
    "line_number": 2539,
    "line": "        # the TODO note in artists.py."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_agg.py",
    "line_number": 17,
    "line": "Still TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_agg.py",
    "line_number": 229,
    "line": "        # todo, handle props, angle, origins"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_gtk3.py",
    "line_number": 242,
    "line": "        # TODO: Only update the rubberband area."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_gtk4.py",
    "line_number": 246,
    "line": "        # TODO: Only update the rubberband area."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_mixed.py",
    "line_number": 102,
    "line": "            # TODO: If the mixedmode resolution differs from the figure's"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 87,
    "line": "# TODOs:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 90,
    "line": "# * TTF support has lots of small TODOs, e.g., how do you know if a font"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 331,
    "line": "    # simpler to escape them all. TODO: cut long strings into lines;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 758,
    "line": "        # Possibly TODO: more general ExtGState (graphics state dictionaries)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1059,
    "line": "        # TODO: serif"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1062,
    "line": "        # TODO: symbolic (most TeX fonts are)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1071,
    "line": "        # TODO: all caps"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1074,
    "line": "        # TODO: small caps"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1077,
    "line": "        # TODO: force bold"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1091,
    "line": "            'CapHeight':   1000,  # TODO: find this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1092,
    "line": "            'XHeight':     500,  # TODO: this one too"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1095,
    "line": "            'StemV':       50,  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1422,
    "line": "        if 0:  # TODO: serif"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1430,
    "line": "        if 0:  # TODO: all caps"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1432,
    "line": "        if 0:  # TODO: small caps"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 1434,
    "line": "        if 0:  # TODO: force bold"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 2189,
    "line": "        # TODO: fix positioning and encoding"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py",
    "line_number": 2333,
    "line": "        # TODO: combine consecutive texts into one BT/ET delimited section"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pgf.py",
    "line_number": 729,
    "line": "        # TODO: this should be latex_pt_to_in instead of mpl_pt_to_in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_qt.py",
    "line_number": 483,
    "line": "        # TODO: queued signal connection might be safer than singleShot"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_webagg_core.py",
    "line_number": 327,
    "line": "        # TODO: Be more suspicious of the input"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_wx.py",
    "line_number": 271,
    "line": "        # TODO: It may be wise to cache font information"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\projections\\geo.py",
    "line_number": 284,
    "line": "            # MGDTODO: Math is hard ;("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\sphinxext\\roles.py",
    "line_number": 15,
    "line": "option in your autodoc configuration, or you have to override a method without"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\sphinxext\\roles.py",
    "line_number": 17,
    "line": "still render in your autodoc. If the docstring contains one of the custom sphinx"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_axes.py",
    "line_number": 1831,
    "line": "    # TODO: a slight change in rendering between Inkscape versions may explain"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backends_interactive.py",
    "line_number": 290,
    "line": "        # TODO: debug why WX needs this only on py >= 3.8"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_ft2font.py",
    "line_number": 871,
    "line": "    # TODO enable fallback for other backends!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_legend.py",
    "line_number": 475,
    "line": "    todos = ['upper ' + pos for pos in ['left', 'center', 'right']]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_legend.py",
    "line_number": 476,
    "line": "    todos += ['lower ' + pos for pos in ['left', 'center', 'right']]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_legend.py",
    "line_number": 477,
    "line": "    todos += ['left ' + pos for pos in ['lower', 'center', 'upper']]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_legend.py",
    "line_number": 478,
    "line": "    todos += ['right ' + pos for pos in ['lower', 'center', 'upper']]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_legend.py",
    "line_number": 502,
    "line": "    for nn, todo in enumerate(todos):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_legend.py",
    "line_number": 503,
    "line": "        print(todo)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_legend.py",
    "line_number": 506,
    "line": "        leg = fig.legend(loc='outside ' + todo)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_rcparams.py",
    "line_number": 279,
    "line": "         # TODO: Note that these tests are actually insufficient, as it may"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_simplification.py",
    "line_number": 178,
    "line": "    # TODO: guarantee offset > 0 results in some offsets < 0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_subplots.py",
    "line_number": 170,
    "line": "    # TODO should this test more options?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpl_toolkits\\axisartist\\floating_axes.py",
    "line_number": 5,
    "line": "# TODO :"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\axes3d.py",
    "line_number": 1851,
    "line": "        # TODO: Operate on each axes separately"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\axes3d.py",
    "line_number": 2507,
    "line": "        # TODO: Support custom face colours"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\axis3d.py",
    "line_number": 377,
    "line": "        # TODO: Move somewhere else where it's triggered less:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\axis3d.py",
    "line_number": 602,
    "line": "            # TODO: Maybe Text objects should handle this themselves?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\axis3d.py",
    "line_number": 671,
    "line": "    # TODO: Get this to work (more) properly when mplot3d supports the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\ctx_mp.py",
    "line_number": 306,
    "line": "    # TODO: add more of these, make consistent, write docstrings, ..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\identification.py",
    "line_number": 273,
    "line": "        # slowly (e.g. a factor 1-10) with each step TODO: we could"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\math2.py",
    "line_number": 207,
    "line": "        # TODO: sinpi"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\math2.py",
    "line_number": 221,
    "line": "        # TODO: sinpi"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\math2.py",
    "line_number": 359,
    "line": "# TODO: could implement complex erf and erfc here. Need"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\differentiation.py",
    "line_number": 364,
    "line": "    TODO: most exponents are zero, so maybe a sparse representation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\extrapolation.py",
    "line_number": 171,
    "line": "    (TODO: find a better solution to this problem.)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\extrapolation.py",
    "line_number": 1969,
    "line": "            # TODO: we are evaluating log(1+eps) -> eps, which is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\odes.py",
    "line_number": 219,
    "line": "    **TODO**"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\optimization.py",
    "line_number": 264,
    "line": "            # TODO: maybe refactoring with function for divided differences"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\optimization.py",
    "line_number": 289,
    "line": "# TODO: consider raising a ValueError when there's no sign change in a and b"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\optimization.py",
    "line_number": 418,
    "line": "                # TODO: better condition (when f is very flat)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\optimization.py",
    "line_number": 457,
    "line": "# TODO: check whether it's possible to combine it with Illinois stuff"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\optimization.py",
    "line_number": 503,
    "line": "                # TODO: better condition (when f is very flat)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\optimization.py",
    "line_number": 560,
    "line": "            # TODO: decide not to use convergence acceleration"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\optimization.py",
    "line_number": 573,
    "line": "# TODO: add Brent"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\optimization.py",
    "line_number": 601,
    "line": "# TODO: test with user-specified jacobian matrix"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\optimization.py",
    "line_number": 665,
    "line": "            # damping step size TODO: better strategy (hard task)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\calculus\\optimization.py",
    "line_number": 984,
    "line": "        if verify and norm(f(*xl))**2 > tol: # TODO: better condition?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\bessel.py",
    "line_number": 28,
    "line": "        # TODO: the integer special-casing shouldn't be necessary."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\bessel.py",
    "line_number": 147,
    "line": "    # TODO: avoid cancellation for imaginary arguments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\bessel.py",
    "line_number": 384,
    "line": "# TODO: do this more generically?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\bessel.py",
    "line_number": 423,
    "line": "# TODO: could be expressed more elegantly using triple factorials"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\bessel.py",
    "line_number": 468,
    "line": "        # TODO: limits"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\bessel.py",
    "line_number": 521,
    "line": "                # TODO: asymptotic series for derivatives"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\bessel.py",
    "line_number": 562,
    "line": "        # TODO: limits"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\bessel.py",
    "line_number": 718,
    "line": "    # TODO: check that chop=True chops when and only when it should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\bessel.py",
    "line_number": 757,
    "line": "    # TODO: check that chop=True chops when and only when it should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\bessel.py",
    "line_number": 833,
    "line": "    TODO: this can be optimized, e.g. by reusing evaluation points."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\bessel.py",
    "line_number": 878,
    "line": "                # TODO: use v <= j'_{v,1} < y_{v,1}?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\expintegrals.py",
    "line_number": 265,
    "line": "            # TODO: reasonable sign of infinity"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\factorials.py",
    "line_number": 112,
    "line": "    # TODO: fixme, obviously"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\functions.py",
    "line_number": 174,
    "line": "# TODO: tests; improve implementation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\functions.py",
    "line_number": 182,
    "line": "    # TODO: accurately eval the smaller of the real/imag parts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\functions.py",
    "line_number": 212,
    "line": "    # TODO: accurately eval the smaller of the real/imag part"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\functions.py",
    "line_number": 257,
    "line": "            # TODO: this can be done *much* faster"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\functions.py",
    "line_number": 604,
    "line": "    # TODO: the following could be generalized into a perfect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\hypergeometric.py",
    "line_number": 11,
    "line": "        # Avoid division by zero in leading factors (TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\hypergeometric.py",
    "line_number": 284,
    "line": "            # TODO: handle the all-real case more efficiently!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\hypergeometric.py",
    "line_number": 285,
    "line": "            # TODO: figure out how much precision is needed (exponential growth)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\hypergeometric.py",
    "line_number": 404,
    "line": "        # TODO: the following logic can be simplified"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\hypergeometric.py",
    "line_number": 760,
    "line": "    # TODO: much of the following could be shared with 2F3 instead of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\hypergeometric.py",
    "line_number": 832,
    "line": "    # TODO: much of the following could be shared with 2F3 instead of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\hypergeometric.py",
    "line_number": 1091,
    "line": "    # TODO: continuation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\hypergeometric.py",
    "line_number": 1107,
    "line": "    # TODO: continuation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\orthogonal.py",
    "line_number": 18,
    "line": "    # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\orthogonal.py",
    "line_number": 313,
    "line": "        # TODO: something else is required here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\orthogonal.py",
    "line_number": 373,
    "line": "    # TODO: correct evaluation at singularities"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\theta.py",
    "line_number": 926,
    "line": "    # TODO: write _jacobi_theta2a and _jacobi_theta3a using fixed-point"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\zeta.py",
    "line_number": 238,
    "line": "# TODO: fix the interface wrt contexts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\zeta.py",
    "line_number": 287,
    "line": "# TODO: for bernpoly and eulerpoly, ensure that all exact zeros are covered"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\zeta.py",
    "line_number": 385,
    "line": "# TODO: this should be implemented low-level"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\zeta.py",
    "line_number": 620,
    "line": "    # TODO: implement for derivatives"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\functions\\zeta.py",
    "line_number": 697,
    "line": "            # TODO: the following could perhaps be tidied a bit"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\gammazeta.py",
    "line_number": 179,
    "line": "    # formula to the tail. TODO: choose more intelligently"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\gammazeta.py",
    "line_number": 626,
    "line": "TODO: the current estimation of N for m > 0 is *very suboptimal*."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\gammazeta.py",
    "line_number": 628,
    "line": "TODO: implement the reflection formula for m > 0, Re(z) << 0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\gammazeta.py",
    "line_number": 633,
    "line": "TODO: maybe use exact algorithms to compute psi for integral"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\gammazeta.py",
    "line_number": 1160,
    "line": "# TODO: optimize / cleanup interface / unify with list_primes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\gammazeta.py",
    "line_number": 1383,
    "line": "    TODO: this is currently only used for gamma, but could"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\gammazeta.py",
    "line_number": 1942,
    "line": "    # a fixed-point value. TODO: determine a precise cutoff of validity"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libelefun.py",
    "line_number": 342,
    "line": "    # TODO: handle rnd direction of the logarithm carefully"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libelefun.py",
    "line_number": 711,
    "line": "        # TODO: if close enough to 1, we could use Taylor series"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libelefun.py",
    "line_number": 876,
    "line": "# TODO: cleanup the special cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libelefun.py",
    "line_number": 1158,
    "line": "        # TODO: the best cutoff depends on both x and the precision."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libelefun.py",
    "line_number": 1249,
    "line": "    # TODO: optimize division precision"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libhyper.py",
    "line_number": 54,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libhyper.py",
    "line_number": 199,
    "line": "        # TODO: when there are several real parameters and just a few complex"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libhyper.py",
    "line_number": 332,
    "line": "# TODO: mpf_erf should call mpf_erfc when appropriate (currently"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libhyper.py",
    "line_number": 355,
    "line": "        # TODO: interval rounding"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libhyper.py",
    "line_number": 617,
    "line": "            # TODO: could return finite imaginary value at -inf"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libhyper.py",
    "line_number": 911,
    "line": "# TODO: for extremely large x, we could use an asymptotic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libhyper.py",
    "line_number": 914,
    "line": "# TODO: recompute at higher precision if the fixed-point mantissa"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libhyper.py",
    "line_number": 1046,
    "line": "    TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libhyper.py",
    "line_number": 1081,
    "line": "    # TODO: for |x| << 1/2, one could use fall back to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libintmath.py",
    "line_number": 4,
    "line": "TODO: rename, cleanup, perhaps move the gmpy wrapper code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libintmath.py",
    "line_number": 129,
    "line": "# TODO: speed up for bases 2, 4, 8, 16, ..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libintmath.py",
    "line_number": 458,
    "line": "    TODO: speed up using factorization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpc.py",
    "line_number": 498,
    "line": "    # TODO: handle cancellation when c ~=  -1 and ch ~= 1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpc.py",
    "line_number": 584,
    "line": "# TODO: avoid loss of accuracy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpf.py",
    "line_number": 1175,
    "line": "    # TODO: account for precision when doing this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpf.py",
    "line_number": 1320,
    "line": "    TODO: the rounding does not work properly for large exponents."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpi.py",
    "line_number": 124,
    "line": "# TODO: optimize"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpi.py",
    "line_number": 367,
    "line": "    # TODO: combine evaluation code to avoid duplicate modulo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpi.py",
    "line_number": 631,
    "line": "    # TODO: optimize for real/imag cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpi.py",
    "line_number": 643,
    "line": "    # TODO: optimize for real/imag cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpi.py",
    "line_number": 670,
    "line": "    # TODO: accuracy for small x"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpi.py",
    "line_number": 759,
    "line": "    # TODO: recognize/speed up real cases, integer y"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpi.py",
    "line_number": 848,
    "line": "        # TODO: reflection formula"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\libmp\\libmpi.py",
    "line_number": 885,
    "line": "            # TODO: reflection formula"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\matrices\\calculus.py",
    "line_number": 3,
    "line": "# TODO: should use diagonalization-based algorithms"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\matrices\\calculus.py",
    "line_number": 14,
    "line": "        TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\matrices\\eigen.py",
    "line_number": 8,
    "line": "# todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\matrices\\eigen_symmetric.py",
    "line_number": 8,
    "line": "# todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\matrices\\linalg.py",
    "line_number": 99,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\matrices\\linalg.py",
    "line_number": 136,
    "line": "                if current > biggest: # TODO: what if equal?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\matrices\\linalg.py",
    "line_number": 218,
    "line": "                    # TODO: necessary to check also b?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\matrices\\linalg.py",
    "line_number": 239,
    "line": "            raise RuntimeError(\"need n*n matrix\") # TODO: really?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\matrices\\linalg.py",
    "line_number": 372,
    "line": "    # TODO: implement this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\matrices\\matrices.py",
    "line_number": 4,
    "line": "# TODO: interpret list as vectors (for multiplication)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\matrices\\matrices.py",
    "line_number": 208,
    "line": "        COMMENT: TODO: the above \"doctest:+SKIP\" may be removed as soon as we"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\tests\\runtests.py",
    "line_number": 57,
    "line": "# TODO: add a flag for this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\tests\\test_gammazeta.py",
    "line_number": 599,
    "line": "    # TODO: more tests for polyexp"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\tests\\test_interval.py",
    "line_number": 273,
    "line": "    # TODO: many more tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\tests\\test_interval.py",
    "line_number": 404,
    "line": "    # TODO: need many more tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\tests\\test_linalg.py",
    "line_number": 1,
    "line": "# TODO: don't use round"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\tests\\test_matrices.py",
    "line_number": 57,
    "line": "    # TODO remove exec() wrapper as soon as we drop support for Python <= 3.5"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\mpmath\\tests\\torture.py",
    "line_number": 27,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\conftest.py",
    "line_number": 100,
    "line": "# TODO: The warnings below need to be dealt with, but for now we silence them."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\clique.py",
    "line_number": 297,
    "line": "# TODO Should this also be not implemented for directed graphs?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\cuts.py",
    "line_number": 19,
    "line": "# TODO STILL NEED TO UPDATE ALL THE DOCUMENTATION!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\cuts.py",
    "line_number": 322,
    "line": "# TODO What is the generalization to two arguments, S and T? Does the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\cuts.py",
    "line_number": 362,
    "line": "# TODO What is the generalization to two arguments, S and T? Does the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\cycles.py",
    "line_number": 837,
    "line": "                if thisnode not in B[nextnode]:  # TODO: use set for speedup?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\dag.py",
    "line_number": 1125,
    "line": "    # TODO In Python 3, this would be better as `yield from ...`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\distance_regular.py",
    "line_number": 184,
    "line": "# TODO There is a definition for directed strongly regular graphs."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\efficiency_measures.py",
    "line_number": 118,
    "line": "    # TODO This can be made more efficient by computing all pairs shortest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\node_classification.py",
    "line_number": 94,
    "line": "    # TODO: csr_array"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\node_classification.py",
    "line_number": 173,
    "line": "    # TODO: csr_array"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\similarity.py",
    "line_number": 690,
    "line": "    # TODO: support DiGraph"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\walks.py",
    "line_number": 72,
    "line": "    # TODO: Use matrix_power from scipy.sparse when available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\approximation\\dominating_set.py",
    "line_number": 22,
    "line": "# TODO Why doesn't this algorithm work for directed graphs?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\approximation\\traveling_salesman.py",
    "line_number": 798,
    "line": "            # TODO: this branch does not restore original_edge_weights of G!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\assortativity\\tests\\test_connectivity.py",
    "line_number": 138,
    "line": "        # TODO Is this really the intended behavior for providing a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\bipartite\\matching.py",
    "line_number": 276,
    "line": "            # TODO - The lines between --- were unused and were thus commented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\bipartite\\matching.py",
    "line_number": 282,
    "line": "            #     # TODO Why is extra inner loop necessary?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\bipartite\\matching.py",
    "line_number": 287,
    "line": "            # TODO Originally, this function returned a three-tuple:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\bipartite\\redundancy.py",
    "line_number": 93,
    "line": "    # TODO This can be trivially parallelized."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\bipartite\\tests\\test_matching.py",
    "line_number": 110,
    "line": "        # TODO Assert that the vertices are the correct ones."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\centrality\\reaching.py",
    "line_number": 111,
    "line": "    # TODO This can be trivially parallelized."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\centrality\\reaching.py",
    "line_number": 206,
    "line": "    # TODO This can be trivially parallelized."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\coloring\\equitable_coloring.py",
    "line_number": 163,
    "line": "        # TODO: Checking whether a color has been visited can be made faster by"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\connectivity\\edge_kcomponents.py",
    "line_number": 97,
    "line": "            # TODO: investigate https://arxiv.org/abs/1412.6466 for k=2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\connectivity\\edge_kcomponents.py",
    "line_number": 314,
    "line": "    # @not_implemented_for('multigraph')  # TODO: fix decor for classmethods"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\isomorphism\\ismags.py",
    "line_number": 292,
    "line": "        # TODO: graph and subgraph setter methods that invalidate the caches."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\isomorphism\\ismags.py",
    "line_number": 293,
    "line": "        # TODO: allow for precomputed partitions and colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\isomorphism\\isomorphvf2.py",
    "line_number": 196,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\isomorphism\\vf2pp.py",
    "line_number": 350,
    "line": "        )  # todo: do we need Ti_tilde_in? What nodes does it have?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\isomorphism\\vf2pp.py",
    "line_number": 445,
    "line": "):  # todo: make the 4th argument the degree of u"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\link_analysis\\pagerank_alg.py",
    "line_number": 464,
    "line": "    # TODO: csr_array"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\shortest_paths\\unweighted.py",
    "line_number": 198,
    "line": "    # TODO This can be trivially parallelized."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\shortest_paths\\unweighted.py",
    "line_number": 492,
    "line": "    # TODO This can be trivially parallelized."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\shortest_paths\\weighted.py",
    "line_number": 1137,
    "line": "    # TODO This can be trivially parallelized."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\tests\\test_swap.py",
    "line_number": 40,
    "line": "    # TODO: Rewrite function to explicitly check for impossible swaps and raise error"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\traversal\\beamsearch.py",
    "line_number": 77,
    "line": "        # TODO The Python documentation states that for small values, it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\tree\\branchings.py",
    "line_number": 11,
    "line": "# TODO: Implement method from Gabow, Galil, Spence and Tarjan:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\tree\\mst.py",
    "line_number": 124,
    "line": "        # TODO This can be parallelized, both in the outer loop over"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\algorithms\\tree\\mst.py",
    "line_number": 132,
    "line": "        # TODO This loop can be parallelized, to an extent (the union"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\drawing\\layout.py",
    "line_number": 625,
    "line": "            Ai = A.getrowview(i).toarray()  # TODO: revisit w/ sparse 1D container"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\drawing\\layout.py",
    "line_number": 880,
    "line": "    # TODO: Rm csr_array wrapper in favor of spdiags array constructor when available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\drawing\\nx_latex.py",
    "line_number": 217,
    "line": "    # TODO allow pos to be None and use a nice TikZ default"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\drawing\\nx_latex.py",
    "line_number": 280,
    "line": "        # TODO -- handle bending of multiedges"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\drawing\\nx_pylab.py",
    "line_number": 1501,
    "line": "        # TODO should this be list or array (as in a numpy array)?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\generators\\community.py",
    "line_number": 1034,
    "line": "    # TODO The original code incremented the number of iterations each"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\generators\\degree_seq.py",
    "line_number": 671,
    "line": "    # TODO Does this need to be sorted in reverse order?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\generators\\geometric.py",
    "line_number": 190,
    "line": "    # TODO Is this function just a special case of the geographical"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\generators\\tests\\test_expanders.py",
    "line_number": 37,
    "line": "    # TODO The second largest eigenvalue should be smaller than a constant,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\algebraicconnectivity.py",
    "line_number": 194,
    "line": "        # TODO: rm csr_array wrapper when spdiags array creation becomes available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\algebraicconnectivity.py",
    "line_number": 281,
    "line": "                # TODO: rm csc_array wrapping when spdiags array becomes available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\algebraicconnectivity.py",
    "line_number": 298,
    "line": "                # TODO: rm csr_array wrapping when spdiags array becomes available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\bethehessianmatrix.py",
    "line_number": 75,
    "line": "    # TODO: Rm csr_array wrapper when spdiags array creation becomes available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\bethehessianmatrix.py",
    "line_number": 77,
    "line": "    # TODO: Rm csr_array wrapper when eye array creation becomes available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\laplacianmatrix.py",
    "line_number": 129,
    "line": "    # TODO: rm csr_array wrapper when spdiags can produce arrays"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\laplacianmatrix.py",
    "line_number": 239,
    "line": "    # TODO: rm csr_array wrapper when spdiags can produce arrays"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\laplacianmatrix.py",
    "line_number": 245,
    "line": "    # TODO: rm csr_array wrapper when spdiags can produce arrays"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\laplacianmatrix.py",
    "line_number": 438,
    "line": "        # TODO: rm csr_array wrapper when spdiags creates arrays"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\laplacianmatrix.py",
    "line_number": 441,
    "line": "        # TODO: rm csr_array wrapper when spdiags creates arrays"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\laplacianmatrix.py",
    "line_number": 533,
    "line": "    # TODO: Rm csr_array wrapper when spdiags array creation becomes available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\laplacianmatrix.py",
    "line_number": 595,
    "line": "        # TODO: Rm csr_array wrapper when spdiags array creation becomes available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\linalg\\laplacianmatrix.py",
    "line_number": 600,
    "line": "            # TODO: Rm csr_array wrapper when identity array creation becomes available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\readwrite\\json_graph\\node_link.py",
    "line_number": 126,
    "line": "    # TODO: Remove between the lines when `link` deprecation expires"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\readwrite\\json_graph\\node_link.py",
    "line_number": 271,
    "line": "    # TODO: Remove between the lines when `link` deprecation expires"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\networkx\\readwrite\\json_graph\\tests\\test_node_link.py",
    "line_number": 27,
    "line": "    # TODO: To be removed when signature change complete"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\__init__.py",
    "line_number": 546,
    "line": "    # TODO: Remove the environment variable entirely now that it is \"weak\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\distutils\\ccompiler_opt.py",
    "line_number": 568,
    "line": "        # TODO: ARM MSVC"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\distutils\\ccompiler_opt.py",
    "line_number": 863,
    "line": "        # TODO: don't write if the cache doesn't change"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\distutils\\ccompiler_opt.py",
    "line_number": 2489,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\distutils\\ccompiler_opt.py",
    "line_number": 2530,
    "line": "        # TODO: add support for 'markdown' format"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\distutils\\npy_pkg_config.py",
    "line_number": 372,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\distutils\\command\\build_src.py",
    "line_number": 548,
    "line": "            #XXX TODO: --inplace support for sdist command"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\distutils\\fcompiler\\gnu.py",
    "line_number": 254,
    "line": "        # TODO: could use -Xlinker here, if it's supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\distutils\\fcompiler\\intel.py",
    "line_number": 24,
    "line": "        # TODO: could use -Xlinker here, if it's supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\distutils\\fcompiler\\__init__.py",
    "line_number": 1032,
    "line": "# TODO: implement get_f90flags and use it in _compile similarly to get_f77flags"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\capi_maps.py",
    "line_number": 248,
    "line": "    # TODO: support Fortran `len` function with optional kind parameter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\capi_maps.py",
    "line_number": 504,
    "line": "        # TODO: Evaluate intent_flags here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\cfuncs.py",
    "line_number": 739,
    "line": "        /* TODO: change the type of `len` so that we can remove this */"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\cfuncs.py",
    "line_number": 799,
    "line": "            // TODO: update when numpy will support 1-byte and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\cfuncs.py",
    "line_number": 824,
    "line": "        /* TODO: This error (and most other) error handling needs cleaning. */"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\cfuncs.py",
    "line_number": 846,
    "line": "# TODO: These should be dynamically generated, too many mapped to int things,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
    "line_number": 133,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
    "line_number": 2064,
    "line": "    TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
    "line_number": 2503,
    "line": "                    # TODO: test .eq., .neq., etc replacements."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
    "line_number": 2549,
    "line": "                outmess(f'get_parameters[TODO]: '"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
    "line_number": 2592,
    "line": "        # TODO: use symbolic from PR #19805"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\f2py2e.py",
    "line_number": 458,
    "line": "    # TODO: Remove all this when scaninputline is replaced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\f2py2e.py",
    "line_number": 650,
    "line": "    # TODO: Once distutils is dropped completely, i.e. min_ver >= 3.12, unify into --fflags"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 23,
    "line": "# TODO: support logical constants (Op.BOOLEAN)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 24,
    "line": "# TODO: support logical operators (.AND., ...)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 25,
    "line": "# TODO: support defined operators (.MYOP., ...)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 520,
    "line": "                # TODO: other kind not used"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 570,
    "line": "        # TODO: implement a method for deciding when __call__ should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 811,
    "line": "            # TODO: determine correct kind"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 846,
    "line": "            # TODO: determine correct kind"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 896,
    "line": "            # TODO: denom kind not used"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\symbolic.py",
    "line_number": 1108,
    "line": "            # TODO: find common divisor of coefficients"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\_isocbind.py",
    "line_number": 55,
    "line": "# TODO: See gh-25229"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_docs.py",
    "line_number": 59,
    "line": "    # TODO: implement test methods for other example Fortran codes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 415,
    "line": "    # TODO: Clean up to prevent passing --overwrite-signature"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 514,
    "line": "    TODO: Test to ensure this has no effect without --latex-doc"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 658,
    "line": "    TODO: Document this in the help string"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 682,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 691,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 747,
    "line": "    # TODO: f2py2e should not call sys.exit() after printing the version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 821,
    "line": "# TODO: These should be tested separately"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 827,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 835,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 843,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 851,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 859,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 867,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 875,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 883,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 891,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 899,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 907,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 915,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 923,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 931,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 939,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 947,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 955,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
    "line_number": 963,
    "line": "    # TODO: populate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\fft\\__init__.py",
    "line_number": 204,
    "line": "# TODO: `numpy.fft.helper`` was deprecated in NumPy 2.0. It should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\lib\\mixins.py",
    "line_number": 168,
    "line": "    # TODO: handle the optional third argument for __pow__?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\lib\\_datasource.py",
    "line_number": 72,
    "line": "# TODO: .zip support, .tar support?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\lib\\_datasource.py",
    "line_number": 331,
    "line": "        # TODO: Doesn't handle compressed files!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\lib\\_datasource.py",
    "line_number": 397,
    "line": "        # TODO:  This should be more robust.  Handles case where path includes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\lib\\_datasource.py",
    "line_number": 511,
    "line": "        # TODO: There is no support for opening a file for writing which"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\lib\\_datasource.py",
    "line_number": 514,
    "line": "        # TODO: Add a ``subdir`` parameter for specifying the subdirectory"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\lib\\_function_base_impl.py",
    "line_number": 848,
    "line": "    # TODO: This preserves the Python int, float, complex manually to get the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\lib\\_nanfunctions_impl.py",
    "line_number": 1693,
    "line": "    # TODO: What to do when arr1d = [1, np.nan] and weights = [0, 1]?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\lib\\tests\\test_function_base.py",
    "line_number": 3700,
    "line": "        # TODO: Note that times have dubious rounding as of fixing NaTs!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\lib\\tests\\test_function_base.py",
    "line_number": 4416,
    "line": "        # TODO: Median does not support Datetime, due to `mean`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\lib\\tests\\test_io.py",
    "line_number": 313,
    "line": "                sup.filter(ResourceWarning)  # TODO: specify exact message"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\ma\\core.py",
    "line_number": 229,
    "line": "        # TODO: This is probably a mess, but should best preserve behavior?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\ma\\core.py",
    "line_number": 472,
    "line": "        # TODO: It seems better to always store a valid fill_value, the oddity"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\ma\\core.py",
    "line_number": 4779,
    "line": "        # TODO: We don't actually support K, so use A instead.  We could"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\ma\\tests\\test_core.py",
    "line_number": 5522,
    "line": "    # TODO: Test masked_object, masked_equal, ..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\ma\\tests\\test_old_ma.py",
    "line_number": 654,
    "line": "        #TODO FIXME: Find out what the following raises a warning in r8247"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\polynomial\\_polybase.py",
    "line_number": 433,
    "line": "        # TODO: we're stuck with disabling math formatting until we handle"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_random.py",
    "line_number": 1063,
    "line": "    # TODO: Include test for randint once it can broadcast"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\shape.py",
    "line_number": 11,
    "line": "# TODO: remove this cast after: https://github.com/numpy/numpy/pull/27171"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\arrayprint.py",
    "line_number": 1548,
    "line": "        # TODO: Custom repr for user DTypes, logic should likely move."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\fromnumeric.py",
    "line_number": 44,
    "line": "    # but this follows what was done before. TODO: revisit this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\getlimits.py",
    "line_number": 373,
    "line": "    TODO: MachAr should be retired completely ideally.  We currently only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\numeric.py",
    "line_number": 511,
    "line": "    # TODO: this works around .astype(bool) not working properly (gh-9847)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\_add_newdocs.py",
    "line_number": 2277,
    "line": "        assignment examples; TODO)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\_add_newdocs_scalars.py",
    "line_number": 128,
    "line": "# TODO: These docs probably need an if to highlight the default rather than"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\_add_newdocs_scalars.py",
    "line_number": 337,
    "line": "# TODO: work out how to put this on the base class, np.floating"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\_dtype.py",
    "line_number": 176,
    "line": "        # TODO: this path can never be reached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\_dtype.py",
    "line_number": 185,
    "line": "    # TODO: this duplicates the C metastr_to_unicode functionality"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\_methods.py",
    "line_number": 89,
    "line": "        # TODO: Optimize case when `where` is broadcast along a non-reduction"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_array_coercion.py",
    "line_number": 454,
    "line": "        # TODO: This discrepancy _should_ be resolved, either by relaxing the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_array_coercion.py",
    "line_number": 905,
    "line": "    # TODO: This is arguably weird/wrong, but seems old:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_casting_unittests.py",
    "line_number": 781,
    "line": "        # TODO: While this test is fairly thorough, right now, it does not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_datetime.py",
    "line_number": 1579,
    "line": "        # TODO: Allowing unsafe casting by"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_datetime.py",
    "line_number": 2561,
    "line": "        # TODO: add absolute (gold standard) time span limit strings"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_multiarray.py",
    "line_number": 7584,
    "line": "# TODO: test for multidimensional"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_scalarmath.py",
    "line_number": 96,
    "line": "        # TODO: It would be nice to resolve this issue."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_scalarmath.py",
    "line_number": 1132,
    "line": "    # TODO: Power is a bit special, but here mostly bools seem to behave oddly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_stringdtype.py",
    "line_number": 1557,
    "line": "    # TODO: generalize to more ufuncs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 12,
    "line": "# TODO: branch cuts (use Pauli code)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 13,
    "line": "# TODO: conj 'symmetry'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 14,
    "line": "# TODO: FPU exceptions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 23,
    "line": "# TODO: replace with a check on whether platform-provided C99 funcs are used"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 26,
    "line": "# TODO This can be xfail when the generator functions are got rid of."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 122,
    "line": "    # TODO This can be xfail when the generator functions are got rid of."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
    "line_number": 479,
    "line": "    # TODO This can be xfail when the generator functions are got rid of."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_typing\\_array_like.py",
    "line_number": 64,
    "line": "# TODO: Wait until mypy supports recursive objects in combination with typevars"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_typing\\_char_codes.py",
    "line_number": 208,
    "line": "    # TODO: add `_StringCodes` once it has a scalar type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\numpy\\_typing\\_dtype_like.py",
    "line_number": 62,
    "line": "_DTypeLikeNested: TypeAlias = Any  # TODO: wait for support for recursive types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\packaging\\metadata.py",
    "line_number": 204,
    "line": "        # TODO: The spec doesn't say anything about if the keys should be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\packaging\\metadata.py",
    "line_number": 806,
    "line": "    description: _Validator[str | None] = _Validator()  # TODO 2.1: can be in body"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\packaging\\requirements.py",
    "line_number": 29,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\packaging\\requirements.py",
    "line_number": 32,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\packaging\\tags.py",
    "line_number": 378,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\PIL\\IcoImagePlugin.py",
    "line_number": 75,
    "line": "            # TODO: invent a more convenient method for proportional scalings"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\PIL\\ImageFont.py",
    "line_number": 19,
    "line": "# Todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\PIL\\PdfParser.py",
    "line_number": 615,
    "line": "            # TODO: support reuse of deleted objects"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\PIL\\TiffImagePlugin.py",
    "line_number": 2237,
    "line": "                    raise RuntimeError(msg)  # XXX TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
    "line_number": 279,
    "line": "                # TODO: use DirectUrl.equivalent when"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
    "line_number": 202,
    "line": "        # TODO: Try to get these passing down from the command?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\inspect.py",
    "line_number": 60,
    "line": "            # TODO tags? scheme?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\index\\collector.py",
    "line_number": 344,
    "line": "        # TODO: In the future, it would be nice if pip supported PEP 691"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 37,
    "line": "from pip._internal.utils.compat import stdlib_pkgs  # TODO: Move definition here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 167,
    "line": "        # TODO: this property is relatively costly to compute, memoize it ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 177,
    "line": "                # TODO: get project location from second line of egg_link file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\models\\installation_report.py",
    "line_number": 50,
    "line": "            # TODO: currently, the resolver uses the default environment to evaluate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\models\\selection_prefs.py",
    "line_number": 6,
    "line": "# TODO: This needs Python 3.10's improved slots support for dataclasses"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
    "line_number": 174,
    "line": "        # TODO: Get range requests to be correctly cached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 552,
    "line": "        # TODO: separate this part out from RequirementPreparer when the v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
    "line_number": 285,
    "line": "        # TODO: The is_installable_dir test here might not be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 509,
    "line": "    # TODO: handle space after '\\'."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
    "line_number": 75,
    "line": "        TODO remove this property together with the legacy resolver, since the new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 227,
    "line": "        # TODO performance: this means we iterate the dependencies at least twice,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 360,
    "line": "        # TODO: Supply reason based on force_reinstall and upgrade_strategy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 201,
    "line": "        # TODO: Check already installed candidate, and use it if the link and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 622,
    "line": "        # TODO: Are there more cases this needs to return True? Editable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
    "line_number": 38,
    "line": "    # TODO: Remove this block after dropping Python 3.8 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
    "line_number": 225,
    "line": "        # TODO: There is an assumption that the result will be a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py",
    "line_number": 67,
    "line": "        # TODO: Add some logging here..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1278,
    "line": "    todo = graph.reverse_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1280,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1281,
    "line": "        d = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1285,
    "line": "                todo.append(succ)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1305,
    "line": "    todo = graph.adjacency_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1306,
    "line": "    seen = set(t[0] for t in todo)  # already added to todo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1308,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1309,
    "line": "        d = todo.pop()[0]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1316,
    "line": "                todo.append(pred)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 760,
    "line": "        XXX TODO Note: this cache is never actually cleared. It's assumed that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 922,
    "line": "                # TODO SHA256 digest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1237,
    "line": "        todo = set([dist])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1239,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1240,
    "line": "            dist = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1274,
    "line": "                            todo.add(provider)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 239,
    "line": "    # TODO document the mapping API and UNKNOWN default key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 560,
    "line": "    # TODO could add iter* variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 984,
    "line": "        # TODO: any other fields wanted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 190,
    "line": "            todo = [resource]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 191,
    "line": "            while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 192,
    "line": "                resource = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 203,
    "line": "                            todo.append(child)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 401,
    "line": "        # TODO check k, v for valid values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1131,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1133,
    "line": "        todo.append(final)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1134,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1135,
    "line": "            step = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1149,
    "line": "                todo.extend(preds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 267,
    "line": "        TODO: fill this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 516,
    "line": "    # TODO: unintended side-effect on, e.g., \"2003.05.09\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
    "line_number": 839,
    "line": "            # TODO version verification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 502,
    "line": "        # TODO should we eliminate the recursion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 506,
    "line": "                    # TODO check whether we need to call `list_hook`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 514,
    "line": "            # TODO is the interaction between `list_hook` and `use_list` ok?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 519,
    "line": "                    # TODO check whether we need to call hooks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 198,
    "line": "        # TODO: The spec doesn't say anything about if the keys should be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 753,
    "line": "    description: _Validator[str | None] = _Validator()  # TODO 2.1: can be in body"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 29,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 32,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
    "line_number": 379,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 1,
    "line": "# TODO: Add Generic type annotations to initialized collections."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 122,
    "line": "_ResourceStream = Any  # TODO / Incomplete: A readable file-like object"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3308,
    "line": "            # TODO: remove this except clause when python/cpython#103632 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3598,
    "line": "        # TODO: Add a deadline?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
    "line_number": 863,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
    "line_number": 547,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\latex.py",
    "line_number": 334,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\python.py",
    "line_number": 713,
    "line": "        # different tokens.  TODO: DelegatingLexer should support this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\_mapping.py",
    "line_number": 524,
    "line": "    'TodotxtLexer': ('pip._vendor.pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py",
    "line_number": 686,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\text.py",
    "line_number": 561,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\truststore\\_macos.py",
    "line_number": 558,
    "line": "            # TODO: Not sure if we need the SecTrustResultType for anything?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
    "line_number": 199,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py",
    "line_number": 522,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py",
    "line_number": 289,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 659,
    "line": "        # TODO: should I do clean shutdown here? Do I have to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 819,
    "line": "        # TODO: Well, crap."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 829,
    "line": "        # TODO: Update in line with above."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 31,
    "line": "# TODO: In v2 we can remove this sentinel and metaclass with deprecated options."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 261,
    "line": "        # TODO: Deprecated, remove in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 323,
    "line": "        # TODO: If already given in **kw we use what's given to us"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 454,
    "line": "        # TODO: For now favor if the Retry implementation sets its own method_whitelist"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 608,
    "line": "            # TODO: Remove this deprecated alias in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
    "line_number": 402,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\pyparsing\\helpers.py",
    "line_number": 869,
    "line": "        # TODO - determine why this statement can't be included in the following"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\cluster\\hierarchy.py",
    "line_number": 1362,
    "line": "        # TODO ARRAY_API complex indexing not supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\differentiate\\_differentiate.py",
    "line_number": 371,
    "line": "    # TODO (followup):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\differentiate\\_differentiate.py",
    "line_number": 1089,
    "line": "    # todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\fft\\tests\\test_real_transforms.py",
    "line_number": 112,
    "line": "    # TODO write an array-agnostic pad"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\fft\\_pocketfft\\basic.py",
    "line_number": 82,
    "line": "    # TODO: Optimize for hermitian and real?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\fft\\_pocketfft\\basic.py",
    "line_number": 194,
    "line": "    # TODO: Optimize for hermitian and real?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\fft\\_pocketfft\\tests\\test_basic.py",
    "line_number": 867,
    "line": "# TODO: Is this test actually valuable? The behavior it's testing shouldn't be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\integrate\\_tanhsinh.py",
    "line_number": 14,
    "line": "# todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\integrate\\_rules\\_gauss_kronrod.py",
    "line_number": 83,
    "line": "        # TODO: nodes and weights are currently hard-coded for values 15 and 21, but in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\integrate\\_rules\\_gauss_legendre.py",
    "line_number": 56,
    "line": "        # TODO: current converting to/from numpy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\integrate\\_rules\\_genz_malik.py",
    "line_number": 78,
    "line": "        # TODO: Currently only support for degree 7 Genz-Malik cubature, should aim to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\integrate\\_rules\\_genz_malik.py",
    "line_number": 134,
    "line": "        # TODO: Currently only support for the degree 5 lower rule, in the future it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\interpolate\\_fitpack_impl.py",
    "line_number": 19,
    "line": "TODO: Make interfaces to the following fitpack functions:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\io\\_mmio.py",
    "line_number": 504,
    "line": "            a = a.todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\io\\_netcdf.py",
    "line_number": 20,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\io\\arff\\_arffread.py",
    "line_number": 21,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\io\\arff\\_arffread.py",
    "line_number": 842,
    "line": "        # TODO: this is where we are spending time (~80%). I think things"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\io\\_harwell_boeing\\hb.py",
    "line_number": 12,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\linalg\\_basic.py",
    "line_number": 321,
    "line": "        # TODO: wrap gbcon and use to get rcond"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\linalg\\_matfuncs.py",
    "line_number": 205,
    "line": "    # TODO use a better error approximation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\linalg\\_matfuncs_inv_ssq.py",
    "line_number": 38,
    "line": "#TODO renovate or move this class when scipy operators are more mature"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\linalg\\_matfuncs_inv_ssq.py",
    "line_number": 73,
    "line": "#TODO renovate or move this function when SciPy operators are more mature"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\linalg\\tests\\test_lapack.py",
    "line_number": 1939,
    "line": "                # TODO: Add a test for ONB?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_bracket.py",
    "line_number": 156,
    "line": "    # Todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_chandrupatla.py",
    "line_number": 7,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_direct_py.py",
    "line_number": 256,
    "line": "    # TODO: fix disp argument"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_linprog_rs.py",
    "line_number": 72,
    "line": "    # TODO: test redundant row removal better"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_linprog_rs.py",
    "line_number": 73,
    "line": "    # TODO: make solve more efficient with BGLU? This could take a while."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_linprog_rs.py",
    "line_number": 376,
    "line": "        # TODO: cythonize?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_linprog_util.py",
    "line_number": 862,
    "line": "        if rr and A_eq.size > 0:  # TODO: Fast sparse rank check?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_linprog_util.py",
    "line_number": 876,
    "line": "        try:  # TODO: use results of first SVD in _remove_redundancy_svd"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_optimize.py",
    "line_number": 2012,
    "line": "    # TODO: add hessp (callable or FD) to ScalarFunction?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_remove_redundancy.py",
    "line_number": 423,
    "line": "        v = U[:, -1]  # TODO: return these so user can eliminate from problem?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_shgo.py",
    "line_number": 477,
    "line": "        pass  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_shgo.py",
    "line_number": 710,
    "line": "                    # self.n #TODO: Should always be self.n, this is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_shgo.py",
    "line_number": 1170,
    "line": "        # TODO: Only do this if global mode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_shgo.py",
    "line_number": 1496,
    "line": "            # TODO: Uncertain if n_prc needs to add len(self.LMC.xl_maps)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\tests\\test_chandrupatla.py",
    "line_number": 972,
    "line": "        # # TODO: Test zero tolerance"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\tests\\test_differentiable_functions.py",
    "line_number": 782,
    "line": "@pytest.mark.xfail(reason=\"TODO remove reference cycle from VectorFunction\")"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\tests\\test_optimize.py",
    "line_number": 3036,
    "line": "        # TODO this test should really be equivalent to factorized version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\tests\\test__remove_redundancy.py",
    "line_number": 5,
    "line": "# TODO: add tests for:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\tests\\test__shgo.py",
    "line_number": 579,
    "line": "        # TODO: Make default n higher for faster tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\tests\\test__shgo.py",
    "line_number": 715,
    "line": "        # TODO: This test doesn't cover anything new, it is unknown what the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_shgo_lib\\_complex.py",
    "line_number": 1179,
    "line": "            sign_det_A_11 = -1  # TODO: Choose another det of j instead?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_shgo_lib\\_complex.py",
    "line_number": 1180,
    "line": "            # TODO: Unlikely to work in many cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_shgo_lib\\_complex.py",
    "line_number": 1187,
    "line": "            # TODO: Note that scipy might be faster to add as an optional"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_shgo_lib\\_complex.py",
    "line_number": 1191,
    "line": "            # TODO: Note if sign_det_A_j0 == then the point is coplanar to the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_shgo_lib\\_complex.py",
    "line_number": 1217,
    "line": "        # TODO: Is checking the projection of one vertex against faces of other"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_shgo_lib\\_complex.py",
    "line_number": 1220,
    "line": "        # TODO: Literature seems to suggest using proj.T, but why is this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_shgo_lib\\_complex.py",
    "line_number": 1222,
    "line": "        if np.linalg.det(proj) == 0.0:  # TODO: Replace with tolerance?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_trustregion_constr\\projections.py",
    "line_number": 97,
    "line": "    # TODO: Use a symmetric indefinite factorization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_trustregion_constr\\qp_subproblem.py",
    "line_number": 54,
    "line": "    # TODO: Use a symmetric indefinite factorization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\optimize\\_trustregion_constr\\tr_interior_point.py",
    "line_number": 349,
    "line": "        # TODO: Use more advanced strategies from [2]_"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\signal\\_filter_design.py",
    "line_number": 457,
    "line": "                and n_fft > 0):  # TODO: review threshold acc. to benchmark?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\signal\\_filter_design.py",
    "line_number": 1556,
    "line": "    # TODO in the near future:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\signal\\_filter_design.py",
    "line_number": 4668,
    "line": "# TODO: Make this a real public function scipy.misc.ff"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\signal\\_ltisys.py",
    "line_number": 1996,
    "line": "    # TODO: This could use some more work."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\signal\\tests\\test_filter_design.py",
    "line_number": 2242,
    "line": "        # TODO: Why so inaccurate?  Is reference flawed?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\signal\\tests\\test_filter_design.py",
    "line_number": 2247,
    "line": "        # TODO: Why so inaccurate?  Is reference flawed?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\signal\\tests\\test_filter_design.py",
    "line_number": 2257,
    "line": "        # TODO: Why so inaccurate?  Is reference flawed?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\signal\\tests\\test_filter_design.py",
    "line_number": 2262,
    "line": "        # TODO: Why so inaccurate?  Is reference flawed?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\signal\\tests\\test_ltisys.py",
    "line_number": 604,
    "line": "        # TODO: add meaningful test where X0 is a list"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\signal\\tests\\test_ltisys.py",
    "line_number": 676,
    "line": "        # TODO: add meaningful test where X0 is a list"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_base.py",
    "line_number": 1038,
    "line": "    def todok(self, copy=False):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_base.py",
    "line_number": 1044,
    "line": "        return self.tocoo(copy=copy).todok(copy=False)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_bsr.py",
    "line_number": 134,
    "line": "                # TODO infer shape here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_bsr.py",
    "line_number": 343,
    "line": "        # TODO eliminate zeros"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_compressed.py",
    "line_number": 226,
    "line": "        # TODO check for duplicates?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_compressed.py",
    "line_number": 266,
    "line": "            # TODO sparse broadcasting"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_compressed.py",
    "line_number": 302,
    "line": "            # TODO sparse broadcasting"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_compressed.py",
    "line_number": 329,
    "line": "            # TODO sparse broadcasting"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_compressed.py",
    "line_number": 874,
    "line": "        # TODO: don't fall back to fancy indexing here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_compressed.py",
    "line_number": 1141,
    "line": "            # TODO: only sort where necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_construct.py",
    "line_number": 376,
    "line": "    # TODO: delete next 15 lines [combine with _eye()] once spmatrix removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_construct.py",
    "line_number": 496,
    "line": "    # TODO: delete next 10 lines and replace _sparse with _array when spmatrix removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_construct.py",
    "line_number": 582,
    "line": "    # TODO: delete next 8 lines and replace _sparse with _array when spmatrix removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_construct.py",
    "line_number": 639,
    "line": "    # TODO remove this if-structure when sparse matrices removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_coo.py",
    "line_number": 440,
    "line": "    def todok(self, copy=False):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_coo.py",
    "line_number": 454,
    "line": "    todok.__doc__ = _spbase.todok.__doc__"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_coo.py",
    "line_number": 952,
    "line": "        # TODO: Move this logic before computation of prod_coords for efficiency"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_csr.py",
    "line_number": 229,
    "line": "        # TODO: uncomment this once it's faster:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_data.py",
    "line_number": 18,
    "line": "# TODO implement all relevant operations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_dok.py",
    "line_number": 33,
    "line": "                arg1 = arg1.todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_dok.py",
    "line_number": 56,
    "line": "                d = self._coo_container(arg1, shape=shape, dtype=dtype).todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_dok.py",
    "line_number": 480,
    "line": "    def todok(self, copy=False):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_dok.py",
    "line_number": 485,
    "line": "    todok.__doc__ = _spbase.todok.__doc__"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_dok.py",
    "line_number": 497,
    "line": "            # TODO implement resize across dimensions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_dok.py",
    "line_number": 571,
    "line": "            with another sparse array or matrix S (equivalent to S.todok())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_dok.py",
    "line_number": 624,
    "line": "            with another sparse array or matrix S (equivalent to S.todok())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_index.py",
    "line_number": 225,
    "line": "                # TODO: make sparse matrix indexing work for sparray"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\_index.py",
    "line_number": 289,
    "line": "            # TODO: handle this for nD (adjacent arrays stay, separated move to start)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\linalg\\tests\\test_onenormest.py",
    "line_number": 145,
    "line": "        #TODO this test seems to give estimates that match the table,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\linalg\\tests\\test_onenormest.py",
    "line_number": 146,
    "line": "        #TODO even though no attempt has been made to deal with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\linalg\\tests\\test_onenormest.py",
    "line_number": 147,
    "line": "        #TODO complex numbers in the one-norm estimation."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\linalg\\_eigen\\tests\\test_svds.py",
    "line_number": 626,
    "line": "            # TODO: arpack crashes when v0=v0, which=\"SM\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\linalg\\_isolve\\minres.py",
    "line_number": 357,
    "line": "            break  # TODO check this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\linalg\\_isolve\\tests\\test_iterative.py",
    "line_number": 20,
    "line": "# TODO check that method preserve shape and type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\linalg\\_isolve\\tests\\test_iterative.py",
    "line_number": 21,
    "line": "# TODO test both preconditioner methods"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\linalg\\_isolve\\tests\\test_iterative.py",
    "line_number": 366,
    "line": "    # TODO: minres / tfqmr. It didn't historically use absolute tolerances, so"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\linalg\\_isolve\\tests\\test_iterative.py",
    "line_number": 369,
    "line": "        pytest.skip(\"TODO: Add atol to minres/tfqmr\")"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_base.py",
    "line_number": 295,
    "line": "# TODO test prune"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_base.py",
    "line_number": 296,
    "line": "# TODO test has_sorted_indices"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_base.py",
    "line_number": 1686,
    "line": "            # Todo: Add 1+3j to tested exponent list when np1.24 is no longer supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_base.py",
    "line_number": 2183,
    "line": "            assert_array_equal(spm.todok().toarray(), m)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_base.py",
    "line_number": 4602,
    "line": "        # TODO: properly handle this assertion on ppc64le"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_base.py",
    "line_number": 4799,
    "line": "    def test_todok_duplicates(self):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_base.py",
    "line_number": 4801,
    "line": "        dok = coo.todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_base.py",
    "line_number": 5249,
    "line": "        # TODO check that NC has duplicates (which are not explicit zeros)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_base.py",
    "line_number": 5389,
    "line": "#Todo: Revisit 64bit tests: avoid rerun of all tests for each version of get_index_dtype"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_construct.py",
    "line_number": 23,
    "line": "#TODO check whether format=XXX is respected"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_construct.py",
    "line_number": 450,
    "line": "        assert_equal(construct.vstack([A.todok(), B.todok()]).toarray(), expected)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_construct.py",
    "line_number": 529,
    "line": "        assert_equal(construct.hstack([A.todok(), B.todok()]).toarray(), expected)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_coo.py",
    "line_number": 226,
    "line": "    for f in [res.tocoo, res.tocsr, res.todok]:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\sparse\\tests\\test_spfuncs.py",
    "line_number": 16,
    "line": "        #TODO expose through function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\special\\_lambertw.py",
    "line_number": 146,
    "line": "    # TODO: special expert should inspect this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\special\\tests\\test_sf_error.py",
    "line_number": 33,
    "line": "    # TODO: special expert should correct"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_axis_nan_policy.py",
    "line_number": 166,
    "line": "# TODO: add support for `axis` tuples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_correlation.py",
    "line_number": 10,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_distribution_infrastructure.py",
    "line_number": 41,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_distribution_infrastructure.py",
    "line_number": 316,
    "line": "        # TODO: ensure outputs are floats"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_distribution_infrastructure.py",
    "line_number": 1201,
    "line": "    # TODO: properly avoid NaN when y is negative infinity"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_distribution_infrastructure.py",
    "line_number": 1202,
    "line": "    # TODO: silence warning with taking log of complex nan"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_distribution_infrastructure.py",
    "line_number": 1203,
    "line": "    # TODO: deal with x == y better"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_distribution_infrastructure.py",
    "line_number": 2867,
    "line": "    # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_distribution_infrastructure.py",
    "line_number": 3300,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_distribution_infrastructure.py",
    "line_number": 3798,
    "line": "    # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_distribution_infrastructure.py",
    "line_number": 4441,
    "line": "    # Todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_morestats.py",
    "line_number": 2579,
    "line": "    # TODO: calculate exact distribution considering ties"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_mstats_basic.py",
    "line_number": 2406,
    "line": "        n = (~a.mask).sum()  # todo: better way to do that?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_page_trend_test.py",
    "line_number": 317,
    "line": "    if ranks.ndim != 2:  # TODO: relax this to accept 3d arrays?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_qmc.py",
    "line_number": 453,
    "line": "        # TODO consider returning both the mean and the standard deviation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_continuous.py",
    "line_number": 816,
    "line": "    # TODO: add `supported` method and check here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_distributions.py",
    "line_number": 5759,
    "line": "        # These are excluded by the filters below. TODO: Rewrite tests so that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_fast_gen_inversion.py",
    "line_number": 144,
    "line": "# TODO: add more distributions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_morestats.py",
    "line_number": 2327,
    "line": "    # TODO: add method \"pearsonr\" after fix overflow issue"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_morestats.py",
    "line_number": 2347,
    "line": "    # TODO: add method \"pearsonr\" after fix overflow issue"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_mstats_basic.py",
    "line_number": 1260,
    "line": "# TODO: for all ttest functions, add tests with masked array inputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_mstats_extras.py",
    "line_number": 26,
    "line": "    # Check that `var` keyword returns a value.  TODO: check whether returned"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_mstats_extras.py",
    "line_number": 43,
    "line": "    # TODO: check that implementation is correct."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_stats.py",
    "line_number": 84,
    "line": "    # TODO: write these tests to handle missing values properly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_stats.py",
    "line_number": 2250,
    "line": "    # TODO: remove this test once single-arg support is dropped;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_stats.py",
    "line_number": 2265,
    "line": "    # TODO: remove this test once single-arg support is dropped;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\tests\\test_stats.py",
    "line_number": 2278,
    "line": "    # TODO: remove this test once single-arg support is dropped;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_levy_stable\\__init__.py",
    "line_number": 193,
    "line": "    # TODO: add more where possible with test coverage,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\stats\\_levy_stable\\__init__.py",
    "line_number": 321,
    "line": "    # TODO: add more where possible with test coverage,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\_docscrape.py",
    "line_number": 632,
    "line": "            from sphinx.ext.autodoc import ALL"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\common\\_aliases.py",
    "line_number": 282,
    "line": "    # TODO: The standard is not clear about what should happen when x.ndim == 0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\common\\_aliases.py",
    "line_number": 309,
    "line": "    # TODO: np.clip has other ufunc kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\common\\_helpers.py",
    "line_number": 62,
    "line": "    # TODO: Should we reject ndarray subclasses?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\common\\_helpers.py",
    "line_number": 93,
    "line": "    # TODO: Should we reject ndarray subclasses?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\common\\_helpers.py",
    "line_number": 120,
    "line": "    # TODO: Should we reject ndarray subclasses?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\common\\_helpers.py",
    "line_number": 231,
    "line": "    # TODO: Account for other backends."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\common\\_helpers.py",
    "line_number": 559,
    "line": "            # TODO: Support Python scalars?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\common\\_helpers.py",
    "line_number": 772,
    "line": "        # TODO: What if our array is on the GPU already?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\cupy\\_info.py",
    "line_number": 171,
    "line": "        # TODO: Does this depend on device?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\cupy\\_info.py",
    "line_number": 233,
    "line": "        # TODO: Does this depend on device?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\dask\\array\\linalg.py",
    "line_number": 36,
    "line": "# TODO: use the QR wrapper once dask"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\dask\\array\\linalg.py",
    "line_number": 60,
    "line": "    # TODO: can't avoid computing U or V for dask"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\dask\\array\\_aliases.py",
    "line_number": 50,
    "line": "# TODO: delete the xp stuff, it shouldn't be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\scipy\\_lib\\array_api_compat\\dask\\array\\_aliases.py",
    "line_number": 184,
    "line": "    # TODO: This won't handle dask unknown shapes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 158,
    "line": "        # TODO: Replace with `raise ValueError(\"newlines not allowed\")`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\__init__.py",
    "line_number": 179,
    "line": "           TODO: This method seems to be similar to the one in ``distutils.cmd``"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\command\\dist_info.py",
    "line_number": 103,
    "line": "        # TODO: if bdist_wheel if merged into setuptools, just add \"keep_egg_info\" there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1123,
    "line": "        extras = ''  # TODO: self.report_extras(req, dist)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1722,
    "line": "    # TODO: This code doesn't make sense. What is it trying to do?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 69,
    "line": "    COMPAT = \"compat\"  # TODO: Remove `compat` after Dec/2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 279,
    "line": "        # TODO: Once plugins/customisations had the chance to catch up, replace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\command\\install_lib.py",
    "line_number": 54,
    "line": "        # TODO: is it necessary to short-circuit here? i.e. what's the cost"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 106,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 128,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 131,
    "line": "        # TODO: After the previous statement is removed the try/except can be replaced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 369,
    "line": "                # TODO: Don't set field when support for pyproject.toml stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
    "line_number": 96,
    "line": "    # TODO: Set fields back to `None` once the feature stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 33,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 41,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must be object\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 46,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must contain ['requires'] properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 71,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path must be array\", value=data__buildsystem__backendpath, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path\", definition={'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 77,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \" must be string\", value=data__buildsystem__backendpath_item, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \"\", definition={'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 79,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must not contain \"+str(data__buildsystem_keys)+\" properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 88,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".tool must be object\", value=data__tool, name=\"\" + (name_prefix or \"data\") + \".tool\", definition={'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 101,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 106,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 158,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".script-files must be array\", value=data__scriptfiles, name=\"\" + (name_prefix or \"data\") + \".script-files\", definition={'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 360,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".py-modules must be array\", value=data__pymodules, name=\"\" + (name_prefix or \"data\") + \".py-modules\", definition={'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 411,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".license-files must be array\", value=data__licensefiles, name=\"\" + (name_prefix or \"data\") + \".license-files\", definition={'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 517,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 635,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 654,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 659,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must contain ['name'] properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 695,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be object\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 733,
    "line": "                            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must contain ['content-type'] properties\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 739,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme.content-type must be string\", value=data__readme__contenttype, name=\"\" + (name_prefix or \"data\") + \".readme.content-type\", definition={'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 743,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be valid exactly by one definition\" + (\" (\" + str(data__readme_one_of_count8) + \" matches found)\"), value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, rule='oneOf')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 940,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\skimage\\conftest.py",
    "line_number": 11,
    "line": "    # TODO: remove when we require numpy >= 2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\skimage\\color\\colorconv.py",
    "line_number": 67,
    "line": "# TODO: when minimum numpy dependency is 1.25 use:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\skimage\\color\\tests\\test_colorconv.py",
    "line_number": 59,
    "line": "# TODO: when minimum numpy dependency is 1.25 use:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\skimage\\draw\\_random_shapes.py",
    "line_number": 111,
    "line": "    # TODO: think about how to deprecate this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\skimage\\feature\\censure.py",
    "line_number": 101,
    "line": "        # TODO : Decide the shapes of Octagon filters for scales > 7"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\skimage\\measure\\_blur_effect.py",
    "line_number": 7,
    "line": "# TODO: when minimum numpy dependency is 1.25 use:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\skimage\\measure\\tests\\test_moments.py",
    "line_number": 245,
    "line": "    # TODO: np 2 failed w/ thresh = 1e-4"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\skimage\\morphology\\footprints.py",
    "line_number": 962,
    "line": "    # TODO?: warn about even footprint size when m is even"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\skimage\\restoration\\uft.py",
    "line_number": 406,
    "line": "    # TODO: remove .astype call once SciPy >= 1.4 is required"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\skimage\\util\\tests\\test_montage.py",
    "line_number": 7,
    "line": "# TODO: when minimum numpy dependency is 1.25 use:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\skimage\\_shared\\utils.py",
    "line_number": 447,
    "line": "            # TODO: convert scalars to a tuple in anticipation of eventually"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 392,
    "line": "    # TODO(1.7): Remove this method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 407,
    "line": "    # TODO(1.7): Remove this method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 472,
    "line": "    # TODO(1.7): Remove this method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 482,
    "line": "    # TODO(1.7): Remove this method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 491,
    "line": "    # TODO(1.7): Remove this method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 536,
    "line": "    # TODO(1.8): Remove this attribute"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 609,
    "line": "    # TODO(1.8): Remove this attribute"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 685,
    "line": "    # TODO(1.8): Remove this attribute"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 1038,
    "line": "    # TODO(1.8): Remove this attribute"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 1088,
    "line": "    # TODO(1.8): Remove this attribute"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 1228,
    "line": "    # TODO(1.8): Remove this check"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 1268,
    "line": "    # TODO(1.8): Remove this check"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 1310,
    "line": "    # TODO(1.8): Remove this check"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\base.py",
    "line_number": 1335,
    "line": "    # TODO(1.8): Remove this check"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\calibration.py",
    "line_number": 332,
    "line": "            # TODO(1.8): Remove this code branch and cv='prefit'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\calibration.py",
    "line_number": 845,
    "line": "        # TODO: Remove casting to np.float64 when minimum supported SciPy is 1.11.2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\conftest.py",
    "line_number": 206,
    "line": "        # TODO: configure numpy to output scalar arrays as regular Python scalars"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\discriminant_analysis.py",
    "line_number": 116,
    "line": "        # TODO: Explore the choice of using bincount + add.at as it seems sub optimal"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\isotonic.py",
    "line_number": 164,
    "line": "        # TODO: remove this branch when Scipy 1.12 is the minimum supported version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\multioutput.py",
    "line_number": 749,
    "line": "            # TODO: remove this condition check when the minimum supported scipy version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 51,
    "line": "    TODO(1.8): remove this context manager and replace with check_is_fitted."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 407,
    "line": "    # TODO(1.8): Remove this property"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 781,
    "line": "        # TODO(1.8): Remove the context manager and use check_is_fitted(self)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 897,
    "line": "        # TODO(1.8): Remove the context manager and use check_is_fitted(self)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 944,
    "line": "        # TODO(1.8): Remove the context manager and use check_is_fitted(self)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 982,
    "line": "        # TODO(1.8): Remove the context manager and use check_is_fitted(self)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 1028,
    "line": "        # TODO(1.8): Remove the context manager and use check_is_fitted(self)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 1083,
    "line": "        # TODO(1.8): Remove the context manager and use check_is_fitted(self)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 1137,
    "line": "        # TODO(1.8): Remove the context manager and use check_is_fitted(self)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 1190,
    "line": "        # TODO(1.8): Remove the context manager and use check_is_fitted(self)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 1914,
    "line": "            # TODO(SLEP6): remove when metadata routing cannot be disabled."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 1963,
    "line": "            # TODO(SLEP6): remove when metadata routing cannot be disabled."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\pipeline.py",
    "line_number": 2036,
    "line": "            # TODO(SLEP6): remove when metadata routing cannot be disabled."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cluster\\_feature_agglomeration.py",
    "line_number": 29,
    "line": "    # TODO(1.7): remove when Xt is removed for inverse_transform."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cluster\\_optics.py",
    "line_number": 623,
    "line": "    # TODO: handle working_memory somehow?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cluster\\tests\\test_affinity_propagation.py",
    "line_number": 30,
    "line": "# TODO: AffinityPropagation must preserve dtype for its fitted attributes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cluster\\tests\\test_birch.py",
    "line_number": 245,
    "line": "# TODO(1.8): Remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cluster\\tests\\test_feature_agglomeration.py",
    "line_number": 61,
    "line": "# TODO(1.7): remove this test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cluster\\_hdbscan\\hdbscan.py",
    "line_number": 783,
    "line": "                # TODO: Support np.nan in Cython implementation for precomputed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cluster\\_hdbscan\\hdbscan.py",
    "line_number": 845,
    "line": "                # TODO: Benchmark KD vs Ball Tree efficiency"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cluster\\_hdbscan\\hdbscan.py",
    "line_number": 949,
    "line": "                # TODO: Implement weighted argmin PWD backend"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\compose\\_column_transformer.py",
    "line_number": 1264,
    "line": "        TODO: Remove when ``set_config(enable_metadata_routing=False)`` is no"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\compose\\_column_transformer.py",
    "line_number": 1665,
    "line": "        # TODO(1.7) Update the warning to say that the old behavior will be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\compose\\tests\\test_column_transformer.py",
    "line_number": 947,
    "line": "# TODO(1.7): check for deprecated force_int_remainder_cols"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\compose\\tests\\test_column_transformer.py",
    "line_number": 948,
    "line": "# TODO(1.9): remove force_int but keep the test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\compose\\tests\\test_column_transformer.py",
    "line_number": 977,
    "line": "# TODO(1.7): check for deprecated force_int_remainder_cols"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\compose\\tests\\test_column_transformer.py",
    "line_number": 978,
    "line": "# TODO(1.9): remove force_int but keep the test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cross_decomposition\\_pls.py",
    "line_number": 164,
    "line": "# TODO(1.7): Remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cross_decomposition\\_pls.py",
    "line_number": 179,
    "line": "# TODO(1.7): Remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cross_decomposition\\tests\\test_pls.py",
    "line_number": 680,
    "line": "# TODO(1.7): Remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cross_decomposition\\tests\\test_pls.py",
    "line_number": 706,
    "line": "# TODO(1.7): Remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\cross_decomposition\\tests\\test_pls.py",
    "line_number": 729,
    "line": "# TODO(1.7): Remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\datasets\\_arff_parser.py",
    "line_number": 67,
    "line": "    # TODO: improve for efficiency"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\datasets\\_openml.py",
    "line_number": 340,
    "line": "        # TODO: feature request OpenML."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\datasets\\_svmlight_format_io.py",
    "line_number": 553,
    "line": "    # TODO We can do this cheaper; sorted_indices copies the whole matrix."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\datasets\\_svmlight_format_io.py",
    "line_number": 572,
    "line": "        # TODO: simplify interfaces and implementations in _svmlight_format_fast.pyx."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\decomposition\\_dict_learning.py",
    "line_number": 142,
    "line": "        # TODO: Make verbosity argument for Lasso?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\decomposition\\_dict_learning.py",
    "line_number": 158,
    "line": "            # TODO: move this handling (which is currently too broad)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\decomposition\\_lda.py",
    "line_number": 462,
    "line": "        # TODO: make Parallel._effective_n_jobs public instead?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\decomposition\\_nmf.py",
    "line_number": 1140,
    "line": "    # TODO(1.7): remove when Xt is removed in v1.7 for inverse_transform"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\decomposition\\_pca.py",
    "line_number": 566,
    "line": "        # TODO: remove the following two lines when scikit-learn only depends"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\decomposition\\_pca.py",
    "line_number": 619,
    "line": "            # TODO: remove the following two lines when scikit-learn only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\decomposition\\_pca.py",
    "line_number": 780,
    "line": "        # TODO: update this code to either:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\decomposition\\tests\\test_nmf.py",
    "line_number": 922,
    "line": "# TODO(1.7): remove this test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\decomposition\\tests\\test_nmf.py",
    "line_number": 1020,
    "line": "        # TODO: use the provided W when init=\"custom\"."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\decomposition\\tests\\test_pca.py",
    "line_number": 615,
    "line": "    # TODO: explain what this is testing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\decomposition\\tests\\test_pca.py",
    "line_number": 632,
    "line": "    # TODO: explain what this is testing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_bagging.py",
    "line_number": 118,
    "line": "    # TODO: (slep6) remove if condition for unrouted sample_weight when metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_bagging.py",
    "line_number": 157,
    "line": "        # TODO(SLEP6): remove if condition for unrouted sample_weight when metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_bagging.py",
    "line_number": 330,
    "line": "    # TODO(1.7): remove `sample_weight` from the signature after deprecation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_base.py",
    "line_number": 23,
    "line": "    # TODO(SLEP6): remove if-condition for unrouted sample_weight when metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_gb.py",
    "line_number": 108,
    "line": "    # TODO: Use loss.fit_intercept_only where appropriate instead of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_gb.py",
    "line_number": 257,
    "line": "            # TODO: Multiply here by learning rate instead of everywhere else."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_gb.py",
    "line_number": 449,
    "line": "        # TODO: Without oob, i.e. with self.subsample = 1.0, we could call"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_gb.py",
    "line_number": 672,
    "line": "        y = column_or_1d(y, warn=True)  # TODO: Is this still required?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_stacking.py",
    "line_number": 660,
    "line": "    # TODO(1.7): remove `sample_weight` from the signature after deprecation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_stacking.py",
    "line_number": 756,
    "line": "            # TODO(SLEP6): remove when metadata routing cannot be disabled."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_stacking.py",
    "line_number": 1023,
    "line": "    # TODO(1.7): remove `sample_weight` from the signature after deprecation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_stacking.py",
    "line_number": 1081,
    "line": "    # TODO(1.7): remove `sample_weight` from the signature after deprecation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_stacking.py",
    "line_number": 1159,
    "line": "            # TODO(SLEP6): remove when metadata routing cannot be disabled."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_voting.py",
    "line_number": 355,
    "line": "    # TODO(1.7): remove `sample_weight` from the signature after deprecation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_voting.py",
    "line_number": 660,
    "line": "    # TODO(1.7): remove `sample_weight` from the signature after deprecation cycle;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_weight_boosting.py",
    "line_number": 490,
    "line": "    # TODO(1.8): remove \"algorithm\" entry"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\tests\\test_voting.py",
    "line_number": 316,
    "line": "# TODO(1.7): remove warning filter when sample_weight is kwarg only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\tests\\test_weight_boosting.py",
    "line_number": 635,
    "line": "# TODO(1.8): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\binning.py",
    "line_number": 326,
    "line": "        # TODO: complexity is O(n_categorical_features * 255). Maybe this is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\gradient_boosting.py",
    "line_number": 90,
    "line": "    # TODO: Ideally this should be computed in parallel over the leaves using something"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\gradient_boosting.py",
    "line_number": 125,
    "line": "    TODO: in the future, we could explore the possibility to extend the scorer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\gradient_boosting.py",
    "line_number": 546,
    "line": "            # TODO: remove when PDP supports sample weights"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\gradient_boosting.py",
    "line_number": 626,
    "line": "                # TODO: incorporate sample_weight in sampling here, as well as"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\gradient_boosting.py",
    "line_number": 1029,
    "line": "        # TODO: incorporate sample_weights here in `resample`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\gradient_boosting.py",
    "line_number": 2143,
    "line": "        # TODO: This could be done in parallel"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\predictor.py",
    "line_number": 140,
    "line": "        # TODO: consider always using platform agnostic dtypes for fitted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\tests\\test_compare_lightgbm.py",
    "line_number": 15,
    "line": "# TODO(1.8) remove the filterwarnings decorator"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\tests\\test_compare_lightgbm.py",
    "line_number": 107,
    "line": "        # TODO: We are not entirely satisfied with this lax comparison, but the root"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\tests\\test_compare_lightgbm.py",
    "line_number": 125,
    "line": "# TODO(1.8) remove the filterwarnings decorator"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\ensemble\\_hist_gradient_boosting\\tests\\test_compare_lightgbm.py",
    "line_number": 202,
    "line": "# TODO(1.8) remove the filterwarnings decorator"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\feature_selection\\_from_model.py",
    "line_number": 370,
    "line": "                # TODO(SLEP6): remove when metadata routing cannot be disabled."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\feature_selection\\_from_model.py",
    "line_number": 454,
    "line": "            # TODO(SLEP6): remove when metadata routing cannot be disabled."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\feature_selection\\_rfe.py",
    "line_number": 225,
    "line": "    # TODO(1.8) remove this property"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\feature_selection\\_rfe.py",
    "line_number": 767,
    "line": "    # TODO(1.8): remove `groups` from the signature after deprecation cycle."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\feature_selection\\_univariate_selection.py",
    "line_number": 373,
    "line": "        # TODO: for Scipy <= 1.10, `isspmatrix(X)` returns `True` for sparse arrays."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\feature_selection\\_univariate_selection.py",
    "line_number": 1061,
    "line": "# TODO this class should fit on either p-values or scores,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\feature_selection\\tests\\test_feature_select.py",
    "line_number": 2,
    "line": "Todo: cross-check the F-value with stats model"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\_base.py",
    "line_number": 466,
    "line": "            # TODO(1.8): Remove FutureWarning and add `np.nan` as a statistic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\_base.py",
    "line_number": 569,
    "line": "            # TODO(1.8): Remove FutureWarning and add `np.nan` as a statistic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\_iterative.py",
    "line_number": 640,
    "line": "        # TODO (1.8): remove this once the deprecation is removed. In the meantime,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\_iterative.py",
    "line_number": 654,
    "line": "            # TODO (1.8): remove this once the deprecation is removed to keep only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\_iterative.py",
    "line_number": 663,
    "line": "            # TODO (1.8): remove this once the deprecation is removed to keep only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\_iterative.py",
    "line_number": 684,
    "line": "                # TODO (1.8): remove this `if` branch once the following issue is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\__init__.py",
    "line_number": 13,
    "line": "    # TODO: remove this check once the estimator is no longer experimental."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\__init__.py",
    "line_number": 19,
    "line": "# TODO: remove this check once the estimator is no longer experimental."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\tests\\test_impute.py",
    "line_number": 413,
    "line": "# TODO (1.8): check that `keep_empty_features=False` drop the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\tests\\test_impute.py",
    "line_number": 429,
    "line": "# TODO (1.8): check that `keep_empty_features=False` drop the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\tests\\test_impute.py",
    "line_number": 459,
    "line": "# TODO (1.8): check that `keep_empty_features=False` drop the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\tests\\test_impute.py",
    "line_number": 495,
    "line": "# TODO (1.8): check that `keep_empty_features=False` drop the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\tests\\test_impute.py",
    "line_number": 1550,
    "line": "# TODO (1.8): check that `keep_empty_features=False` drop the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\impute\\tests\\test_impute.py",
    "line_number": 1761,
    "line": "        # TODO(1.8): Remove the condition and still call getattr(imputer, method)(X)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\inspection\\_partial_dependence.py",
    "line_number": 90,
    "line": "    # TODO: we should handle missing values (i.e. `np.nan`) specifically and store them"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\inspection\\tests\\test_partial_dependence.py",
    "line_number": 597,
    "line": "    # TODO: extend to HistGradientBoosting once sample_weight is supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\inspection\\tests\\test_partial_dependence.py",
    "line_number": 620,
    "line": "    # TODO: remove/fix when PDP supports HGBT with sample weights"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\inspection\\_plot\\tests\\test_boundary_decision_display.py",
    "line_number": 580,
    "line": "    # TODO: remove this test when we handle multiclass with class_of_interest=None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_base.py",
    "line_number": 46,
    "line": "# TODO: bayesian_ridge_regression and bayesian_regression_ard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_base.py",
    "line_number": 153,
    "line": "        Always an array of ones. TODO: refactor the code base to make it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_base.py",
    "line_number": 204,
    "line": "# TODO: _rescale_data should be factored into _preprocess_data."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_base.py",
    "line_number": 813,
    "line": "            # TODO: instead of warning and recomputing, we could just center"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_least_angle.py",
    "line_number": 813,
    "line": "        # TODO: better names for these variables: z"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_least_angle.py",
    "line_number": 870,
    "line": "                # TODO: this could be updated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_least_angle.py",
    "line_number": 882,
    "line": "                # Cov_n = Cov_j + x_j * X + increment(betas) TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_least_angle.py",
    "line_number": 888,
    "line": "                # TODO: this could be updated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_linear_loss.py",
    "line_number": 16,
    "line": "    # TODO: This \"sandwich product\" is the main computational bottleneck for solvers"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_logistic.py",
    "line_number": 1234,
    "line": "        # TODO(1.7) remove multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_logistic.py",
    "line_number": 1336,
    "line": "        # TODO: Refactor this to avoid joblib parallelism entirely when doing binary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_logistic.py",
    "line_number": 1895,
    "line": "        # TODO(1.7) remove multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_omp.py",
    "line_number": 1065,
    "line": "            # TODO(SLEP6): remove when metadata routing cannot be disabled."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_ransac.py",
    "line_number": 322,
    "line": "    # TODO(1.7): remove `sample_weight` from the signature after deprecation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_ridge.py",
    "line_number": 2376,
    "line": "        # TODO(1.7): Remove in 1.7"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_ridge.py",
    "line_number": 2535,
    "line": "    # TODO(1.7): Remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_stochastic_gradient.py",
    "line_number": 601,
    "line": "            # TODO(1.7) remove 0 from average parameter constraint"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_stochastic_gradient.py",
    "line_number": 686,
    "line": "        # TODO(1.7) remove 0 from average parameter constraint"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_stochastic_gradient.py",
    "line_number": 1481,
    "line": "            # TODO(1.7) remove 0 from average parameter constraint"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_stochastic_gradient.py",
    "line_number": 1568,
    "line": "        # TODO(1.7) remove 0 from average parameter constraint"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_stochastic_gradient.py",
    "line_number": 2391,
    "line": "            # TODO(1.7) remove 0 from average parameter constraint"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_stochastic_gradient.py",
    "line_number": 2491,
    "line": "        # TODO(1.7) remove 0 from average parameter constraint"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_common.py",
    "line_number": 66,
    "line": "        # TODO: FIx SAGA which fails badly with sample_weights."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_least_angle.py",
    "line_number": 29,
    "line": "# TODO: use another dataset that has multiple drops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_least_angle.py",
    "line_number": 120,
    "line": "# TODO: remove warning filter when numpy min version >= 2.0.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_least_angle.py",
    "line_number": 132,
    "line": "# TODO: remove warning filter when numpy min version >= 2.0.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 151,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 200,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 252,
    "line": "# TODO(1.7): remove whole test with deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 277,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 617,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 703,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 1306,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 1350,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 1483,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 1743,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 1791,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 1830,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 1960,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 2131,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 2176,
    "line": "# TODO(1.7): remove filterwarnings after the deprecation of multi_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_logistic.py",
    "line_number": 2354,
    "line": "# TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_passive_aggressive.py",
    "line_number": 271,
    "line": "# TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_ridge.py",
    "line_number": 2233,
    "line": "# TODO(1.7): Remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_sag.py",
    "line_number": 490,
    "line": "    # TODO: uncomment when sparse Ridge with intercept will be fixed (#4710)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_sgd.py",
    "line_number": 2168,
    "line": "# TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\tests\\test_theil_sen.py",
    "line_number": 298,
    "line": "# TODO(1.8): Remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_glm\\glm.py",
    "line_number": 229,
    "line": "        # TODO: if alpha=0 check that X is not rank deficient"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_glm\\glm.py",
    "line_number": 399,
    "line": "        # TODO: Adapt link to User Guide in the docstring, once"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_glm\\glm.py",
    "line_number": 403,
    "line": "        # TODO: make D^2 a score function in module metrics (and thereby get"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\linear_model\\_glm\\_newton_solver.py",
    "line_number": 397,
    "line": "            # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\_spectral_embedding.py",
    "line_number": 95,
    "line": "        # TODO(jjerphan): Once SciPy 1.11.3 is the minimum supported version, use"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\_t_sne.py",
    "line_number": 830,
    "line": "        max_iter=None,  # TODO(1.7): set to 1000"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\_t_sne.py",
    "line_number": 1155,
    "line": "        # TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\tests\\test_isomap.py",
    "line_number": 148,
    "line": "    # TODO check that it actually does something useful"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\tests\\test_isomap.py",
    "line_number": 234,
    "line": "    # TODO: compare results on dense and sparse data as proposed in:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\tests\\test_locally_linear.py",
    "line_number": 48,
    "line": "    # TODO: rewrite this test to make less sensitive to the random seed,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\tests\\test_locally_linear.py",
    "line_number": 121,
    "line": "    # TODO check that it actually does something useful"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\tests\\test_spectral_embedding.py",
    "line_number": 106,
    "line": "# TODO: investigate why this test is seed-sensitive on 32-bit Python"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\tests\\test_t_sne.py",
    "line_number": 340,
    "line": "    # TODO: compare results on dense and sparse data as proposed in:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\tests\\test_t_sne.py",
    "line_number": 1067,
    "line": "        # TODO: re-enable this test if/when `manhattan_distances` is refactored to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\tests\\test_t_sne.py",
    "line_number": 1189,
    "line": "# TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\manifold\\tests\\test_t_sne.py",
    "line_number": 1200,
    "line": "# TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\pairwise.py",
    "line_number": 398,
    "line": "    TODO: use a float64 accumulator in row_norms to avoid the latter."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\pairwise.py",
    "line_number": 1174,
    "line": "    # TODO: remove the xp.asarray calls once the following is fixed:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\pairwise.py",
    "line_number": 1985,
    "line": "        # TODO: do it also for other norms."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_classification.py",
    "line_number": 3275,
    "line": "    # TODO(1.7): remove in 1.7 and reset y_proba to be required"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_ranking.py",
    "line_number": 987,
    "line": "    # TODO(1.7): remove in 1.7 and reset y_score to be required"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_regression.py",
    "line_number": 1106,
    "line": "        # TODO: update once Array API support is added to explained_variance_score."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_scorer.py",
    "line_number": 223,
    "line": "        # TODO (1.8): remove in 1.8 (scoring=\"max_error\" has been deprecated in 1.6)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_scorer.py",
    "line_number": 276,
    "line": "        # TODO (1.8): remove in 1.8 (scoring=\"max_error\" has been deprecated in 1.6)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_scorer.py",
    "line_number": 436,
    "line": "                # TODO (1.8): scoring=\"max_error\" has been deprecated in 1.6,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_scorer.py",
    "line_number": 714,
    "line": "# TODO (1.8): remove in 1.8 (scoring=\"max_error\" has been deprecated in 1.6)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_classification.py",
    "line_number": 2878,
    "line": "# TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_common.py",
    "line_number": 366,
    "line": "# TODO: Handle multi_class metrics that has a labels argument as well as a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_common.py",
    "line_number": 947,
    "line": "            # TODO those metrics doesn't support string label yet"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_dist_metrics.py",
    "line_number": 80,
    "line": "            # TODO: Inspect slight numerical discrepancy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_dist_metrics.py",
    "line_number": 84,
    "line": "        # TODO: Remove when scipy minimum version >= 1.7.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_dist_metrics.py",
    "line_number": 171,
    "line": "            # TODO: Inspect slight numerical discrepancy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_dist_metrics.py",
    "line_number": 175,
    "line": "        # TODO: Remove when scipy minimum version >= 1.7.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_pairwise.py",
    "line_number": 179,
    "line": "        # TODO Fix manhattan_distances to preserve dtype."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_pairwise.py",
    "line_number": 190,
    "line": "        # TODO Fix manhattan_distances to preserve dtype."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_pairwise.py",
    "line_number": 1672,
    "line": "# TODO(1.8): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_pairwise_distances_reduction.py",
    "line_number": 709,
    "line": "    # TODO: support CSR matrices without non-zeros elements"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_pairwise_distances_reduction.py",
    "line_number": 716,
    "line": "    # TODO: support CSR matrices with int64 indices and indptr"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_pairwise_distances_reduction.py",
    "line_number": 913,
    "line": "    # TODO: introduce assertions on UserWarnings once the Euclidean specialisation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_ranking.py",
    "line_number": 876,
    "line": "# TODO(1.7): Update test to check for error when bytes support is removed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_ranking.py",
    "line_number": 2253,
    "line": "# TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_score_objects.py",
    "line_number": 1359,
    "line": "    # TODO: remove when enable_metadata_routing is deprecated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_score_objects.py",
    "line_number": 1371,
    "line": "    # TODO: remove when enable_metadata_routing is deprecated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\tests\\test_score_objects.py",
    "line_number": 1629,
    "line": "# TODO(1.8): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_pairwise_distances_reduction\\_dispatcher.py",
    "line_number": 80,
    "line": "            # TODO: implement a stable simultaneous_sort."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_pairwise_distances_reduction\\_dispatcher.py",
    "line_number": 128,
    "line": "                # TODO: support CSR matrices without non-zeros elements"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_pairwise_distances_reduction\\_dispatcher.py",
    "line_number": 131,
    "line": "                # TODO: support CSR matrices with int64 indices and indptr"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_pairwise_distances_reduction\\_dispatcher.py",
    "line_number": 476,
    "line": "            # TODO: implement Euclidean specialization using GEMM."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\metrics\\_pairwise_distances_reduction\\_dispatcher.py",
    "line_number": 644,
    "line": "            # TODO: implement Euclidean specialization using GEMM."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\_search.py",
    "line_number": 480,
    "line": "    # TODO(1.8) remove this property"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py",
    "line_number": 61,
    "line": "    # TODO(SLEP6): To be removed when set_config(enable_metadata_routing=False) is not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py",
    "line_number": 87,
    "line": "# TODO(SLEP6): To be removed when set_config(enable_metadata_routing=False) is not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py",
    "line_number": 365,
    "line": "                # TODO(SLEP6): also pass metadata to the predict method for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py",
    "line_number": 1189,
    "line": "                # TODO(SLEP6): also pass metadata for the predict method."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py",
    "line_number": 1650,
    "line": "                # TODO(SLEP6): also pass metadata to the predict method for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py",
    "line_number": 1995,
    "line": "                # TODO(SLEP6): also pass metadata to the predict method for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\__init__.py",
    "line_number": 46,
    "line": "    # TODO: remove this check once the estimator is no longer experimental."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\__init__.py",
    "line_number": 90,
    "line": "# TODO: remove this check once the estimator is no longer experimental."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\tests\\test_search.py",
    "line_number": 1111,
    "line": "    # Test the IID parameter  TODO: Clearly this test does something else???"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\tests\\test_search.py",
    "line_number": 2570,
    "line": "# TODO(1.7): remove this test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\model_selection\\tests\\test_validation.py",
    "line_number": 2487,
    "line": "# TODO(1.8): remove `learning_curve`, `validation_curve` and `permutation_test_score`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\_classification.py",
    "line_number": 330,
    "line": "            # TODO: systematize this mapping of metric for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\_classification.py",
    "line_number": 338,
    "line": "                # TODO: Implement efficient multi-output solution"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\_classification.py",
    "line_number": 363,
    "line": "                    # TODO: adapt the heuristic for `strategy=\"auto\"` for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\_kde.py",
    "line_number": 36,
    "line": "# TODO: implement a brute force version for testing purposes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\_kde.py",
    "line_number": 37,
    "line": "# TODO: create a density estimation base class?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\_kde.py",
    "line_number": 330,
    "line": "        # TODO: implement sampling for other valid kernel shapes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\tests\\test_lof.py",
    "line_number": 252,
    "line": "    # TODO: compare results on dense and sparse data as proposed in:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\tests\\test_neighbors.py",
    "line_number": 125,
    "line": "            # TODO: remove the test once we no longer support scipy < 1.8.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\tests\\test_neighbors.py",
    "line_number": 380,
    "line": "        # TODO: also test radius_neighbors, but requires different assertion"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\tests\\test_neighbors.py",
    "line_number": 1625,
    "line": "# TODO: remove when NearestNeighbors methods uses parameter validation mechanism"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\tests\\test_neighbors.py",
    "line_number": 1729,
    "line": "# TODO: Remove ignore_warnings when minimum supported SciPy version is 1.17"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\tests\\test_neighbors.py",
    "line_number": 2255,
    "line": "# TODO: Remove ignore_warnings when minimum supported SciPy version is 1.17"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\neighbors\\tests\\test_neighbors.py",
    "line_number": 2490,
    "line": "    # TODO: if score is refactored to evaluate models for other scoring"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\preprocessing\\_data.py",
    "line_number": 2335,
    "line": "        # TODO: This should be refactored because binarize also calls"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\preprocessing\\_polynomial.py",
    "line_number": 982,
    "line": "        # TODO: Remove this condition, once scipy 1.10 is the minimum version."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\preprocessing\\_polynomial.py",
    "line_number": 1145,
    "line": "            # TODO: Remove this conditional error when the minimum supported version of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\preprocessing\\_polynomial.py",
    "line_number": 1169,
    "line": "            # TODO: Remove ones scipy 1.10 is the minimum version. See comments above."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\preprocessing\\tests\\test_discretization.py",
    "line_number": 136,
    "line": "        # TODO: This test case above aims to test if the case where an array of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\preprocessing\\tests\\test_discretization.py",
    "line_number": 390,
    "line": "    # TODO this check is redundant with common checks and can be removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\preprocessing\\tests\\test_discretization.py",
    "line_number": 483,
    "line": "# TODO(1.7): remove this test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\semi_supervised\\_self_training.py",
    "line_number": 164,
    "line": "        # TODO(1.8) remove None option"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\semi_supervised\\_self_training.py",
    "line_number": 166,
    "line": "        # TODO(1.8) remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\semi_supervised\\_self_training.py",
    "line_number": 195,
    "line": "        # TODO(1.8) remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\semi_supervised\\_self_training.py",
    "line_number": 206,
    "line": "        # TODO(1.8): remove and only keep clone(self.estimator)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\semi_supervised\\_self_training.py",
    "line_number": 217,
    "line": "        # TODO(1.8) remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\semi_supervised\\_self_training.py",
    "line_number": 623,
    "line": "        # TODO(1.8): remove the condition check together with base_estimator"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\semi_supervised\\tests\\test_self_training.py",
    "line_number": 349,
    "line": "# TODO(1.8): remove in 1.8"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\svm\\_base.py",
    "line_number": 315,
    "line": "            # TODO: add keyword copy to copy on demand"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\svm\\tests\\test_svm.py",
    "line_number": 4,
    "line": "TODO: remove hard coded numerical results when possible"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_base.py",
    "line_number": 271,
    "line": "# TODO(1.8): Remove this test when the deprecation is removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_calibration.py",
    "line_number": 308,
    "line": "    # TODO(1.8): Remove cv=\"prefit\" options here and the @ignore_warnings of the test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_common.py",
    "line_number": 126,
    "line": "# TODO(1.8): remove test when generate_only is removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_common.py",
    "line_number": 232,
    "line": "                # TODO: FIX MLP to not check validation set during MLP"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_common.py",
    "line_number": 275,
    "line": "# TODO: As more modules support get_feature_names_out they should be removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_common.py",
    "line_number": 409,
    "line": "# TODO(1.7): Remove this test when the deprecation cycle is over"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_docstrings.py",
    "line_number": 191,
    "line": "    # TODO: this detection can be improved. Currently we assume that we have"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_docstring_parameters.py",
    "line_number": 56,
    "line": "# TODO(1.7): remove \"sklearn.utils._joblib\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_docstring_parameters.py",
    "line_number": 207,
    "line": "        # TODO(devtools): use _tested_estimators instead of all_estimators in the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_metadata_routing.py",
    "line_number": 912,
    "line": "    # TODO: these test classes can be moved to sklearn.utils._testing once we"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_metaestimators.py",
    "line_number": 277,
    "line": "# TODO: remove data validation for the following estimators"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_pipeline.py",
    "line_number": 1856,
    "line": "# TODO(1.7): remove this test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tests\\test_pipeline.py",
    "line_number": 2046,
    "line": "# TODO(1.8): change warning to checking for NotFittedError"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tree\\_classes.py",
    "line_number": 446,
    "line": "                # TODO: tree shouldn't need this in this case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\tree\\_classes.py",
    "line_number": 624,
    "line": "                # TODO: the tree shouldn't need this param"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\deprecation.py",
    "line_number": 127,
    "line": "# TODO: remove in 1.7"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\deprecation.py",
    "line_number": 146,
    "line": "# TODO(1.8): remove force_all_finite and change the default value of ensure_all_finite"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\estimator_checks.py",
    "line_number": 261,
    "line": "    # TODO: test with intercept"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\estimator_checks.py",
    "line_number": 262,
    "line": "    # TODO: test with multiple responses"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\estimator_checks.py",
    "line_number": 792,
    "line": "            TODO(1.8): remove return value"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\estimator_checks.py",
    "line_number": 834,
    "line": "    # TODO(1.8): remove generate_only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\estimator_checks.py",
    "line_number": 1120,
    "line": "        # TODO There are a few errors in SearchCV with array-api-strict because"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\estimator_checks.py",
    "line_number": 3470,
    "line": "    # TODO: find out why PLS and CCA fail. RANSAC is random"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\estimator_checks.py",
    "line_number": 3811,
    "line": "        # TODO(devtools): this should be a separate check."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\estimator_checks.py",
    "line_number": 3843,
    "line": "                    # TODO(devtools): separately check that the constructor doesn't"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 35,
    "line": "# TODO: We can consider removing the containers and importing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 47,
    "line": "    # TODO: When SciPy 1.8 is the minimum supported version,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 99,
    "line": "# TODO: Remove when SciPy 1.11 is the minimum supported version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 112,
    "line": "# TODO: Remove when Scipy 1.12 is the minimum supported version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 125,
    "line": "# TODO: Fuse the modern implementations of _sparse_min_max and _sparse_nan_min_max"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 230,
    "line": "# TODO: Adapt when Pandas > 2.2 is the minimum supported version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 244,
    "line": "# TODO: remove when SciPy 1.12 is the minimum supported version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 291,
    "line": "# TODO: remove when SciPy 1.12 is the minimum supported version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 361,
    "line": "# TODO: Remove when Scipy 1.12 is the minimum supported version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 368,
    "line": "# TODO: Remove when we drop support for Python 3.9. Note the filter argument has"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 413,
    "line": "# TODO: remove when pandas >= 1.4 is the minimum supported version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\fixes.py",
    "line_number": 431,
    "line": "# TODO: Remove when python>=3.10 is the minimum supported version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\multiclass.py",
    "line_number": 363,
    "line": "        # TODO(1.7): Change to ValueError when byte labels is deprecated."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\optimize.py",
    "line_number": 95,
    "line": "        # TODO: It seems that the new check for the sum of absolute gradients above"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\validation.py",
    "line_number": 656,
    "line": "    # TODO: Remove when the minimum version of SciPy supported is 1.12"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\validation.py",
    "line_number": 2398,
    "line": "        # TODO: remove the pandas-specific branch once the minimum supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_array_api.py",
    "line_number": 342,
    "line": "    # TODO: once scikit-learn drops support for NumPy < 2, this class can be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_array_api.py",
    "line_number": 449,
    "line": "            # TODO: Remove when minimum supported version of numpy is >= 1.21."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_array_api.py",
    "line_number": 670,
    "line": "    # TODO: Update to use `__array_namespace__info__()` from array-api v2023.12"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_array_api.py",
    "line_number": 772,
    "line": "    # TODO: refactor once nan-aware reductions are standardized:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_array_api.py",
    "line_number": 789,
    "line": "    # TODO: refactor once nan-aware reductions are standardized:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_array_api.py",
    "line_number": 806,
    "line": "    # TODO: refactor once nan-aware reductions are standardized:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_array_api.py",
    "line_number": 932,
    "line": "    # TODO: once sufficiently adopted, we might want to instead rely on the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_array_api.py",
    "line_number": 1089,
    "line": "    # TODO: update if bincount is ever adopted in a future version of the standard:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_indexing.py",
    "line_number": 149,
    "line": "    # TODO(1.9) remove UserList when the force_int_remainder_cols param"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_indexing.py",
    "line_number": 264,
    "line": "        # TODO: we should probably use _is_pandas_df_or_series(X) instead but this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_indexing.py",
    "line_number": 305,
    "line": "            # TODO(1.3): check if the warning is still raised or remove the filter."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_joblib.py",
    "line_number": 4,
    "line": "# TODO(1.7): remove this file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_tags.py",
    "line_number": 255,
    "line": "# TODO(1.8): Remove this function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_tags.py",
    "line_number": 302,
    "line": "# TODO(1.7): Remove this function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_tags.py",
    "line_number": 396,
    "line": "        # TODO(1.7): turn the warning into an error"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_tags.py",
    "line_number": 423,
    "line": "        # TODO(1.7): Remove this branch of the code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_tags.py",
    "line_number": 468,
    "line": "# TODO(1.7): Remove this function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_tags.py",
    "line_number": 488,
    "line": "# TODO(1.7): Remove this function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_tags.py",
    "line_number": 549,
    "line": "# TODO(1.7): Remove this function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_testing.py",
    "line_number": 1333,
    "line": "        # TODO: remove when pyamg > 5.0.1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\__init__.py",
    "line_number": 56,
    "line": "# TODO(1.7): remove parallel_backend and register_parallel_backend"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\__init__.py",
    "line_number": 105,
    "line": "# TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\__init__.py",
    "line_number": 116,
    "line": "# TODO(1.7): remove tosequence"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\tests\\test_array_api.py",
    "line_number": 299,
    "line": "# TODO: add cupy to the list of libraries once the the following upstream issue"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\tests\\test_extmath.py",
    "line_number": 215,
    "line": "    # more accurate but slow (TODO find realistic settings here)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\tests\\test_multiclass.py",
    "line_number": 600,
    "line": "# TODO(1.7): Change to ValueError when byte labels is deprecated."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\tests\\test_tags.py",
    "line_number": 99,
    "line": "# TODO(1.7): Remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\tests\\test_tags.py",
    "line_number": 645,
    "line": "# TODO(1.7): Remove this test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\tests\\test_utils.py",
    "line_number": 7,
    "line": "# TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\tests\\test_utils.py",
    "line_number": 13,
    "line": "# TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\tests\\test_utils.py",
    "line_number": 19,
    "line": "# TODO(1.7): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\tests\\test_validation.py",
    "line_number": 24,
    "line": "# TODO: add this estimator into the _mocking module in a further refactoring"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\tests\\test_validation.py",
    "line_number": 2321,
    "line": "# TODO(1.8): remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 499,
    "line": "# TODO(devtools): allow third-party developers to pass test specific params to checks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 501,
    "line": "    # TODO(devtools): check that function names here exist in checks for the estimator"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 763,
    "line": "    # TODO(devtools): enable this behavior for third party estimators as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 792,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 801,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 810,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 819,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 828,
    "line": "        # TODO: fix sample_weight handling of this estimator, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 841,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 850,
    "line": "        # TODO: fix sample_weight handling of this estimator, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 889,
    "line": "        # TODO: investigate failure see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 898,
    "line": "        # TODO: investigate failure see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 933,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 942,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 951,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 960,
    "line": "        # TODO: fix sample_weight handling of this estimator, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 974,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 986,
    "line": "        # TODO: investigate failure see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1001,
    "line": "        # TODO: replace by a statistical test when _dual=True, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1013,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1022,
    "line": "        # TODO: fix sample_weight handling of this estimator, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1031,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1041,
    "line": "        # TODO: fix sample_weight handling of this estimator when probability=False"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1042,
    "line": "        # TODO: replace by a statistical test when probability=True"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1055,
    "line": "        # TODO: fix sample_weight handling of this estimator, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1069,
    "line": "        # TODO: fix sample_weight handling of this estimator, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1078,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1100,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1109,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1122,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1131,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1161,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1170,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1179,
    "line": "        # TODO: replace by a statistical test, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1217,
    "line": "        # TODO: fix sample_weight handling of this estimator when probability=False"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1218,
    "line": "        # TODO: replace by a statistical test when probability=True"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\utils\\_test_common\\instance_generator.py",
    "line_number": 1228,
    "line": "        # TODO: fix sample_weight handling of this estimator, see meta-issue #16298"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\_loss\\tests\\test_loss.py",
    "line_number": 841,
    "line": "            # TODO: What could we test if loss.approx_hessian?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sklearn\\_loss\\tests\\test_loss.py",
    "line_number": 876,
    "line": "                # TODO: What could we test if loss.approx_hessian?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\algebras\\quaternion.py",
    "line_number": 1098,
    "line": "        # TODO: is this expression correct?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\refine.py",
    "line_number": 53,
    "line": "        # TODO: this will probably not work with Integral or Polynomial"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\satask.py",
    "line_number": 103,
    "line": "        # TODO: Run additional checks to see which combination of the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\handlers\\matrices.py",
    "line_number": 47,
    "line": "    # TODO: implement sathandlers system for the matrices."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\handlers\\matrices.py",
    "line_number": 77,
    "line": "    # TODO: implement sathandlers system for the matrices."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\handlers\\matrices.py",
    "line_number": 94,
    "line": "    # TODO: implement sathandlers system for the matrices."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\handlers\\order.py",
    "line_number": 214,
    "line": "    # TODO: This should be deducible from the nonzero handler"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\predicates\\calculus.py",
    "line_number": 57,
    "line": "    # TODO: Add examples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\predicates\\common.py",
    "line_number": 17,
    "line": "    # TODO: Add examples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\predicates\\matrices.py",
    "line_number": 70,
    "line": "    # TODO: Add handlers to make these keys work with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\predicates\\sets.py",
    "line_number": 238,
    "line": "    # TODO: Add examples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\predicates\\sets.py",
    "line_number": 337,
    "line": "    # TODO: Add examples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\assumptions\\predicates\\sets.py",
    "line_number": 394,
    "line": "    # TODO: Add examples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\calculus\\accumulationbounds.py",
    "line_number": 688,
    "line": "        # TODO : Devise a better method for Union of AccumBounds"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\calculus\\util.py",
    "line_number": 337,
    "line": "    # TODO: handle piecewise defined functions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\calculus\\util.py",
    "line_number": 338,
    "line": "    # TODO: handle transcendental functions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\calculus\\util.py",
    "line_number": 339,
    "line": "    # TODO: handle multivariate functions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\categories\\diagram_drawing.py",
    "line_number": 2496,
    "line": "                # prop is a Symbol.  TODO: Find out why."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\codegen\\rewriting.py",
    "line_number": 330,
    "line": "    # TODO: We should be able to support more than 2 elements"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\codegen\\tests\\test_rewriting.py",
    "line_number": 410,
    "line": "def test_optims_numpy_TODO():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\codegen\\tests\\test_rewriting.py",
    "line_number": 442,
    "line": "    NUMBER_OF_DIGITS = 25   # TODO: this should ideally be automatically handled."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\combinatorics\\coset_table.py",
    "line_number": 981,
    "line": "    # TODO: complete the docstring"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\combinatorics\\fp_groups.py",
    "line_number": 353,
    "line": "        # TODO: use |G:H| = |G|/|H| (currently H can't be made into a group)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\combinatorics\\fp_groups.py",
    "line_number": 870,
    "line": "    # TODO:: Sims points out in [Sim94] that performance can be improved by"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\combinatorics\\fp_groups.py",
    "line_number": 903,
    "line": "            # TODO: this should support input of a list of general words"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\combinatorics\\tensor_can.py",
    "line_number": 1016,
    "line": "    TODO: use baseswap in the case in which if it fails in finding a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\concrete\\summations.py",
    "line_number": 600,
    "line": "        # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\concrete\\tests\\test_sums_products.py",
    "line_number": 1019,
    "line": "    # TODO Implement matrix geometric series summation."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\add.py",
    "line_number": 276,
    "line": "                seq.extend(o.args)  # TODO zerocopy?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\evalf.py",
    "line_number": 900,
    "line": "    TODO: should also handle tan of complex arguments."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\expr.py",
    "line_number": 3661,
    "line": "        # TODO: Smarter heuristics"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\exprtools.py",
    "line_number": 251,
    "line": "            # todo: after dropping python 3.7 support, use overload and Literal"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\exprtools.py",
    "line_number": 1547,
    "line": "            # XXX TODO there should be a way to inspect what order the terms"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\facts.py",
    "line_number": 139,
    "line": "       TODO: write about"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\facts.py",
    "line_number": 310,
    "line": "        \"\"\"process a -> b rule\"\"\"   # TODO write more?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\facts.py",
    "line_number": 398,
    "line": "       # TODO b | c"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\function.py",
    "line_number": 210,
    "line": "        # TODO: Look at nargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\function.py",
    "line_number": 1386,
    "line": "            #TODO: check if assumption of discontinuous derivatives exist"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\function.py",
    "line_number": 1643,
    "line": "        # TODO: deprecate?  YES, make this 'enumerated_variables' and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\function.py",
    "line_number": 1645,
    "line": "        # TODO: support for `d^n`?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\mul.py",
    "line_number": 417,
    "line": "            # TODO: Make non-commutative exponents not combine automatically"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\mul.py",
    "line_number": 1031,
    "line": "        # TODO: Should these be self.func?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\mul.py",
    "line_number": 1172,
    "line": "        # TODO: Should this be self.func?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\numbers.py",
    "line_number": 176,
    "line": "# TODO: we should use the warnings module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\numbers.py",
    "line_number": 274,
    "line": "# TODO caching with decorator, but not to degrade performance"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\numbers.py",
    "line_number": 1425,
    "line": "                #TODO: this can probably be optimized more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\numbers.py",
    "line_number": 1856,
    "line": "    # TODO make it decorator + bytecodehacks?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\symbol.py",
    "line_number": 623,
    "line": "    # TODO add check against another Wild"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\benchmarks\\bench_expand.py",
    "line_number": 9,
    "line": "def timeit_expand_nothing_todo():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\tests\\test_args.py",
    "line_number": 3932,
    "line": "@SKIP(\"TODO: sympy.physics.quantum.shor: Cmod Not Implemented\")"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\tests\\test_assumptions.py",
    "line_number": 410,
    "line": "    # TODO Change to x.is_nonzero is None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\tests\\test_basic.py",
    "line_number": 205,
    "line": "    # TODO UndefinedFunction does not subclass Expr"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\tests\\test_diff.py",
    "line_number": 138,
    "line": "    # TODO: assert diff(x**2, (x, n)) == x**(2-n)*ff(2, n)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\tests\\test_expr.py",
    "line_number": 914,
    "line": "    # TODO UndefinedFunction does not subclass Expr"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\tests\\test_facts.py",
    "line_number": 70,
    "line": "# TODO move me to appropriate place"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\core\\tests\\test_function.py",
    "line_number": 1448,
    "line": "    # TODO: Disable string inputs (https://github.com/sympy/sympy/issues/11003)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 26,
    "line": "# TODO you are a bit excessive in the use of Dummies"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 27,
    "line": "# TODO dummy point, literal field"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 28,
    "line": "# TODO too often one needs to call doit or simplify on the output, check the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 1101,
    "line": "        # TODO: you need a real dummy function for the next line"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 1309,
    "line": "                    if c:  # TODO this is ugly - the Commutator can be Zero and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 1438,
    "line": "    # TODO the calculation of signatures is slow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 1439,
    "line": "    # TODO you do not need all these permutations (neither the prefactor)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 1594,
    "line": "        # TODO: you need a real dummy function for the next line"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 1892,
    "line": "    # TODO Is this a good idea?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 1919,
    "line": "    # TODO move some of this to class methods."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 1920,
    "line": "    # TODO rewrite using the .as_blah_blah methods"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 1965,
    "line": "    # TODO move some of this to class methods."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
    "line_number": 1966,
    "line": "    # TODO rewrite using the .as_blah_blah methods"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\tests\\test_class_structure.py",
    "line_number": 19,
    "line": "    #TODO assert point.subs(x, 2) == Point(cs, [2, y])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\tests\\test_class_structure.py",
    "line_number": 20,
    "line": "    #TODO assert point.free_symbols == set([x, y])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\tests\\test_diffgeom.py",
    "line_number": 103,
    "line": "    #TODO assert m == R2_r.transform(R2_p, R2_p.transform(R2_r, [a, b])).applyfunc(simplify)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\tests\\test_diffgeom.py",
    "line_number": 117,
    "line": "    #TODO assert m == R3_r.transform(R3_c, R3_c.transform(R3_r, m)).applyfunc(simplify)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\tests\\test_diffgeom.py",
    "line_number": 120,
    "line": "    #TODO assert m == R3_r.transform(R3_s, R3_s.transform(R3_r, m)).applyfunc(simplify)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\tests\\test_diffgeom.py",
    "line_number": 123,
    "line": "    #TODO assert m == R3_c.transform(R3_s, R3_s.transform(R3_c, m)).applyfunc(simplify)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\tests\\test_diffgeom.py",
    "line_number": 128,
    "line": "        #TODO assert m == R3_r.coord_tuple_transform_to(R3_c, R3_c.coord_tuple_transform_to(R3_r, m)).applyfunc(simplify)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\tests\\test_diffgeom.py",
    "line_number": 131,
    "line": "        #TODO assert m == R3_r.coord_tuple_transform_to(R3_s, R3_s.coord_tuple_transform_to(R3_r, m)).applyfunc(simplify)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\tests\\test_diffgeom.py",
    "line_number": 134,
    "line": "        #TODO assert m == R3_c.coord_tuple_transform_to(R3_s, R3_s.coord_tuple_transform_to(R3_c, m)).applyfunc(simplify)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\diffgeom\\tests\\test_hyperbolic_space.py",
    "line_number": 86,
    "line": "    #TODO - it would be nice to have index contraction built-in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\combinatorial\\factorials.py",
    "line_number": 423,
    "line": "        # TODO: extend this to complex numbers?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\combinatorial\\numbers.py",
    "line_number": 2731,
    "line": "    # TODO: make this a class like bell()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\exponential.py",
    "line_number": 992,
    "line": "        # TODO new and probably slow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\hyperbolic.py",
    "line_number": 283,
    "line": "        if arg.is_Add: # TODO, implement more if deep stuff here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\hyperbolic.py",
    "line_number": 480,
    "line": "        if arg.is_Add: # TODO, implement more if deep stuff here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\piecewise.py",
    "line_number": 577,
    "line": "                # TODO simplify hi <= upto"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\trigonometric.py",
    "line_number": 498,
    "line": "        if arg.is_Add:  # TODO, implement more if deep stuff here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\trigonometric.py",
    "line_number": 499,
    "line": "            # TODO: Do this more efficiently for more than two terms"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\trigonometric.py",
    "line_number": 867,
    "line": "        if arg.is_Add:  # TODO: Do this more efficiently for more than two terms"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\trigonometric.py",
    "line_number": 1579,
    "line": "    # TODO refactor into TrigonometricFunction common parts of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\_trigonometric_special.py",
    "line_number": 3,
    "line": "TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\tests\\test_complexes.py",
    "line_number": 936,
    "line": "    # TODO XXX why does abs(x)._eval_evalf() not fall back to global evalf?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\tests\\test_hyperbolic.py",
    "line_number": 1020,
    "line": "    # TODO: Tests concerning re(ndir) == 0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\elementary\\tests\\test_piecewise.py",
    "line_number": 1223,
    "line": "    # TODO raise error if function is discontinuous at limit of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\bessel.py",
    "line_number": 25,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\delta_functions.py",
    "line_number": 656,
    "line": "            # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\error_functions.py",
    "line_number": 23,
    "line": "# TODO series expansions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\error_functions.py",
    "line_number": 24,
    "line": "# TODO see the \"Note:\" in Ei"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\error_functions.py",
    "line_number": 1201,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\error_functions.py",
    "line_number": 2719,
    "line": "            # TODO: is the series really correct?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\gamma_functions.py",
    "line_number": 687,
    "line": "                # TODO n == 1 also can do some rational z"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\hyper.py",
    "line_number": 47,
    "line": "# TODO should __new__ accept **options?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\hyper.py",
    "line_number": 48,
    "line": "# TODO should constructors should check if parameters are sensible?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\hyper.py",
    "line_number": 210,
    "line": "        # TODO should we check convergence conditions?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\hyper.py",
    "line_number": 543,
    "line": "        # TODO should we check convergence conditions?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\hyper.py",
    "line_number": 980,
    "line": "    # TODO this can be nicer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\spherical_harmonics.py",
    "line_number": 150,
    "line": "        # TODO Add more simplififcation here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\spherical_harmonics.py",
    "line_number": 179,
    "line": "        # TODO: Make sure n \\in N"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\spherical_harmonics.py",
    "line_number": 180,
    "line": "        # TODO: Assert |m| <= n ortherwise we should return 0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\spherical_harmonics.py",
    "line_number": 189,
    "line": "        # TODO: Make sure n \\in N"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\spherical_harmonics.py",
    "line_number": 190,
    "line": "        # TODO: Assert |m| <= n ortherwise we should return 0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\spherical_harmonics.py",
    "line_number": 197,
    "line": "        # TODO: Make sure theta \\in R and phi \\in R"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\spherical_harmonics.py",
    "line_number": 202,
    "line": "        # TODO: Handle deep and hints"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\zeta_functions.py",
    "line_number": 149,
    "line": "            # TODO should something be polarified here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\zeta_functions.py",
    "line_number": 178,
    "line": "        # TODO use minpoly instead of ad-hoc methods when issue 5888 is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\functions\\special\\zeta_functions.py",
    "line_number": 180,
    "line": "            # TODO reference?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\geometry\\ellipse.py",
    "line_number": 665,
    "line": "        # TODO: Replace solve with nonlinsolve, when nonlinsolve will be able to solve in real domain"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\geometry\\ellipse.py",
    "line_number": 918,
    "line": "        # TODO: Replace solve with solveset, when this line is tested"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\geometry\\ellipse.py",
    "line_number": 926,
    "line": "                # TODO: Replace solve with solveset, when these lines are tested"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\geometry\\ellipse.py",
    "line_number": 1289,
    "line": "            # TODO: Replace solve with solveset, when this line is tested"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\geometry\\plane.py",
    "line_number": 412,
    "line": "                # TODO: Replace solve with solveset, when this line is tested"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\holonomic\\holonomic.py",
    "line_number": 732,
    "line": "                    # TODO: Implement this case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\holonomic\\holonomic.py",
    "line_number": 868,
    "line": "                # TODO: support for singular initial condition"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\heurisch.py",
    "line_number": 495,
    "line": "    # TODO: caching is significant factor for why permutations work at all. Change this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\heurisch.py",
    "line_number": 699,
    "line": "        # TODO: Currently it's better to use symbolic expressions here instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\heurisch.py",
    "line_number": 725,
    "line": "                # TODO: Non-polynomial expression. This should have been"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\integrals.py",
    "line_number": 772,
    "line": "        # check for regularity conditions (TODO), see issue 4215"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\intpoly.py",
    "line_number": 977,
    "line": "        #  TODO : This part is quite hacky. Should be made more robust with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\intpoly.py",
    "line_number": 978,
    "line": "        #  TODO : respect to symbol names and scalable w.r.t higher dimensions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\laplace.py",
    "line_number": 873,
    "line": "        # TODO not implemented yet, but also not important"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\manualintegrate.py",
    "line_number": 1587,
    "line": "        return  # todo: handle n < -1 case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\manualintegrate.py",
    "line_number": 2040,
    "line": "            # TODO: This is for future development, as currently"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 119,
    "line": "    # TODO this needs more polar_lift (c/f entry for exp)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 164,
    "line": "    # TODO can do sin^n, sinh^n by expansion ... where?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 170,
    "line": "    # TODO can do t + a. but can also do by expansion... (XXX not really)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 187,
    "line": "    # TODO these only hold for positive p, and can be made more general"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 189,
    "line": "    # TODO also it would be nice to derive them recursively ..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 202,
    "line": "    # TODO log(x)/(x+a) and log(x)/(x-1) can also be done. should they"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 204,
    "line": "    # TODO further formulae in this section seem obscure"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 207,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 230,
    "line": "    # TODO exp(-x)*erf(I*x) does not work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 256,
    "line": "    # TODO all of the following should be derivable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 282,
    "line": "    # TODO many more formulas. should all be derivable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 286,
    "line": "    # TODO many more formulas. should all be derivable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 524,
    "line": "    # TODO should this be a method of meijerg?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 852,
    "line": "    # TODO altered cases 4-7"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 876,
    "line": "    # TODO This leaves only one case from the three listed by Prudnikov."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 900,
    "line": "    # XXX TODO we should reduce order first"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 972,
    "line": "    # TODO should we try both?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 988,
    "line": "    # XXX TODO this is a testing *nightmare*"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
    "line_number": 1445,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 114,
    "line": "    # TODO: Merge this with the very similar special_denom() in rde.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 158,
    "line": "                        # TODO: Add test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 822,
    "line": "        # TODO: implement this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 878,
    "line": "    # TODO: finish writing this and write tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 921,
    "line": "        # TODO: We treat this as 'no solution', until the structure"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 952,
    "line": "    # TODO: Write the full algorithm using the structure theorems."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 957,
    "line": "        # TODO: This could be implemented more efficiently."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 1035,
    "line": "        # TODO: What should really be done in this case?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 1160,
    "line": "        # TODO: What should really be done in this case?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 1185,
    "line": "            # TODO: But maybe we can tell if they're not rational, like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 1266,
    "line": "    # TODO: finish writing this and write tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\prde.py",
    "line_number": 1301,
    "line": "        # TODO: we can use more efficient residue reduction from ratint()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\rde.py",
    "line_number": 38,
    "line": "# TODO: Add messages to NonElementaryIntegralException errors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\rde.py",
    "line_number": 205,
    "line": "    # TODO: finish writing this and write tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\rde.py",
    "line_number": 286,
    "line": "    # TODO: finish writing this and write tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\rde.py",
    "line_number": 510,
    "line": "# TODO: better name for this function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\rde.py",
    "line_number": 653,
    "line": "            # TODO: Write a dummy function that does this idiom"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\rde.py",
    "line_number": 713,
    "line": "        # TODO: Is this check necessary, and if so, what should it do if it fails?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 333,
    "line": "        # TODO: This probably doesn't need to be completely recomputed at"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 366,
    "line": "                    # TODO: Would there ever be any benefit from just"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 395,
    "line": "            # TODO: Just put it in self.Tfuncs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 497,
    "line": "                    # TODO: Add something to backsubs to put exp(const*p)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 530,
    "line": "                        # TODO: give algebraic dependence in error string"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 779,
    "line": "    # TODO: Rewrite algorithms below to use this (?)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 781,
    "line": "    # TODO: Pass through information about why the integral was nonelementary,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 798,
    "line": "    # TODO: This should go in densetools.py."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 855,
    "line": "    # TODO: Use this on the final result.  That way, we can avoid answers like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 1006,
    "line": "    # TODO: This algorithm appears to be faster in every case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 1007,
    "line": "    # TODO: Verify this and splitfactor() for multiple extensions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 1250,
    "line": "        # TODO also consider the complex roots which should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 1280,
    "line": "    # TODO: Use log_to_atan() from rationaltools.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 1350,
    "line": "    # TODO: check what Lambda does with RootOf"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 1365,
    "line": "    # TODO: verify that this is correct for multiple extensions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 1458,
    "line": "        # TODO: This does not do the right thing when b is False"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 1621,
    "line": "    # TODO: Integral from k?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 1622,
    "line": "    # TODO: split out nonelementary integral"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\risch.py",
    "line_number": 1691,
    "line": "    # TODO: This is useful in and of itself, because isinstance(result,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\transforms.py",
    "line_number": 201,
    "line": "        # TODO handle derivatives etc"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\transforms.py",
    "line_number": 745,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\trigonometry.py",
    "line_number": 5,
    "line": "# TODO sin(a*x)*cos(b*x) -> sin((a+b)x) + sin((a-b)x) ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_heurisch.py",
    "line_number": 219,
    "line": "    # TODO: it looks like this used to work just by coincindence and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_heurisch.py",
    "line_number": 252,
    "line": "    # TODO: heurisch() is off by a constant: -3/4. Possibly different permutation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_heurisch.py",
    "line_number": 341,
    "line": "# TODO: convert the rest of PMINT tests:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_integrals.py",
    "line_number": 328,
    "line": "    # TODO: Remove conds='none' below, let the assumption take care of it."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_integrals.py",
    "line_number": 1140,
    "line": "    # TODO: Remove conds='none' below, let the assumption take care of it."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_integrals.py",
    "line_number": 1329,
    "line": "    # TODO: How to test risch=False?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_laplace.py",
    "line_number": 696,
    "line": "    # TODO sinh/cosh shifted come out a mess. also delayed trig is a mess"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_laplace.py",
    "line_number": 697,
    "line": "    # TODO should this simplify further?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_laplace.py",
    "line_number": 712,
    "line": "    # TODO can we make erf(t) work?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_laplace.py",
    "line_number": 751,
    "line": "    # TODO LT of Si, Shi, Chi is a mess ..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_manual.py",
    "line_number": 113,
    "line": "    assert (F.diff(x) - f).rewrite(exp).simplify() == 0  # todo: equals returns None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 149,
    "line": "    # TODO what simplifications should be done automatically?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 165,
    "line": "    # TODO it would be nice to test the condition"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 245,
    "line": "    # TODO more orthogonality integrals"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 257,
    "line": "    # TODO can do higher powers, but come out as high order ... should they be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 262,
    "line": "    # TODO more besseli when tables are extended or recursive mellin works"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 273,
    "line": "    # TODO how does besselj(0, a*x)*besselj(0, b*x) work?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 274,
    "line": "    # TODO how does besselj(0, x)**2*besselj(1, x)**2 work?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 275,
    "line": "    # TODO sin(x)*besselj(0, x) etc come out a mess"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 276,
    "line": "    # TODO can x*log(x)*besselj(0, x) be done?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 277,
    "line": "    # TODO how does besselj(1, x)*besselj(0, x+a) work?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 278,
    "line": "    # TODO more indefinite integrals when struve functions etc are implemented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 374,
    "line": "    # TODO gammasimp cannot prove that the factor is unity"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 517,
    "line": "    # TODO conditions are a mess"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 523,
    "line": "    # TODO gamma, rayleigh"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 579,
    "line": "    # TODO are there other distributions supported on (-oo, oo) that we can do?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 658,
    "line": "    # TODO maybe simplify the inequalities? when the simplification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
    "line_number": 668,
    "line": "    # TODO FT(besselj(0,x)) - conditions are messy (but for acceptable reasons)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_prde.py",
    "line_number": 105,
    "line": "    # TODO: when bound_degree() can handle this, test degree bound from that too"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_prde.py",
    "line_number": 147,
    "line": "    # TODO: Add test for deg(b) <= 0 with b small"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_prde.py",
    "line_number": 262,
    "line": "    # TODO: Add more tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_prde.py",
    "line_number": 280,
    "line": "    # TODO: Add more tests, including ones with exponentials"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_rde.py",
    "line_number": 71,
    "line": "    # TODO: add more tests here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_rde.py",
    "line_number": 114,
    "line": "    # TODO: Add test for when the degree bound becomes larger after limited_integrate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_rde.py",
    "line_number": 115,
    "line": "    # TODO: Add test for db == da - 1 case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_rde.py",
    "line_number": 118,
    "line": "    # TODO: Add tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_rde.py",
    "line_number": 119,
    "line": "    # TODO: Add test for when the degree becomes larger after parametric_log_deriv()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_rde.py",
    "line_number": 179,
    "line": "    # TODO: Add more exp tests, including tests that require is_deriv_in_field()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_rde.py",
    "line_number": 193,
    "line": "    # TODO: Add more primitive tests, including tests that require is_deriv_in_field()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_rde.py",
    "line_number": 197,
    "line": "    # TODO: Add more tests for rischDE, including ones from the text"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_risch.py",
    "line_number": 235,
    "line": "    # TODO: Skip or make faster"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_risch.py",
    "line_number": 250,
    "line": "    # TODO: Add tests for integrate_hyperexponential() from the book"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_risch.py",
    "line_number": 374,
    "line": "    # TODO: Add a test where two different parts of the extension use a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 80,
    "line": "    # TODO does not work with bneg, argument wrong. Needs changes to matching."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 164,
    "line": "    # TODO we cannot currently do these (needs summation of 3F2(-1))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 244,
    "line": "    # TODO we can't do any of these (delicate cancellation)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 253,
    "line": "    # TODO bessely(a, x)*besselk(a, x) is a mess"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 264,
    "line": "    # TODO products of besselk are a mess"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 271,
    "line": "    # TODO exp(x/2)*besselk(a, x/2) [etc] cannot currently be done"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 272,
    "line": "    # TODO various strange products of special orders"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 385,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 419,
    "line": "    # TODO this comes out as an amazing mess, but simplifies nicely"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 435,
    "line": "    # TODO this can be further simplified!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 443,
    "line": "    # TODO more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 465,
    "line": "    # TODO for this to work with real a, need to expand abs(a*x) to abs(a)*abs(x)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 478,
    "line": "    # TODO IFT is a *mess*"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 480,
    "line": "    # TODO IFT"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 491,
    "line": "    # TODO IFT without factoring comes out as meijer g"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 501,
    "line": "    # TODO IFT (comes out as meijer G)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 503,
    "line": "    # TODO besselj(n, x), n an integer > 0 actually can be done..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_transforms.py",
    "line_number": 505,
    "line": "    # TODO are there other common transforms (no distributions!)?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\integrals\\tests\\test_trigonometry.py",
    "line_number": 32,
    "line": "    # TODO: remove conds='none' below. For this to work we would have to rule"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\interactive\\tests\\test_ipython.py",
    "line_number": 10,
    "line": "# TODO: The code below could be made more granular with something like:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\interactive\\tests\\test_ipython.py",
    "line_number": 74,
    "line": "    # TODO: How can we test that the output of a SyntaxError is the original"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\logic\\boolalg.py",
    "line_number": 2165,
    "line": "    todo = list(range(len(terms)))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\logic\\boolalg.py",
    "line_number": 2181,
    "line": "                    todo[i] = todo[j] = None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\logic\\boolalg.py",
    "line_number": 2195,
    "line": "    simplified_terms.extend([terms[i] for i in todo if i is not None])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\logic\\algorithms\\lra_theory.py",
    "line_number": 103,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\common.py",
    "line_number": 275,
    "line": "    def _eval_todok(self):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\common.py",
    "line_number": 715,
    "line": "    def todok(self):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\common.py",
    "line_number": 723,
    "line": "        >>> M.todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\common.py",
    "line_number": 726,
    "line": "        return self._eval_todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\common.py",
    "line_number": 759,
    "line": "    def todod(M):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\common.py",
    "line_number": 771,
    "line": "        >>> A.todod()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\dense.py",
    "line_number": 127,
    "line": "        for (i, j), element in self.todok().items():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\determinant.py",
    "line_number": 731,
    "line": "    TODO: Implement algorithm for sparse matrices (SFF),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\graph.py",
    "line_number": 39,
    "line": "    E = sorted(M.todok().keys())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\graph.py",
    "line_number": 73,
    "line": "    E = sorted(M.todok().keys())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\matrices.py",
    "line_number": 655,
    "line": "        TODO: Implement algorithm for sparse matrices (SFF),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\matrixbase.py",
    "line_number": 238,
    "line": "    def _eval_todok(self):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\matrixbase.py",
    "line_number": 667,
    "line": "    def todok(self):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\matrixbase.py",
    "line_number": 675,
    "line": "        >>> M.todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\matrixbase.py",
    "line_number": 678,
    "line": "        return self._eval_todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\matrixbase.py",
    "line_number": 729,
    "line": "    def todod(M):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\matrixbase.py",
    "line_number": 741,
    "line": "        >>> A.todod()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\matrixbase.py",
    "line_number": 2030,
    "line": "        todok"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\matrixbase.py",
    "line_number": 2041,
    "line": "        dok = self.todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\matrixbase.py",
    "line_number": 3616,
    "line": "        TODO: Implement algorithm for sparse matrices (SFF),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\repmatrix.py",
    "line_number": 242,
    "line": "    def _eval_todok(self):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\repmatrix.py",
    "line_number": 293,
    "line": "        dok = self.todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\repmatrix.py",
    "line_number": 301,
    "line": "        return len(self.todok()) == self.rows"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparse.py",
    "line_number": 112,
    "line": "            smat = args[0].todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparse.py",
    "line_number": 163,
    "line": "                        for (i, j), vv in v.todok().items():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparse.py",
    "line_number": 242,
    "line": "            .todok() method instead."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparse.py",
    "line_number": 248,
    "line": "        return self.todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparse.py",
    "line_number": 280,
    "line": "        for k, v in self.todok().items():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparse.py",
    "line_number": 329,
    "line": "        return [tuple(k + (self[k],)) for k in sorted(self.todok().keys(), key=lambda k: list(reversed(k)))]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparse.py",
    "line_number": 333,
    "line": "        return len(self.todok())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparse.py",
    "line_number": 356,
    "line": "            sorted(self.todok().keys(), key=list)]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparsetools.py",
    "line_number": 42,
    "line": "def _csrtodok(csr):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparsetools.py",
    "line_number": 48,
    "line": "    >>> from sympy.matrices.sparsetools import _csrtodok"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparsetools.py",
    "line_number": 49,
    "line": "    >>> _csrtodok([[5, 8, 3, 6], [0, 1, 2, 1], [0, 0, 2, 3, 4], [4, 3]])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\sparsetools.py",
    "line_number": 272,
    "line": "    smat = s.todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\expressions\\hadamard.py",
    "line_number": 165,
    "line": "# TODO Implement algorithm for rewriting Hadamard product as diagonal matrix"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\expressions\\tests\\test_derivatives.py",
    "line_number": 52,
    "line": "    # TODO: this is commented because it slows down the tests."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\expressions\\tests\\test_derivatives.py",
    "line_number": 105,
    "line": "    # TODO: find a way to represent a four-dimensional zero-array:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\expressions\\tests\\test_derivatives.py",
    "line_number": 225,
    "line": "    # TODO: TensorProduct is not supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\expressions\\tests\\test_derivatives.py",
    "line_number": 292,
    "line": "    # TODO: no support for TensorProduct."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\expressions\\tests\\test_derivatives.py",
    "line_number": 407,
    "line": "    # TODO: restore this result (currently returning the transpose):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\expressions\\tests\\test_derivatives.py",
    "line_number": 416,
    "line": "    # TODO: restore (currently returning the transpose):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\expressions\\tests\\test_derivatives.py",
    "line_number": 435,
    "line": "    # TODO: not implemented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\expressions\\tests\\test_derivatives.py",
    "line_number": 444,
    "line": "    # TODO: wrong"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\expressions\\tests\\test_derivatives.py",
    "line_number": 448,
    "line": "    # TODO: wrong"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_commonmatrix.py",
    "line_number": 204,
    "line": "def test_todok():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_commonmatrix.py",
    "line_number": 210,
    "line": "    assert m1.todok() == m2.todok() == m3.todok() == m4.todok() == \\"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_commonmatrix.py",
    "line_number": 220,
    "line": "def test_todod():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_commonmatrix.py",
    "line_number": 223,
    "line": "    assert m.todod() == dict"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_commonmatrix.py",
    "line_number": 1167,
    "line": "    # TODO: currently not working as ``_MinimalMatrix`` cannot be sympified:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_matrices.py",
    "line_number": 94,
    "line": "            assert type(m.todok()) is dict"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_matrices.py",
    "line_number": 107,
    "line": "        assert smat == m.todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_matrixbase.py",
    "line_number": 64,
    "line": "def test_todok():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_matrixbase.py",
    "line_number": 70,
    "line": "    assert m1.todok() == m2.todok() == m3.todok() == m4.todok() == \\"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_matrixbase.py",
    "line_number": 81,
    "line": "def test_todod():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_matrixbase.py",
    "line_number": 84,
    "line": "    assert m.todod() == dict"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_matrixbase.py",
    "line_number": 850,
    "line": "            assert type(m.todok()) is dict"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_matrixbase.py",
    "line_number": 863,
    "line": "        assert smat == m.todok()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparse.py",
    "line_number": 76,
    "line": "    assert a.todok() == {(0, 0): 2, (1, 0): 5}"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparse.py",
    "line_number": 290,
    "line": "    assert len(m.todok()) == 2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparse.py",
    "line_number": 577,
    "line": "    assert (len(a.todok()) + len(b.todok()) - len((a + b).todok()) > 0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparse.py",
    "line_number": 604,
    "line": "    assert len(SparseMatrix.eye(3).todok()) == 3"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparse.py",
    "line_number": 606,
    "line": "    assert len(SparseMatrix.zeros(3).todok()) == 0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparsetools.py",
    "line_number": 1,
    "line": "from sympy.matrices.sparsetools import _doktocsr, _csrtodok, banded"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparsetools.py",
    "line_number": 27,
    "line": "def test_csrtodok():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparsetools.py",
    "line_number": 33,
    "line": "    m = _csrtodok(h)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparsetools.py",
    "line_number": 37,
    "line": "    assert _csrtodok(g) == SparseMatrix(3, 7,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparsetools.py",
    "line_number": 39,
    "line": "    assert _csrtodok(i) == SparseMatrix([[1, 0, 3, 0, 0], [0, 0, 0, 0, 12]])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparsetools.py",
    "line_number": 40,
    "line": "    assert _csrtodok(j) == SparseMatrix(5, 8,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\matrices\\tests\\test_sparsetools.py",
    "line_number": 42,
    "line": "    assert _csrtodok(k) == SparseMatrix(3, 3, {(0, 2): 1, (2, 1): 3})"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\parsing\\autolev\\_listener_autolev_antlr.py",
    "line_number": 796,
    "line": "            # TODO: Currently only works with symbols. Make it work for dynamicsymbols."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\parsing\\autolev\\_listener_autolev_antlr.py",
    "line_number": 1269,
    "line": "            # TODO** Parse block matrices"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\parsing\\c\\c_parser.py",
    "line_number": 519,
    "line": "            #TODO: No string type in AST"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\parsing\\fortran\\fortran_parser.py",
    "line_number": 102,
    "line": "            # TODO: Arithmetic Assignment"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\parsing\\fortran\\fortran_parser.py",
    "line_number": 151,
    "line": "            # TODO: Integer Binary Operations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\parsing\\fortran\\fortran_parser.py",
    "line_number": 239,
    "line": "            # TODO:Numbers when the LFortran ASR is updated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\parsing\\fortran\\fortran_parser.py",
    "line_number": 257,
    "line": "            # TODO: Return statement, variable declaration"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\parsing\\latex\\lark\\transformer.py",
    "line_number": 539,
    "line": "            # TODO: ANTLR refers to ISO 80000-2:2019. should we keep base 10 or base 2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\mechanics\\kane.py",
    "line_number": 631,
    "line": "    # TODO : Remove `new_method` after 1.1 has been released."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\mechanics\\tests\\test_particle.py",
    "line_number": 55,
    "line": "    # TODO make the result not be system-dependent"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\optics\\gaussopt.py",
    "line_number": 526,
    "line": "    #TODO A class Complex may be implemented. The BeamParameter may"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\optics\\gaussopt.py",
    "line_number": 885,
    "line": "    #TODO add the other possible arguments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\optics\\gaussopt.py",
    "line_number": 906,
    "line": "#TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\optics\\gaussopt.py",
    "line_number": 911,
    "line": "#TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\cartesian.py",
    "line_number": 3,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\cg.py",
    "line_number": 1,
    "line": "#TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\cg.py",
    "line_number": 486,
    "line": "    #TODO: Improve simplification method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\cg.py",
    "line_number": 675,
    "line": "    # TODO: Check for symmetries"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\circuitplot.py",
    "line_number": 3,
    "line": "Todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\density.py",
    "line_number": 22,
    "line": "    TODO: Density operator support for Qubits"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\gate.py",
    "line_number": 5,
    "line": "Medium Term Todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\gate.py",
    "line_number": 242,
    "line": "            # TODO: This can be optimized to reduce the number of Qubit"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\grover.py",
    "line_number": 3,
    "line": "Todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\matrixcache.py",
    "line_number": 78,
    "line": "        # TODO: explore different sparse formats. But sparse.kron will use"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\matrixutils.py",
    "line_number": 141,
    "line": "# TODO: Move this into sympy.matricies."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\operator.py",
    "line_number": 3,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\operator.py",
    "line_number": 432,
    "line": "            # TODO: make sure the hilbert spaces of the bra and ket are"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\operator.py",
    "line_number": 495,
    "line": "        # TODO if operands are tensorproducts this may be will be handled"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\operatorset.py",
    "line_number": 13,
    "line": "TODO List:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\qapply.py",
    "line_number": 3,
    "line": "Todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\qapply.py",
    "line_number": 84,
    "line": "    # TODO: don't expand the scalars in front of each Mul."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\qapply.py",
    "line_number": 200,
    "line": "    # TODO: I may need to expand before returning the final result."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\qft.py",
    "line_number": 3,
    "line": "Todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\qubit.py",
    "line_number": 3,
    "line": "Todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\represent.py",
    "line_number": 3,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\represent.py",
    "line_number": 417,
    "line": "            #TODO: Add support for sets of operators"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\represent.py",
    "line_number": 451,
    "line": "    TODO (?): Support for Muls and other types of expressions?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\shor.py",
    "line_number": 3,
    "line": "Todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\shor.py",
    "line_number": 36,
    "line": "    TODO: implement a decompose property that returns how to do this in terms"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\spin.py",
    "line_number": 145,
    "line": "        # TODO: add methods for uncoupling operators"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\spin.py",
    "line_number": 157,
    "line": "    # TODO: move this to qapply_Mul"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\spin.py",
    "line_number": 165,
    "line": "        #TODO: use options to use different j values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\spin.py",
    "line_number": 616,
    "line": "        # TODO: move evaluation up to represent function/implement elsewhere"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\spin.py",
    "line_number": 1017,
    "line": "            # TODO: better way to get angles of rotation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\spin.py",
    "line_number": 1487,
    "line": "            # TODO: Need hilbert space fix, see issue 5732"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\tensorproduct.py",
    "line_number": 139,
    "line": "        # TODO: disallow nested TensorProducts."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\tensorproduct.py",
    "line_number": 316,
    "line": "    # TODO: This won't work with Muls that have other composites of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\tensorproduct.py",
    "line_number": 318,
    "line": "    # TODO: This only works for the equivalent of single Qbit gates."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\tensorproduct.py",
    "line_number": 340,
    "line": "            # TODO: check the hilbert spaces of next and current here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\trace.py",
    "line_number": 35,
    "line": "    TODO: Handle condition such as symbols have subscripts/superscripts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\trace.py",
    "line_number": 94,
    "line": "    # TODO: Need to handle printing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\trace.py",
    "line_number": 172,
    "line": "        #TODO: Current version ignores the indices set for partial trace."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\trace.py",
    "line_number": 189,
    "line": "        # TODO : improve this implementation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\trace.py",
    "line_number": 192,
    "line": "    #TODO: Review if the permute method is needed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\tests\\test_cartesian.py",
    "line_number": 104,
    "line": "    # TODO: Add tests for representations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\tests\\test_density.py",
    "line_number": 269,
    "line": "    #TODO: test for invalid arguments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\tests\\test_printing.py",
    "line_number": 3,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\tests\\test_printing.py",
    "line_number": 678,
    "line": "    # TODO: Fix non-unicode pretty printing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\quantum\\tests\\test_trace.py",
    "line_number": 82,
    "line": "    #TODO: needed while testing reduced density operations, etc."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\units\\dimensions.py",
    "line_number": 351,
    "line": "                # TODO: should this raise a warning?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\units\\dimensions.py",
    "line_number": 522,
    "line": "        #TODO: the inversion will fail if the system is inconsistent, for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\units\\tests\\test_quantities.py",
    "line_number": 206,
    "line": "    # TODO: decide whether to allow such expression in the future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\units\\tests\\test_quantities.py",
    "line_number": 227,
    "line": "    # TODO: Pow only support structural equality:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\units\\tests\\test_quantities.py",
    "line_number": 244,
    "line": "    # TODO: need better simplification routine:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\units\\tests\\test_quantities.py",
    "line_number": 249,
    "line": "    # TODO: need a better way to simplify expressions containing units:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\units\\tests\\test_quantities.py",
    "line_number": 253,
    "line": "    # TODO: fix this, it should give `m` without `Abs`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\vector\\vector.py",
    "line_number": 735,
    "line": "        # TODO : Circular dependency if imported at top. Should move"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\vector\\tests\\test_printing.py",
    "line_number": 47,
    "line": "    # TODO : The unit vectors should print with subscripts but they just"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\physics\\vector\\tests\\test_printing.py",
    "line_number": 50,
    "line": "    # TODO : The pretty print division does not print correctly here:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\experimental_lambdify.py",
    "line_number": 78,
    "line": "#TODO debugging output"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\experimental_lambdify.py",
    "line_number": 403,
    "line": "    #TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\plot.py",
    "line_number": 128,
    "line": "        # TODO: _process_piecewise check goes here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\plot.py",
    "line_number": 204,
    "line": "# TODO: Add color arrays for plots."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\plot.py",
    "line_number": 205,
    "line": "# TODO: Add more plotting options for 3d plots."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\plot.py",
    "line_number": 206,
    "line": "# TODO: Adaptive sampling for 3D plots."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\series.py",
    "line_number": 381,
    "line": "                # TODO: set cse=True once this issue is solved:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\series.py",
    "line_number": 1146,
    "line": "        # TODO: for now, I assume that numpy functions are going to succeed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\series.py",
    "line_number": 1156,
    "line": "                # TODO: what if points[k][idx]==e or points[k][idx+1]==e?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\series.py",
    "line_number": 1774,
    "line": "        # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\series.py",
    "line_number": 1790,
    "line": "        # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\series.py",
    "line_number": 1871,
    "line": "        # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\series.py",
    "line_number": 1972,
    "line": "        # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\series.py",
    "line_number": 2094,
    "line": "        # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\utils.py",
    "line_number": 159,
    "line": "    # TODO: prange check goes here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\backends\\matplotlibbackend\\matplotlib.py",
    "line_number": 240,
    "line": "        # TODO The 3D stuff"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\plotting\\backends\\matplotlibbackend\\matplotlib.py",
    "line_number": 304,
    "line": "        #TODO after fixing https://github.com/ipython/ipython/issues/1255"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\distributedmodules.py",
    "line_number": 515,
    "line": "        # TODO better data structure!!!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\distributedmodules.py",
    "line_number": 675,
    "line": "        # TODO apply the product criterion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\distributedmodules.py",
    "line_number": 683,
    "line": "        # TODO mergesort?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\distributedmodules.py",
    "line_number": 726,
    "line": "    # (TODO again, better data structures)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\heuristicgcd.py",
    "line_number": 124,
    "line": "    # TODO: don't expose poly repr implementation details"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\modulargcd.py",
    "line_number": 795,
    "line": "    # TODO: to improve performance, choose the main variable here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\modulargcd.py",
    "line_number": 2128,
    "line": "# TODO: add support for algebraic function fields"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\polyroots.py",
    "line_number": 761,
    "line": "    # TODO: This is fragile. Figure out how to make this independent of construct_domain()."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\polyutils.py",
    "line_number": 376,
    "line": "        # TODO: Integrate this into expand() itself"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\rings.py",
    "line_number": 162,
    "line": "    # TODO: rewrite this so that it doesn't use expand() (see poly())."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\rings.py",
    "line_number": 453,
    "line": "        # TODO: should AlgebraicField be a Composite domain?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\rings.py",
    "line_number": 1212,
    "line": "        elif len(self) <= 5: # TODO: use an actual density measure"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\rings.py",
    "line_number": 1379,
    "line": "    # TODO: use // (__floordiv__) for exquo()?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\rings.py",
    "line_number": 2192,
    "line": "        else: # TODO: don't use dense representation (port PRS algorithms)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\rings.py",
    "line_number": 2961,
    "line": "    # TODO: following methods should point to polynomial"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\ring_series.py",
    "line_number": 516,
    "line": "        # TODO add check that it is a unit"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\ring_series.py",
    "line_number": 677,
    "line": "    # TODO: Add this when it is documented in Sphinx"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\ring_series.py",
    "line_number": 1876,
    "line": "    # TODO Use _parallel_dict_from_expr instead of sring as sring is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\ring_series.py",
    "line_number": 1877,
    "line": "    # inefficient. For details, read the todo in sring."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\agca\\ideals.py",
    "line_number": 102,
    "line": "    # TODO more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\agca\\modules.py",
    "line_number": 32,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\agca\\modules.py",
    "line_number": 1281,
    "line": "        # TODO this can be done more efficiently"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\domains\\algebraicfield.py",
    "line_number": 580,
    "line": "    todom = K.dom.from_sympy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\domains\\algebraicfield.py",
    "line_number": 594,
    "line": "    matrix = [[todom(t.get(a, S.Zero)) for t in terms] for a in algebraics]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\domains\\domain.py",
    "line_number": 442,
    "line": "        # TODO: implement this in from_ methods"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\domains\\domain.py",
    "line_number": 451,
    "line": "        else: # TODO: remove this branch"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\domains\\fractionfield.py",
    "line_number": 34,
    "line": "        # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\domains\\polynomialring.py",
    "line_number": 40,
    "line": "        # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\domains\\quotientring.py",
    "line_number": 9,
    "line": "# TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\domains\\quotientring.py",
    "line_number": 142,
    "line": "        # TODO optionally disable reduction?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\matrices\\dense.py",
    "line_number": 173,
    "line": "    # TODO: Use a nontrivial pivoting strategy to control intermediate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\matrices\\dense.py",
    "line_number": 321,
    "line": "    # TODO: Use a non-trivial pivoting strategy. Even just row swapping makes a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\matrices\\domainmatrix.py",
    "line_number": 465,
    "line": "        return cls.from_dict_sympy(*M.shape, M.todod(), **kwargs)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\matrices\\domainmatrix.py",
    "line_number": 1024,
    "line": "        sympy.matrices.matrixbase.MatrixBase.todod"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\matrices\\normalforms.py",
    "line_number": 11,
    "line": "# TODO (future work):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\matrices\\rref.py",
    "line_number": 256,
    "line": "            # TODO: Add partial pivot support to the sparse implementations."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\matrices\\_dfm.py",
    "line_number": 23,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\matrices\\_dfm.py",
    "line_number": 645,
    "line": "        # TODO: Implement similar algorithms for DDM and SDM."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\numberfields\\basis.py",
    "line_number": 216,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\numberfields\\modules.py",
    "line_number": 1839,
    "line": "        # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\numberfields\\primes.py",
    "line_number": 678,
    "line": "    # TODO (future work):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\tests\\test_distributedmodules.py",
    "line_number": 50,
    "line": "# TODO test to_dict?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\polys\\tests\\test_heuristicgcd.py",
    "line_number": 53,
    "line": "    # TODO: assert heugcd(f, f.diff(x))[0] == g"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\latex.py",
    "line_number": 237,
    "line": "    # TODO: merge this with the above, which requires a lot of test changes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\latex.py",
    "line_number": 1175,
    "line": "        # TODO should exp_polar be printed differently?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\latex.py",
    "line_number": 2574,
    "line": "                # TODO incorporate order"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\latex.py",
    "line_number": 2766,
    "line": "        # TODO: This expression is potentially confusing,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\latex.py",
    "line_number": 2774,
    "line": "        # TODO nicer fractions for few generators..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\latex.py",
    "line_number": 2791,
    "line": "        # TODO nicer fractions for few generators..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\latex.py",
    "line_number": 2847,
    "line": "        # TODO: Handle indices"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\llvmjitcode.py",
    "line_number": 95,
    "line": "    # TODO - assumes all called functions take one double precision argument."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\mathematica.py",
    "line_number": 239,
    "line": "            items = sorted(expr.todok().items(), key=default_sort_key)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\mathml.py",
    "line_number": 1648,
    "line": "        # TODO: copy-pasted from _print_Function: can we do better?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\numpy.py",
    "line_number": 328,
    "line": "        for (r, c), v in expr.todok().items():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\smtlib.py",
    "line_number": 189,
    "line": "    # todo: Sympy does not support quantifiers yet as of 2022, but quantifiers can be handy in SMT."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\str.py",
    "line_number": 964,
    "line": "        #TODO : Handle indices"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tensorflow.py",
    "line_number": 105,
    "line": "    # TODO: a better class structure would avoid this mess:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tensorflow.py",
    "line_number": 200,
    "line": "        # TODO: is this necessary?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\pretty.py",
    "line_number": 1574,
    "line": "        # TODO should exp_polar be printed differently?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\pretty.py",
    "line_number": 1910,
    "line": "            #TODO: Move this code to prettyForm"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\pretty.py",
    "line_number": 2239,
    "line": "        # TODO: the stuff to the left of the | and the stuff to the right of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\pretty.py",
    "line_number": 2602,
    "line": "        # TODO: copy-pasted from _print_Function: can we do better?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\pretty.py",
    "line_number": 2671,
    "line": "                # TODO incorporate order"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\pretty.py",
    "line_number": 2808,
    "line": "        #TODO: Handle indices"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\pretty_symbology.py",
    "line_number": 201,
    "line": "# TODO: Make brackets adjust to height of contents"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\pretty_symbology.py",
    "line_number": 334,
    "line": "    # TODO robustify when no unicodedat available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\stringpict.py",
    "line_number": 10,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\tests\\test_pretty.py",
    "line_number": 4575,
    "line": "    # TODO: The \"x in N\" parts below should be centered independently of the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\tests\\test_pretty.py",
    "line_number": 7256,
    "line": "    # TODO: add support for ASCII pretty."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\pretty\\tests\\test_pretty.py",
    "line_number": 7620,
    "line": "    # TODO: TBD polylog(s - 1, z)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tests\\test_aesaracode.py",
    "line_number": 180,
    "line": "@SKIP  # TODO - this is currently not checked but should be implemented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tests\\test_aesaracode.py",
    "line_number": 234,
    "line": "    # TODO - matrix broadcasting?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tests\\test_aesaracode.py",
    "line_number": 607,
    "line": "    # assert theq(aesara_code_(sy.Ne(x, y)), aet.neq(xt, yt))  # TODO - implement"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tests\\test_latex.py",
    "line_number": 2072,
    "line": "    #TODO: Handle indices"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tests\\test_repr.py",
    "line_number": 93,
    "line": "    # TODO more tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tests\\test_smtlib.py",
    "line_number": 216,
    "line": "    # todo: implement re-write, currently does '(+ x (* -1 y))' instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tests\\test_smtlib.py",
    "line_number": 457,
    "line": "# todo: make smtlib_code support arrays"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tests\\test_smtlib.py",
    "line_number": 509,
    "line": "# todo: make smtlib_code support arrays / matrices ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tests\\test_theanocode.py",
    "line_number": 172,
    "line": "@SKIP  # TODO - this is currently not checked but should be implemented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tests\\test_theanocode.py",
    "line_number": 226,
    "line": "    # TODO - matrix broadcasting?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\printing\\tests\\test_theanocode.py",
    "line_number": 599,
    "line": "    # assert theq(theano_code_(sy.Ne(x, y)), tt.neq(xt, yt))  # TODO - implement"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\series\\gruntz.py",
    "line_number": 670,
    "line": "    # TODO this should not be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\series\\series_class.py",
    "line_number": 70,
    "line": "        TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\series\\tests\\test_formal.py",
    "line_number": 441,
    "line": "    f = x*exp(x)*sin(2*x)  # TODO: rsolve needs improvement"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\series\\tests\\test_gruntz.py",
    "line_number": 148,
    "line": "    # TODO zeta function series"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\series\\tests\\test_gruntz.py",
    "line_number": 152,
    "line": "    # TODO 8.35 - 8.37 (bessel, max-min)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\series\\tests\\test_order.py",
    "line_number": 160,
    "line": "    # TODO : A better output for Order(log(x) + 1/log(x))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\setexpr.py",
    "line_number": 84,
    "line": "        # TODO: this could be implemented straight into `imageset`:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\sets.py",
    "line_number": 2451,
    "line": "                    know its dimensions. TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\sets.py",
    "line_number": 2520,
    "line": "    # TODO: check subsets (`func` in `setv`)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\sets.py",
    "line_number": 2523,
    "line": "    # TODO: support more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\handlers\\functions.py",
    "line_number": 38,
    "line": "    # TODO: handle functions with infinitely many solutions (eg, sin, tan)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\handlers\\functions.py",
    "line_number": 39,
    "line": "    # TODO: handle multivariate functions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\handlers\\intersection.py",
    "line_number": 371,
    "line": "            # TODO: Design a technique to handle multiple-inverse"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\handlers\\mul.py",
    "line_number": 34,
    "line": "    # TODO: some intervals containing 0 and oo will fail as 0*oo returns nan."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\handlers\\mul.py",
    "line_number": 41,
    "line": "    # TODO: handle symbolic intervals"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\handlers\\power.py",
    "line_number": 46,
    "line": "        # TODO: handle unevaluated condition."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\handlers\\power.py",
    "line_number": 49,
    "line": "        # TODO: `s2 > s1` could be unevaluated."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\handlers\\power.py",
    "line_number": 85,
    "line": "    # TODO: add logic for open intervals?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\tests\\test_setexpr.py",
    "line_number": 29,
    "line": "    # TODO: add support for more functions in the future:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\sets\\tests\\test_setexpr.py",
    "line_number": 206,
    "line": "    # TODO: some expressions cannot be calculated due to bugs (currently"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\cse_main.py",
    "line_number": 826,
    "line": "            temp.append(Tuple(*e.todok().items()))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\gammasimp.py",
    "line_number": 397,
    "line": "                    # TODO is there a better heuristic?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\hyperexpand.py",
    "line_number": 50,
    "line": "#   TODO work this out in detail."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\hyperexpand.py",
    "line_number": 86,
    "line": "    # TODO see if this can work as Mod(x, 1); this will require"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\hyperexpand.py",
    "line_number": 253,
    "line": "    # TODO branching"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\hyperexpand.py",
    "line_number": 736,
    "line": "        # TODO with symbolic parameters, it could be advantageous"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\hyperexpand.py",
    "line_number": 1947,
    "line": "    # TODO tons of more formulae"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\hyperexpand.py",
    "line_number": 1991,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\hyperexpand.py",
    "line_number": 2116,
    "line": "    # TODO for now, we use the following simple heuristic: inverse-shift"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\hyperexpand.py",
    "line_number": 2245,
    "line": "    # TODO the following would be possible:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\hyperexpand.py",
    "line_number": 2250,
    "line": "    # TODO Also, we tend to create combinations of gamma functions that can be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\hyperexpand.py",
    "line_number": 2443,
    "line": "    # TODO it would be helpful to give conditions under which the integral"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\simplify.py",
    "line_number": 631,
    "line": "    # TODO: Apply different strategies, considering expression pattern:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\simplify.py",
    "line_number": 1073,
    "line": "        # TODO: see if x*log(a)+x*log(a)*log(b) -> x*log(a)*(1+log(b))?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\simplify.py",
    "line_number": 1233,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\trigsimp.py",
    "line_number": 121,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\tests\\test_hyperexpand.py",
    "line_number": 116,
    "line": "    # TODO [a+1, aRational(-1, 2)], [2*a]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\tests\\test_hyperexpand.py",
    "line_number": 130,
    "line": "    # TODO hyperexpand(hyper([a], [2*a + 1], z))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\tests\\test_hyperexpand.py",
    "line_number": 131,
    "line": "    # TODO [S.Half, a], [Rational(3, 2), a+1]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\tests\\test_hyperexpand.py",
    "line_number": 135,
    "line": "    # TODO [a], [a - S.Half, 2*a]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\tests\\test_hyperexpand.py",
    "line_number": 949,
    "line": "    # TODO polys"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\tests\\test_hyperexpand.py",
    "line_number": 1011,
    "line": "    # TODO LOTS more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\simplify\\tests\\test_hyperexpand.py",
    "line_number": 1039,
    "line": "    # TODO LOTS more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\bivariate.py",
    "line_number": 34,
    "line": "    # TODO it would be good to pick the smallest divisible power"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\pde.py",
    "line_number": 175,
    "line": "        # TODO : 'best' hint should be implemented when adequate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\pde.py",
    "line_number": 289,
    "line": "    # TODO : For now pde.py uses support offered by the ode_order function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\pde.py",
    "line_number": 526,
    "line": "    # TODO : For now homogeneous first order linear PDE's having"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\pde.py",
    "line_number": 616,
    "line": "    # TODO : For now homogeneous first order linear PDE's having"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\solvers.py",
    "line_number": 367,
    "line": "    # TODO: improve solution testing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\solvers.py",
    "line_number": 2906,
    "line": "# TODO: option for calculating J numerically"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\solveset.py",
    "line_number": 694,
    "line": "        # TODO : We should not blindly recurse through all args of arbitrary expressions like this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\solveset.py",
    "line_number": 966,
    "line": "    # todo: This solver can be extended to hyperbolics if the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\solveset.py",
    "line_number": 972,
    "line": "    # todo: The pre-processing below (extraction of numerators, denominators,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\solveset.py",
    "line_number": 1662,
    "line": "        # TODO Case: A-> function of symbol, can be extended here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\diophantine\\diophantine.py",
    "line_number": 2546,
    "line": "    # TODO: pre-simplification: Not necessary but may simplify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\diophantine\\diophantine.py",
    "line_number": 3873,
    "line": "        # TODO: Fall back to diop_DN when k = 2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\ode\\ode.py",
    "line_number": 800,
    "line": "    # TODO: Use solveset here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\ode\\ode.py",
    "line_number": 1075,
    "line": "            # TODO: Hint first order series should match only if d/e is analytic."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\ode\\ode.py",
    "line_number": 1786,
    "line": "    # TODO: if two solutions are solved for f(x), we still want to be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\ode\\single.py",
    "line_number": 204,
    "line": "    # TODO: Add methods that can be used by many ODE solvers:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\tests\\test_polysys.py",
    "line_number": 173,
    "line": "    # TODO: does this really have to be so complicated?!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\tests\\test_solvers.py",
    "line_number": 1717,
    "line": "    # TODO: Investigate why currently solution [0] is preferred over [1]."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\tests\\test_solveset.py",
    "line_number": 323,
    "line": "    # TODO: Is the above solution set definitely complete?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\solvers\\tests\\test_solveset.py",
    "line_number": 1862,
    "line": "    # TODO: add more simple testcases when solveset returns"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\crv_types.py",
    "line_number": 1694,
    "line": "    .. TODO - What is the difference between these degrees of freedom?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\crv_types.py",
    "line_number": 2986,
    "line": "    .. TODO - what does the parameter mean?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\drv.py",
    "line_number": 152,
    "line": "        # TODO: support discrete sets with non integer stepsizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\frv.py",
    "line_number": 460,
    "line": "            #TODO: Implement the mechanism for handling queries for symbolic sized distributions."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\joint_rv.py",
    "line_number": 415,
    "line": "            #TODO: Modify to support integration"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\joint_rv_types.py",
    "line_number": 134,
    "line": "    #TODO: Add support for sets provided by the user"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\matrix_distributions.py",
    "line_number": 114,
    "line": "    ### TODO: Add tests after adding matrix distributions in numpy_rv_map"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\random_matrix_models.py",
    "line_number": 249,
    "line": "        # TODO : Add support for Lie groups(as extensions of sympy.diffgeom)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\rv.py",
    "line_number": 1323,
    "line": "        # TODO : Remove when lambdify accepts 'pymc' as module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\rv.py",
    "line_number": 1340,
    "line": "                # TODO: Replace the try-except block with only given_fn(*args)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\rv.py",
    "line_number": 1366,
    "line": "                    # TODO: Replace the try-except block with only given_fn(*args)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\rv.py",
    "line_number": 1383,
    "line": "            # TODO: Replace the try-except block with only fn(*args)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\rv.py",
    "line_number": 1610,
    "line": "            # TODO: do this for drv.py and frv.py if necessary."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\rv.py",
    "line_number": 1611,
    "line": "            # TODO: add more distributions here if there are more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\tests\\test_compound_rv.py",
    "line_number": 90,
    "line": "    with ignore_warnings(UserWarning): ### TODO: Restore tests once warnings are removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\tests\\test_continuous_rv.py",
    "line_number": 677,
    "line": "    with ignore_warnings(UserWarning): ### TODO: Restore tests once warnings are removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\tests\\test_continuous_rv.py",
    "line_number": 1348,
    "line": "    with ignore_warnings(UserWarning): ### TODO: Restore tests once warnings are removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\tests\\test_continuous_rv.py",
    "line_number": 1358,
    "line": "    with ignore_warnings(UserWarning): ### TODO: Restore tests once warnings are removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\tests\\test_finite_rv.py",
    "line_number": 68,
    "line": "    # TODO: Make iid method!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\tests\\test_mix.py",
    "line_number": 80,
    "line": "    with ignore_warnings(UserWarning): ### TODO: Restore tests once warnings are removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\tests\\test_stochastic_process.py",
    "line_number": 77,
    "line": "        with ignore_warnings(UserWarning):  # TODO: Restore tests once warnings are removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\tests\\test_stochastic_process.py",
    "line_number": 109,
    "line": "    with ignore_warnings(UserWarning): ### TODO: Restore tests once warnings are removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\stats\\tests\\test_stochastic_process.py",
    "line_number": 408,
    "line": "    with ignore_warnings(UserWarning): ### TODO: Restore tests once warnings are removed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\indexed.py",
    "line_number": 89,
    "line": "#   TODO:  (some ideas for improvement)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\indexed.py",
    "line_number": 375,
    "line": "         broadcasting.  (TODO)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 2212,
    "line": "        # TODO: add possibility of metric after (spinors)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 2572,
    "line": "            # TODO: what is the part which is not a coeff?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 2962,
    "line": "        # TODO: this could be optimized by only swapping the indices"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 3101,
    "line": "    # TODO: put this into TensExpr?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 3107,
    "line": "    # TODO: put this into TensExpr?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 3123,
    "line": "        # TODO: inefficient, this should be done at root level only:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 3166,
    "line": "        # TODO: check data compatibility with properties of tensor."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 3242,
    "line": "        # TODO: replace .args[0] with .name:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 3257,
    "line": "            # TODO: if there is no metric present, the derivative should be zero?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 3552,
    "line": "    # TODO: this method should be private"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 3553,
    "line": "    # TODO: should this method be renamed _from_components_free_dum ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 3728,
    "line": "        # TODO: temporary solution, in the future this should be linked to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 4250,
    "line": "        # TODO: inherit dummies from expr"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 4273,
    "line": "        # TODO: can be improved:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
    "line_number": 4846,
    "line": "    # TODO: add a dum_to_components_map ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\array_derivatives.py",
    "line_number": 91,
    "line": "        # TODO: this could be done with multiple-dispatching:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\ndim_array.py",
    "line_number": 566,
    "line": "        # TODO: add checks for dimensions for `value`?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\array_expressions.py",
    "line_number": 603,
    "line": "        # TODO: swap args positions in order to simplify the expression:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\array_expressions.py",
    "line_number": 604,
    "line": "        # TODO: this should be in a function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\array_expressions.py",
    "line_number": 639,
    "line": "        # TODO: function in order to permute the args:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\array_expressions.py",
    "line_number": 840,
    "line": "        # TODO: add API for total rank and cumulative rank:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\array_expressions.py",
    "line_number": 1261,
    "line": "        # TODO: add API for total rank and cumulative rank:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\array_expressions.py",
    "line_number": 1388,
    "line": "        # TODO: check that `expr` has `.subranks`:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\from_array_to_matrix.py",
    "line_number": 123,
    "line": "                # TODO: is this break necessary?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\from_array_to_matrix.py",
    "line_number": 296,
    "line": "        # TODO: this assumes that all arguments are matrices, it may not be the case:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\from_array_to_matrix.py",
    "line_number": 447,
    "line": "    # TODO: check if subremoved should be permuted as well..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\from_array_to_matrix.py",
    "line_number": 541,
    "line": "        # TODO: move this to ElementwiseApplyFunction"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\from_indexed_to_array.py",
    "line_number": 113,
    "line": "        # TODO: check that Kronecker delta is only contracted to one other element:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\tests\\test_array_expressions.py",
    "line_number": 50,
    "line": "    # TODO: not yet supported:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\tests\\test_array_expressions.py",
    "line_number": 54,
    "line": "    # TODO: not yet supported:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\tests\\test_array_expressions.py",
    "line_number": 445,
    "line": "    # TODO: reverse operation starting with `PermuteDims` and getting down to `bb`..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\tests\\test_convert_array_to_matrix.py",
    "line_number": 189,
    "line": "    # TODO: this is returning a wrong result:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\tensor\\tests\\test_tensor.py",
    "line_number": 479,
    "line": "    # TODO: add check for *get_symmetric_group_sgs(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\testing\\runtests.py",
    "line_number": 1936,
    "line": "        # TODO parse integers as well ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\testing\\runtests.py",
    "line_number": 2023,
    "line": "        # TODO: Should these be protected?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 376,
    "line": "    # TODO: fix pickling of Options class (see GroebnerBasis._options)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 403,
    "line": "        check(c, exclude=[0, 1], check_attr=False) # TODO: Py3k"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 414,
    "line": "    # TODO: AssertionError: assert id(obj) not in self.memo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 418,
    "line": "    # TODO: AssertionError: assert id(obj) not in self.memo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 432,
    "line": "    # TODO: fix pickling of ModularInteger"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 438,
    "line": "    # TODO: fix pickling of RealElement"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 442,
    "line": "    # TODO: fix pickling of ComplexElement"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 451,
    "line": "    # TODO: fix pickling of ModularInteger"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 466,
    "line": "        # TODO: fix pickling of ModularInteger"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 483,
    "line": "    # TODO: fix pickling of RealElement"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 487,
    "line": "    # TODO: fix pickling of ComplexElement"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 494,
    "line": "    # TODO: AssertionError"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 498,
    "line": "    # TODO: AttributeError: 'PolyElement' object has no attribute 'ring'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 520,
    "line": "    # TODO: Argh, Python is so naive. No lambdas nor inner function support in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 553,
    "line": "    # TODO: TypeError: __init__() takes at least 3 arguments (1 given)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 557,
    "line": "    # TODO: TypeError: can't pickle instancemethod objects"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 606,
    "line": "    # TODO: PicklingError: Can't pickle <function <lambda> at 0x38578c0>: it's not found as __main__.<lambda>"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 616,
    "line": "    # TODO: TypeError: __init__() takes at least 3 arguments (1 given)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 629,
    "line": "    # TODO: fix pickling of `symbols' flag"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_pickling.py",
    "line_number": 633,
    "line": "# TODO: def test_pickling_polys_rootisolation():"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 920,
    "line": "    # TODO: Replace solve with solveset, as of now test fails for solveset"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 956,
    "line": "    # TODO: Replace solve with solveset when it gives Lambert solution"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 966,
    "line": "    # TODO: x = [-1, 2*(+/-asinh(1)*I + n*pi}, 3*(pi/6 + n*pi/3)]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 967,
    "line": "    # TODO: Replace solve with solveset, as of now test fails for solveset"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1014,
    "line": "    # TODO: Replace solve with solveset, as of now test fails for solveset"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1032,
    "line": "    # TODO: Replace solve with solveset, as of now test fails for solveset"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1038,
    "line": "    # TODO: Replace solve with solveset, as of now test fails for solveset"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1047,
    "line": "    # TODO: Replace solve with solveset, as of now test fails for solveset"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1052,
    "line": "    # TODO: Replace solve with solveset, as of now test fails for solveset"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1059,
    "line": "    # TODO: Replace solve with solveset which gives both [+/- current answer]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1077,
    "line": "    # TODO: Replace solve with solveset, as of now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1084,
    "line": "    # TODO: Replace solve with solveset, as of now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1092,
    "line": "    # TODO: Replace solve with solveset, as of now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1099,
    "line": "    # TODO: Replace solve with solveset, as of now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1118,
    "line": "    # TODO: Replace solve with solveset, as of now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 1194,
    "line": "    # TODO: Replace solve with solveset, as of now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 2252,
    "line": "    # TODO: Replace solve with solveset, current test fails for solveset"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\tests\\test_wester.py",
    "line_number": 3082,
    "line": "    # TODO: Replace solve with solveset, when it works for solveset"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\utilities\\_compilation\\__init__.py",
    "line_number": 9,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\vector\\coordsysrect.py",
    "line_number": 705,
    "line": "            # TODO: trigsimp is needed here so that the matrix becomes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\vector\\functions.py",
    "line_number": 159,
    "line": "        # TODO: This gets a random coordinate system in case of multiple ones:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\vector\\functions.py",
    "line_number": 507,
    "line": "        # TODO : The following line introduces a performance issue"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\sympy\\vector\\operators.py",
    "line_number": 214,
    "line": "        # TODO: is case of many coord systems, this gets a random one:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 966,
    "line": "    selection: Any | None = None,  # TODO: type this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 1012,
    "line": "    selection: Any | None = None,  # TODO: type this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 1060,
    "line": "    selection: Any | None = None,  # TODO: type this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 1107,
    "line": "    selection: Any | None = None,  # TODO: type this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 1549,
    "line": "            # TODO: fail before creating file or writing data"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 2107,
    "line": "        # TODO: refactor this function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 2349,
    "line": "            # TODO: reconsider this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 2371,
    "line": "            # TODO: deprecate non-sequence extrasamples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 2381,
    "line": "                # TODO: unreachable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 2657,
    "line": "            # TODO: raise error?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 2677,
    "line": "                    # TODO: deprecated this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 2751,
    "line": "                # TODO: remove this and sync with ImageJ shape"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 2791,
    "line": "            # TODO: add bitspersample to compressionargs?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 2803,
    "line": "            # TODO: unify with JPEG?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 3065,
    "line": "            # TODO: use JPEGTables for multiple tiles or strips"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 3129,
    "line": "                # TODO: unreachable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 3258,
    "line": "            # TODO: save bilevel data with rowsperstrip"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 3295,
    "line": "        # TODO: check TIFFReadDirectoryCheckOrder warning in files containing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 4565,
    "line": "            assert series is not None  # TODO: ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 4682,
    "line": "            # 'indica',  # TODO: rewrite _series_indica()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 4797,
    "line": "        # TODO: all series need to have JSON metadata for this to succeed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5003,
    "line": "        # TODO: fix loading of color, composite, or palette images"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5190,
    "line": "        # TODO: older versions of ScanImage store non-varying frame data in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5428,
    "line": "        # TODO: need more IndicaLabs sample files"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5429,
    "line": "        # TODO: parse indica series from XML"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5430,
    "line": "        # TODO: alpha channels in SubIFDs or main IFDs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5449,
    "line": "            # TODO: identify other dimensions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5462,
    "line": "        pages = self.pages._getlist(validate=False)  # TODO: this fails for VSI"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5486,
    "line": "        # TODO: get name from ImageDescription XML"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5676,
    "line": "        # TODO: support collections"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5802,
    "line": "                # TODO: is this necessary?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5850,
    "line": "            # TODO: test badly encoded OME-XML"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 5875,
    "line": "                # TODO: load OME-XML from master or companion file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 6199,
    "line": "                # TODO: support multi-file pyramids; must re-open/close"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 6276,
    "line": "            # TODO: handle MagellanStack?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 6279,
    "line": "        # determine CZTR shape from indexmap; TODO: is this necessary?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 6283,
    "line": "        # TODO: activate this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 6444,
    "line": "        # TODO: implement fallback for missing index file, versions 0 and 1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 6489,
    "line": "                pageindex += 1  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 6580,
    "line": "        # TODO: support tiled axes and overlap"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 6637,
    "line": "            # TODO: determine other/combinations of dimensions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 6710,
    "line": "        # TODO: fix multiple conversions between lists and tuples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 6977,
    "line": "        # TODO: check other formats"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 7179,
    "line": "        # TODO: read stamps from all pages"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 7284,
    "line": "        # TODO: remove this? It is a per page property"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 7712,
    "line": "        #     # TODO: cannot change tag.name"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 8017,
    "line": "                # TODO: optimize tuple(ndarray.tolist())"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 8604,
    "line": "                # TODO: calculate correct size for packed integers"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 8625,
    "line": "        func: Callable[..., Any] | None = None,  # TODO: type this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 8832,
    "line": "            # TODO: imagecodecs can decode larger JPEG"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 8915,
    "line": "            # TODO: close file if an exception occurred above"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 8977,
    "line": "            # TODO: convert to uint8?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 9097,
    "line": "        # TODO: what to return?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 9579,
    "line": "        # TODO: parse 65449 ini style comments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 10472,
    "line": "        # TODO: TiffFrame.datetime can differ from TiffPage.datetime?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 11261,
    "line": "            or code in TIFF.TAG_READERS  # TODO: only works with offsets?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 11743,
    "line": "        # TODO: test this case; need example file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 12657,
    "line": "# TODO: this interface does not expose index keys except in __getitem__"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 12946,
    "line": "        # TODO: Zarr Encoding Specification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 12959,
    "line": "                    # TODO: use https://ngff.openmicroscopy.org/latest/"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 13155,
    "line": "                # TODO: support float24 and cint via filters?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 13258,
    "line": "                # TODO: support nested groups"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 13280,
    "line": "                        # TODO: handle JPEG color spaces"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 13416,
    "line": "        # TODO: support nested groups"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 13760,
    "line": "        # TODO: deprecate kwargs?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 13796,
    "line": "        # TODO: add _ARRAY_DIMENSIONS to ZarrFileSequenceStore"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 13914,
    "line": "            # TODO: choose codec from filename"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 13947,
    "line": "                # TODO: make kwargs serializable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 14071,
    "line": "    _container: Any  # TODO: container type?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 14220,
    "line": "        # TODO: deprecate kwargs?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 14652,
    "line": "    # TODO: make FileHandle a subclass of IO[bytes]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 15046,
    "line": "            # TODO: record is not writable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 15144,
    "line": "        # TODO: Cythonize this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 15260,
    "line": "    # TODO: this may crash the Python interpreter under certain conditions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 15939,
    "line": "        # TODO: parse other OME elements from metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 16197,
    "line": "                            # TODO: support any order of axes, such as, APRTZC"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 16203,
    "line": "            # TODO: use user-specified start, stop, step, or labels"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 16308,
    "line": "                # TODO: if possible, verify c, z, t match planeattributes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 16314,
    "line": "            # TODO: use LightPath elements from metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 16346,
    "line": "        # TODO: support more Image elements"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 16403,
    "line": "        # TODO: support other top-level elements"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 16723,
    "line": "            # TODO: enable CCITTRLE decoder for future imagecodecs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 17435,
    "line": "        # TODO: divide into baseline, exif, private, ... tags"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 17541,
    "line": "                (4864, 'AndorId'),  # TODO, Andor Technology 4864 - 5030"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 17779,
    "line": "                # TODO, Pilatus/CHESS/TV6 36864..37120 conflicting with Exif"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 17951,
    "line": "                (50495, 'PCO_RAW'),  # TODO, PCO CamWare"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 18348,
    "line": "        # TODO: obtain specification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 18886,
    "line": "        # TODO: read more CZ_LSMINFO sub-records"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 18925,
    "line": "            7: 'TZCYX',  # TODO: Spline Scan"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 19193,
    "line": "    def CZ_LSM_LUTTYPE(self):  # TODO: type this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 19205,
    "line": "    def CZ_LSM_SUBBLOCK_TYPE(self):  # TODO: type this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 19218,
    "line": "    def NIH_IMAGE_HEADER(self):  # TODO: type this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 20600,
    "line": "            # TODO: fix types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 20605,
    "line": "            # TODO: fix types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 20669,
    "line": "            # TODO: does not seem to work?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 21174,
    "line": "    # TODO: implement read_metaseries_catalog"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 21424,
    "line": "    **metadata: Any,  # TODO: use TypedDict"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 22158,
    "line": "            # TODO: string containing single quote '"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 22392,
    "line": "    # TODO: add option to filter files that do not match pattern"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 23271,
    "line": "    # TODO: benchmark and optimize this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 23335,
    "line": "        # TODO: not used or tested"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 23464,
    "line": "    # TODO: handle invalid input"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 23465,
    "line": "    # TODO: review unboxing of multidimensional arrays"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 23714,
    "line": "    # TODO: pythonize this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 24042,
    "line": "    # TODO: subarrays"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 24455,
    "line": "    # TODO: finish and test multiline snip"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 24920,
    "line": "    # TODO: rewrite detection of isrgb, iscontig"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 24921,
    "line": "    # TODO: use planarconfig"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 25235,
    "line": "    import optparse  # TODO: use argparse"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\tifffile\\tifffile.py",
    "line_number": 25361,
    "line": "        # TODO: handle image sequences"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\functional.py",
    "line_number": 105,
    "line": "    # TODO Move this to C++ once the jit has better support for torch.Size."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\functional.py",
    "line_number": 1620,
    "line": "    # TODO: type dim as BroadcastingList when"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\functional.py",
    "line_number": 1839,
    "line": "    # TODO: when https://github.com/pytorch/pytorch/issues/33782 is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\hub.py",
    "line_number": 327,
    "line": "    # TODO: Remove `None` option in 2.0 and change the default to \"check\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\library.py",
    "line_number": 170,
    "line": "        # TODO(rzou): We're gonna need to stage this change with torchvision,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\library.py",
    "line_number": 239,
    "line": "            # TODO: in future, add more info about where the existing function is registered (this info is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\library.py",
    "line_number": 294,
    "line": "            # TODO: in future, add more info about where the existing function is registered (this info is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\serialization.py",
    "line_number": 877,
    "line": "    # TODO: This feature could be added in the future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\serialization.py",
    "line_number": 908,
    "line": "                # TODO: Once we decide to break serialization FC, this case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\serialization.py",
    "line_number": 947,
    "line": "            # TODO: There's an issue here with FC. It might be impossible to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\serialization.py",
    "line_number": 1035,
    "line": "    # TODO: This feature could be added in the future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\serialization.py",
    "line_number": 1046,
    "line": "                # TODO: Once we decide to break serialization FC, this case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\serialization.py",
    "line_number": 1496,
    "line": "                    # TODO: Once we decide to break serialization FC, we can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\serialization.py",
    "line_number": 1507,
    "line": "                    # TODO: Once we decide to break serialization FC, we can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\serialization.py",
    "line_number": 1567,
    "line": "                # TODO: Once we decide to break serialization FC, we can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\serialization.py",
    "line_number": 1587,
    "line": "                    # TODO: Once we decide to break serialization FC, we can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\serialization.py",
    "line_number": 1781,
    "line": "        # TODO: Once we decide to break serialization FC, we can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_deploy.py",
    "line_number": 25,
    "line": "                # TODO: Once we decide to break serialization FC, we can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_deploy.py",
    "line_number": 67,
    "line": "            # TODO: Once we decide to break serialization FC, we can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_guards.py",
    "line_number": 62,
    "line": "    # TODO: consider also tracking the recompilation count"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_guards.py",
    "line_number": 109,
    "line": "            # TODO (anijain2305) - Investigate why is_fsdp_module required."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_guards.py",
    "line_number": 825,
    "line": "# TODO(voz): Consider a toplevel torch/_source.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_jit_internal.py",
    "line_number": 1106,
    "line": "    # TODO: __name__ not set for submodules in recursive script"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_jit_internal.py",
    "line_number": 1396,
    "line": "# TODO support future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_lobpcg.py",
    "line_number": 985,
    "line": "        # TODO use torch.linalg.cholesky_solve once it is implemented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_meta_registrations.py",
    "line_number": 384,
    "line": "    # TODO: Ideally, we'd insert a deferred runtime assert here, but if we are"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_meta_registrations.py",
    "line_number": 3705,
    "line": "    # TODO: handle out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_meta_registrations.py",
    "line_number": 4847,
    "line": "# TODO: Deduplicate this with canonicalize_dim"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_meta_registrations.py",
    "line_number": 5965,
    "line": "    # TODO: Query cudnnGetRNNTrainingReserveSize (expose to python)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_ops.py",
    "line_number": 61,
    "line": "        # TODO: The cache is NOT currently used by HigherOrderOperator, but it should!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_ops.py",
    "line_number": 108,
    "line": "                # TODO(voz): Should we replace setting DispatchKey.Python entirely with setting mode keys?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_ops.py",
    "line_number": 331,
    "line": "                        # TODO(rzou): we should support torch_dispatch calling convention too."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_ops.py",
    "line_number": 352,
    "line": "                    # TODO(rzou): we should support torch_dispatch calling convention too."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_ops.py",
    "line_number": 788,
    "line": "                # TODO: We also need to handle tensor subclasses here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_ops.py",
    "line_number": 789,
    "line": "                # TODO(voz): We should walk all the nodes here / turn it into a list, topmode is ok for now."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_ops.py",
    "line_number": 849,
    "line": "        # TODO: We could potentially have lots of debugging wrappers against"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_ops.py",
    "line_number": 883,
    "line": "    # TODO: add more methods to expose information about input and output arguments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_ops.py",
    "line_number": 892,
    "line": "        # TODO: we should be calling the fallback for these, but a fallthrough is almost close"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_ops.py",
    "line_number": 1075,
    "line": "            # TODO: disallow access to overloads registered by JIT"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_ops.py",
    "line_number": 1118,
    "line": "    # TODO: use this to make a __dir__"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_tensor.py",
    "line_number": 95,
    "line": "            # TODO: skipping storage copy is wrong for meta, as meta"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_tensor.py",
    "line_number": 148,
    "line": "                    # TODO: Once we decide to break serialization FC, no longer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_tensor.py",
    "line_number": 219,
    "line": "            # TODO: remove hasattr, it's a hack to support versions of torch that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_tensor.py",
    "line_number": 347,
    "line": "            # TODO: Once we decide to break serialization FC, no longer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_tensor.py",
    "line_number": 407,
    "line": "                # Ideally, we'd use a private API for this instead. TODO: Switch to this if"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_tensor.py",
    "line_number": 462,
    "line": "                # TODO: Once we decide to break serialization FC, no longer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_tensor.py",
    "line_number": 471,
    "line": "            # TODO: remove hasattr, it's a hack to support versions of torch that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_tensor.py",
    "line_number": 1192,
    "line": "            # TODO mypy doesn't support @property, see: https://github.com/python/mypy/issues/6185"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_tensor_str.py",
    "line_number": 416,
    "line": "    # TODO(albanD) This needs to be updated when more than one level is supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_tensor_str.py",
    "line_number": 442,
    "line": "    # TODO: add an API to map real -> complex dtypes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_tensor_str.py",
    "line_number": 598,
    "line": "            # TODO: This implies that ellipses is valid syntax for allocating"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_torch_docs.py",
    "line_number": 5107,
    "line": "# TODO: Fix via https://github.com/pytorch/pytorch/issues/75798"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_utils.py",
    "line_number": 170,
    "line": "# TODO: Once we decide to break serialization FC, `storage` no longer needs to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_utils.py",
    "line_number": 263,
    "line": "                # TODO: Validation currently involves an expensive traversal"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_utils.py",
    "line_number": 373,
    "line": "# TODO: Once we decide to break serialization FC, `storage` no longer needs to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_utils.py",
    "line_number": 871,
    "line": "    TODO(khabinov): we should deprecate this function and use torch.compiler.is_compiling()."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\__config__.py",
    "line_number": 13,
    "line": "# TODO: In principle, we could provide more structured version/config"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\__init__.py",
    "line_number": 64,
    "line": "# TODO(torch_deploy) figure out how to freeze version.py in fbcode build"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\__init__.py",
    "line_number": 531,
    "line": "            # TODO: Force specialization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\__init__.py",
    "line_number": 542,
    "line": "        # TODO: A more relaxed guard is possible here, where you guard to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\__init__.py",
    "line_number": 793,
    "line": "    # TODO: Probably can make bool work too, just lazy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\__init__.py",
    "line_number": 928,
    "line": "                # TODO: fix their module from C++ side"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\__init__.py",
    "line_number": 1045,
    "line": "            # TODO: Call like get_device_index() method corresponding to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\__init__.py",
    "line_number": 1984,
    "line": "        # TODO: Once the undocumented FC window is passed, remove the line bellow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\amp\\grad_scaler.py",
    "line_number": 272,
    "line": "                    # TODO: is there a way to split by device and dtype without appending in the inner loop?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\intrinsic\\qat\\modules\\conv_fused.py",
    "line_number": 263,
    "line": "        # TODO(jerryzh): extend"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\intrinsic\\quantized\\dynamic\\modules\\linear_relu.py",
    "line_number": 37,
    "line": "            # TODO check if we should set reduce_rage = True by default here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\intrinsic\\quantized\\modules\\bn_relu.py",
    "line_number": 50,
    "line": "        # TODO: Add qat support for BNReLU2d"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\intrinsic\\quantized\\modules\\bn_relu.py",
    "line_number": 98,
    "line": "        # TODO: Add qat support for BNReLU3d"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\intrinsic\\quantized\\modules\\conv_relu.py",
    "line_number": 20,
    "line": "# TODO: factor out the common parts to ConvNd"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantizable\\modules\\activation.py",
    "line_number": 358,
    "line": "        # TODO: This method has some duplicate lines with the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantizable\\modules\\rnn.py",
    "line_number": 99,
    "line": "        # TODO: make this tanh a member of the module so its qparams can be configured"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\dynamic\\modules\\rnn.py",
    "line_number": 317,
    "line": "        # TODO: dedup with __init__ of RNNBase"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\dynamic\\modules\\rnn.py",
    "line_number": 1140,
    "line": "        # TODO: these can be simplified to one level? e.g. using weight_ih as key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\dynamic\\modules\\rnn.py",
    "line_number": 1155,
    "line": "        # TODO: these can be simplified to one level? e.g. using weight_ih as key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\dynamic\\modules\\rnn.py",
    "line_number": 1250,
    "line": "            ret = input  # TODO: remove when jit supports exception flow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\activation.py",
    "line_number": 255,
    "line": "        # TODO: This is a potential source of accuracy drop."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\conv.py",
    "line_number": 156,
    "line": "    # TODO: maybe change to this when https://github.com/pytorch/pytorch/pull/32958 is landed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\rnn.py",
    "line_number": 72,
    "line": "        # TODO(jerryzh168): maybe make this arg a required arg"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\rnn.py",
    "line_number": 96,
    "line": "            # TODO: refactor the duplicated code to utils.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\rnn.py",
    "line_number": 182,
    "line": "    # TODO: refactor nn.RNNCell to have a _forward that takes weight_ih and weight_hh as input"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\rnn.py",
    "line_number": 219,
    "line": "            ret = input  # TODO: remove when jit supports exception flow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\rnn.py",
    "line_number": 422,
    "line": "        # TODO(jerryzh168): maybe make this arg a required arg"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\rnn.py",
    "line_number": 740,
    "line": "        # TODO: maybe we can try inheriting from that class and define get_flat_weights"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\utils.py",
    "line_number": 201,
    "line": "    # TODO: add an util function for converting qdtype to dtype"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\utils.py",
    "line_number": 227,
    "line": "        # TODO: torch.quint4x2 is not supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\utils.py",
    "line_number": 257,
    "line": "    # TODO: get the quant_min and quant_max from activation_post_process"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\utils.py",
    "line_number": 263,
    "line": "    # TODO: add an util function for converting qdtype to dtype"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\utils.py",
    "line_number": 287,
    "line": "        # TODO: torch.quint4x2 is not supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\linear.py",
    "line_number": 15,
    "line": "# TODO (zaf): Inherit from `quantized.LinearPackedParams` (T83294430)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\linear.py",
    "line_number": 102,
    "line": "# TODO (zaf): Inherit from `quantized.Linear` (T83294430)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\linear.py",
    "line_number": 226,
    "line": "        TODO(zaf): Need to add the sparse params to the qconfig"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\linear.py",
    "line_number": 238,
    "line": "        # TODO: Need to add options to qconfig to avoid the calibration."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\linear.py",
    "line_number": 239,
    "line": "        # TODO: Add calibration for the sparsity"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\dynamic\\linear.py",
    "line_number": 148,
    "line": "        # TODO: Need to add options to qconfig to avoid the calibration."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\dynamic\\linear.py",
    "line_number": 149,
    "line": "        # TODO: Add calibration for the sparsity"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\dynamic\\linear.py",
    "line_number": 164,
    "line": "        # TODO (zaf): Mask might not be part of the qconfig (T83295194)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite.py",
    "line_number": 187,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite.py",
    "line_number": 204,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite.py",
    "line_number": 224,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite.py",
    "line_number": 266,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite.py",
    "line_number": 278,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite.py",
    "line_number": 290,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite.py",
    "line_number": 301,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite.py",
    "line_number": 313,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite.py",
    "line_number": 324,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite.py",
    "line_number": 335,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 222,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 224,
    "line": "        # TODO(future PR): consider designing this better, as the difference"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 230,
    "line": "        # TODO(future PR): consider refactoring this to better reuse the parent"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 257,
    "line": "        # TODO(future PR): make the comparison function configurable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 267,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 298,
    "line": "        \"\"\"  # blank docblock to make autodoc happy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 415,
    "line": "    # TODO(future PR): expose these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 454,
    "line": "    # TODO(future PR): do not observe nodes we do not care"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 556,
    "line": "    # TODO(future PR): expose these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 594,
    "line": "        # TODO(future PR): better check when scripted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 638,
    "line": "# TODO(future PR): align on naming"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 732,
    "line": "    # TODO(future PR): expose these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 887,
    "line": "    High level TODOs for future PRs:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 926,
    "line": "    # TODO(future PR): deduplicate repeating entries"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 958,
    "line": "# TODO(future PR): we should rethink the names of all the PNP APIs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 1039,
    "line": "# TODO(future PR): we should rethink the names of all the PNP APIs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 1065,
    "line": "# TODO(future PR): consider aligning API signature with other similar quantization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 1076,
    "line": "# TODO(future PR): consider aligning API signature with other similar quantization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\_numeric_suite_fx.py",
    "line_number": 1100,
    "line": "        # TODO(future PR): consider matching in a safer way than"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\graph_matcher.py",
    "line_number": 189,
    "line": "    # TODO(next): make this code handle matching by what is before the base op"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\graph_matcher.py",
    "line_number": 217,
    "line": "                # TODO(future PR): check for matches start_op_node and base_op_node"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\graph_passes.py",
    "line_number": 285,
    "line": "        # TODO(future PR): determine the actual dtype of node_c,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\graph_passes.py",
    "line_number": 368,
    "line": "                # TODO(future PR): add handling for quantize_per_tensor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\graph_passes.py",
    "line_number": 394,
    "line": "# TODO(future PR): look into using copy_node API instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\graph_passes.py",
    "line_number": 538,
    "line": "    TODO(before land): real docblock"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\graph_passes.py",
    "line_number": 565,
    "line": "            # TODO(future PR): enable multiple inputs for nodes which are not at start of subgraph"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\graph_passes.py",
    "line_number": 982,
    "line": "                    # TODO: explain this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\mappings.py",
    "line_number": 486,
    "line": "# TODO(future PR): clean this up"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\mappings.py",
    "line_number": 529,
    "line": "        # TODO(future PR): implement shadowing for binary ops and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\ns_types.py",
    "line_number": 19,
    "line": "# TODO(future PR): see if we can use typing_extensions's TypedDict instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 11,
    "line": "from torch.ao.ns.fx.utils import (  # TODO(future PR): make this work correctly for methods"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 26,
    "line": "# TODO(future PR): reuse existing mapping instead of creating a new one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 111,
    "line": "    # TODO(future PR): try reversed(list(matches.items()))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 164,
    "line": "            # TODO(future PR): make this code less confusing,  see discussion"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 244,
    "line": "    # TODO(future PR): reconsider the design to make this more intuitive."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 310,
    "line": "            # TODO(future): some graphs could have placeholders which are unrelated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 351,
    "line": "            # TODO(future PR): handle non-normalized kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 380,
    "line": "            # TODO(future PR): this is not handling complicated graphs correctly, need to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 382,
    "line": "            # TODO(future PR): this is ignoring kwargs, will need to support kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 474,
    "line": "    # TODO(future PR): move logger classes to utils to remove circular dependency"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 512,
    "line": "        # TODO(future PR): deduplicate equivalent qconfigs that come from"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 557,
    "line": "            # TODO(future PR): handle fusion patterns where non-first nodes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 580,
    "line": "                    # TODO(future PR): clarify why we are adding kwargs to args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 630,
    "line": "    # TODO(future PR): implement this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 648,
    "line": "        # TODO(future PR): add a test case for this once we have an easy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 663,
    "line": "    # TODO(future): consider making this configurable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 750,
    "line": "    # TODO(future PR): move logger classes to utils to remove circular dependency"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 863,
    "line": "                # TODO(future PR): make this support all possible args/kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 878,
    "line": "                        # cur_node_orig.name,  # TODO(future PR): set name explicitly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 1056,
    "line": "    # TODO(future PR): move this to config"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 1068,
    "line": "        # TODO(future PR, if needed): support kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 1069,
    "line": "        # TODO(future PR, if needed): support multiple shadow users"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 1073,
    "line": "            # TODO(before land): fix string match"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 1148,
    "line": "# TODO(future PR): redesign this to make it easier to consume outputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 1241,
    "line": "# TODO(future PR): redesign this to make it easier to consume outputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\n_shadows_utils.py",
    "line_number": 1321,
    "line": "# TODO(future PR): redesign this to make it easier to consume outputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\pattern_utils.py",
    "line_number": 22,
    "line": "    # TODO(future PR): allow customizations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\pattern_utils.py",
    "line_number": 23,
    "line": "    # TODO(future PR): reuse existing quantization mappings"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\pattern_utils.py",
    "line_number": 24,
    "line": "    # TODO(future PR): add the rest of modules and ops here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\pattern_utils.py",
    "line_number": 70,
    "line": "    # TODO(future PR): allow customizations from default patterns."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\pattern_utils.py",
    "line_number": 75,
    "line": "        # TODO: this is a temporary hack to flatten the patterns from quantization so"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\pattern_utils.py",
    "line_number": 95,
    "line": "        # TODO(future PR): if needed, implement matching for a node"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\utils.py",
    "line_number": 23,
    "line": "# TODO(future PR): consider deleting this enum and using the torch types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\utils.py",
    "line_number": 30,
    "line": "    # TODO(future PR): while these functions can support multiple dtypes,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\utils.py",
    "line_number": 35,
    "line": "    # TODO(future PRs): dynamic quant, fake quant, etc"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\utils.py",
    "line_number": 44,
    "line": "    # TODO(future PR): clean this up"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\utils.py",
    "line_number": 194,
    "line": "        # TODO(future PR): handle more functionals"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\utils.py",
    "line_number": 195,
    "line": "        # TODO(future PR): handle functional ops which inherit qparams from input"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\utils.py",
    "line_number": 311,
    "line": "        # TODO(future PR): use relationship map instead of hardcoding"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\weight_utils.py",
    "line_number": 70,
    "line": "    # TODO(future PR): make more generic, handle everything"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\ns\\fx\\weight_utils.py",
    "line_number": 151,
    "line": "    # TODO(future PR): why does packed_weight.unpack() not work?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\pruning\\sparsifier\\base_sparsifier.py",
    "line_number": 28,
    "line": "# TODO update desc with new config args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\pruning\\sparsifier\\base_sparsifier.py",
    "line_number": 95,
    "line": "        TODO: Need a clean way of loading the state of the \"prepared\" module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\pruning\\sparsifier\\base_sparsifier.py",
    "line_number": 165,
    "line": "        self.model = model  # TODO: Need to figure out how to load without this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\pruning\\sparsifier\\base_sparsifier.py",
    "line_number": 172,
    "line": "        # TODO: Remove the configuration by reference ('module')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\pruning\\sparsifier\\base_sparsifier.py",
    "line_number": 295,
    "line": "                # TODO handle multiple tensor being quantized on a single module, where to store sparse_params?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\pruning\\sparsifier\\utils.py",
    "line_number": 42,
    "line": "        # TODO Fix this typing, as Type[Module] has no attribute \"from_dense\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\pruning\\_experimental\\activation_sparsifier\\activation_sparsifier.py",
    "line_number": 370,
    "line": "        TODO: Might have to treat functions (reduce_fn, mask_fn etc) in a different manner while serializing."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\pruning\\_experimental\\pruner\\base_structured_sparsifier.py",
    "line_number": 112,
    "line": "        # TODO LSTM Structured pruning does not support returned state currently."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fake_quantize.py",
    "line_number": 195,
    "line": "        # TODO: keeping self.quant_min/max for BC; remove after a couple releases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fake_quantize.py",
    "line_number": 328,
    "line": "    # TODO: rename observer to observer_ctr"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fake_quantize.py",
    "line_number": 468,
    "line": "# TODO: the following 2 variables are kept for backwards compatibility; remove after a few releases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\observer.py",
    "line_number": 342,
    "line": "        # TODO(jakeszwe, jerryzh168)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\observer.py",
    "line_number": 388,
    "line": "            # TODO: switch to scale.item() after adding JIT support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\observer.py",
    "line_number": 391,
    "line": "            # TODO: switch to zero_point.item() after adding JIT support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\observer.py",
    "line_number": 409,
    "line": "# TODO(after v1.13): delete this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\observer.py",
    "line_number": 496,
    "line": "        # TODO: MinMaxObserver by itself doesn't support dynamic quantization, but"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\observer.py",
    "line_number": 1281,
    "line": "            # TODO: For some reason, this is required for it to pass torchscript test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\observer.py",
    "line_number": 1438,
    "line": "        quant_min: minimum value in quantized domain (TODO: align behavior with other observers)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\observer.py",
    "line_number": 1745,
    "line": "# TODO(future PR): remove these defaults and enforce activation functions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\observer.py",
    "line_number": 1753,
    "line": "# TODO: the following 2 variables are kept for backwards compatibility; remove after a few releases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\qconfig.py",
    "line_number": 52,
    "line": "    # TODO: deprecated, remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\qconfig.py",
    "line_number": 278,
    "line": "            # TODO: make this compatible with xnnpack constraints"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\qconfig.py",
    "line_number": 440,
    "line": "            # TODO: make this compatible with xnnpack constraints"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\qconfig_mapping.py",
    "line_number": 36,
    "line": "# TODO: replace all usages with these constants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\qconfig_mapping.py",
    "line_number": 43,
    "line": "# TODO: derive this map from the BackendConfig"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\qconfig_mapping.py",
    "line_number": 120,
    "line": "    # TODO Currently it's required that separate ops in a fused op/module have the same qconfig."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\qconfig_mapping.py",
    "line_number": 135,
    "line": "    # TODO: add assert for backend choices"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\qconfig_mapping.py",
    "line_number": 319,
    "line": "    # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\qconfig_mapping.py",
    "line_number": 346,
    "line": "    # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantization_mappings.py",
    "line_number": 180,
    "line": "# TODO: merge with default static mapping"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantization_mappings.py",
    "line_number": 343,
    "line": "# TODO: merge with get_static_quant_module_class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize.py",
    "line_number": 50,
    "line": "# TODO remove this once BC is no longer required to avoid a SEV"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize.py",
    "line_number": 236,
    "line": "        # TODO remove Dropout special after codebase stable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize.py",
    "line_number": 270,
    "line": "            # TODO: These are the modules that cannot be observed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize.py",
    "line_number": 384,
    "line": "    # TODO: remove allow_list"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize.py",
    "line_number": 408,
    "line": "    # TODO: maybe we should change activation_post_process to _activation_post_process"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize.py",
    "line_number": 432,
    "line": "# TODO: rename to something more general"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize_fx.py",
    "line_number": 352,
    "line": "        # TODO: add backend_config after we split the backend_config for fbgemm and qnnpack"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize_fx.py",
    "line_number": 484,
    "line": "        # TODO: add backend_config after we split the backend_config for fbgemm and qnnpack"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize_fx.py",
    "line_number": 606,
    "line": "        # TODO: add backend_config after we split the backend_config for fbgemm and qnnpack"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize_fx.py",
    "line_number": 656,
    "line": "        # TODO: add backend_config after we split the backend_config for fbgemm and qnnpack"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize_fx.py",
    "line_number": 708,
    "line": "        # TODO: add backend_config after we split the backend_config for fbgemm and qnnpack"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize_pt2e.py",
    "line_number": 95,
    "line": "    # TODO: check qconfig_mapping to make sure conv and bn are both configured"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize_pt2e.py",
    "line_number": 97,
    "line": "    # TODO: (maybe) rewrite this with subgraph_rewriter"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantize_pt2e.py",
    "line_number": 173,
    "line": "    # TODO: only fuse if conv and bn are both configured to be quantized"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quant_type.py",
    "line_number": 26,
    "line": "# TODO: make this private"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\utils.py",
    "line_number": 22,
    "line": "# TODO(future PR): improve this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\utils.py",
    "line_number": 29,
    "line": "# TODO: not sure if typing supports recursive data types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\utils.py",
    "line_number": 36,
    "line": "# TODO: maybe rename this to MatchInputNode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\utils.py",
    "line_number": 119,
    "line": "# TODO: not used now, remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\utils.py",
    "line_number": 121,
    "line": "    # TODO: reuse is_fixed_qparam_node after we move this function to _lower_to_native_backend.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\utils.py",
    "line_number": 433,
    "line": "    # TODO(jerryzh): Figure out why custom quant_min/quant_max are still adjusted."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\utils.py",
    "line_number": 614,
    "line": "# (last update over 1 year ago) and when torchscript is fully deprecated we can refactor. TODO(jakeszwe, jerryzh168)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\utils.py",
    "line_number": 677,
    "line": "        # TODO: switch to scale.item() after adding JIT support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\utils.py",
    "line_number": 680,
    "line": "        # TODO: switch to zero_point.item() after adding JIT support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\backend_config.py",
    "line_number": 51,
    "line": "# TODO: maybe rename this to something that's not related to observer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\backend_config.py",
    "line_number": 290,
    "line": "    # TODO: refer to NativeBackendConfig once that is implemented"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\executorch.py",
    "line_number": 1,
    "line": "# TODO: rename executorch to qnnpack_executorch since executorch is a general runtime"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\executorch.py",
    "line_number": 262,
    "line": "        # TODO: we can add fusion for torch.relu as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\executorch.py",
    "line_number": 306,
    "line": "        # TODO: this is not used right now since we have extra check in prepare"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\fbgemm.py",
    "line_number": 27,
    "line": "# TODO: For now, these DTypeConfigs are identical to the ones defined in native.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\native.py",
    "line_number": 173,
    "line": "    # TODO: express this BackendConfig as a union of the FBGEMM and QNNPACK BackendConfigs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\qnnpack.py",
    "line_number": 82,
    "line": "# TODO: add additional restriction on qscheme to ensure it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\tensorrt.py",
    "line_number": 30,
    "line": "    TODO: add a README when it's more stable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\utils.py",
    "line_number": 183,
    "line": "# TODO(future PR): move backend_config_dict to use dataclass and move this logic to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\_common_operator_config_utils.py",
    "line_number": 32,
    "line": "# TODO: rename to be more explicit, e.g. qat_conv_relu"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\_common_operator_config_utils.py",
    "line_number": 139,
    "line": "        # TODO: this is not used right now since we have extra check in prepare"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\_common_operator_config_utils.py",
    "line_number": 412,
    "line": "        # TODO: we can add fusion for torch.relu as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\_qnnpack_pt2e.py",
    "line_number": 27,
    "line": "    # TODO: need to fix the way we insert observers for this pattern"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\_qnnpack_pt2e.py",
    "line_number": 95,
    "line": "    # TODO: remove when functionalization is supported in PT2 mode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\_qnnpack_pt2e.py",
    "line_number": 145,
    "line": "        # TODO: this is not used right now since we have extra check in prepare"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\backend_config\\_qnnpack_pt2e.py",
    "line_number": 159,
    "line": "            # TODO: remove when functionalization is supported in pt2_mode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 151,
    "line": "        # TODO: probably should cleanup this condition check, it's hard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 198,
    "line": "                # TODO: we can add the information of whether a value needs to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 210,
    "line": "                    # TODO: maybe need more complex attr name here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 306,
    "line": "                # TODO: we can add the information of whether a value needs to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 400,
    "line": "        # TODO: probably should cleanup this condition check, it's hard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 430,
    "line": "                # TODO: we can add the information of whether a value needs to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 434,
    "line": "                    # TODO: maybe need more complex attr name here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 454,
    "line": "        # TODO: get reduce range from observer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 479,
    "line": "                # TODO: we can add the information of whether a value needs to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 496,
    "line": "# TODO: DeQuantStubs are currently inserted only after custom module LSTM, while observers are inserted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 590,
    "line": "    TODO: this logic is hacky, we should think about how to remove it or make it more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 631,
    "line": "        # TODO: it's not used, so actually we can skip quantization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 682,
    "line": "    # TODO: remove is_reference flag"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 715,
    "line": "    # TODO: allow convert_custom_config to override backend_config"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 775,
    "line": "    # TODO: rename weight_is_statically_quantized to weight_is_int8_quantized"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 790,
    "line": "    # TODO: move this to the reference quantized module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 918,
    "line": "        TODO: maybe we want to redesign this part to align with reference model design"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 944,
    "line": "            # TODO: This is the first step in enabling the full fx custom module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 1074,
    "line": "    # TODO refactor this code once we update the prepare logic to have additional information on"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 1241,
    "line": "    # TODO: maybe move this to quantize_fx.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\convert.py",
    "line_number": 1245,
    "line": "    # TODO: this looks hacky, we want to check why we need this and see if we can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\custom_config.py",
    "line_number": 24,
    "line": "# TODO: replace all usages with these constants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\custom_config.py",
    "line_number": 183,
    "line": "    # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\custom_config.py",
    "line_number": 418,
    "line": "    # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\custom_config.py",
    "line_number": 495,
    "line": "    # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\fuse.py",
    "line_number": 26,
    "line": "    # TODO: We should make this private in the future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\fuse.py",
    "line_number": 77,
    "line": "    # TODO: change this to inplace changes to graph, since we no longer construct"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\fuse.py",
    "line_number": 115,
    "line": "            # TODO: add validation that root_node is a module and has the same type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\fuse.py",
    "line_number": 149,
    "line": "    # TODO: dedup with quantization matching function in match_utils.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\fuse_handler.py",
    "line_number": 110,
    "line": "        # TODO: change the signature for fuser_method to take matched module patterns"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\fuse_handler.py",
    "line_number": 130,
    "line": "            # TODO: is this logic right?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\lstm_utils.py",
    "line_number": 18,
    "line": "# TODO: move all LSTM util functions from fx/utils.py to this file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\lstm_utils.py",
    "line_number": 99,
    "line": "    # TODO: maybe make this work for layer_bw as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\match_utils.py",
    "line_number": 17,
    "line": "# TODO(future PR): the 1st argument is typed as `List[Node]`, but a better type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\match_utils.py",
    "line_number": 140,
    "line": "    # TODO: 1. merge with fuse matcher 2. document the code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\pattern_utils.py",
    "line_number": 17,
    "line": "# TODO(future PR): fix the typing on QuantizeHandler (currently a circular dependency)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 250,
    "line": "    # TODO: instead of instantiating the instance, we can use inspect to get the default args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 276,
    "line": "    # TODO: support check for standalone module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 290,
    "line": "        # TODO(future PR): remove the cast to bool below after figuring"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 300,
    "line": "        # TODO: move dtype check into `_qconfig_satisfies_dtype_config_constraints` as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 315,
    "line": "        # TODO: move dtype check into `_qconfig_satisfies_dtype_config_constraints` as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 336,
    "line": "    # TODO: move dtype check into `_qconfig_satisfies_dtype_config_constraints` as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 338,
    "line": "    # TODO: we should check is_dynamic here as well, the code from _is_input_arg_dtype_supported_by_backend"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 350,
    "line": "    # TODO: this is a hack because we can only specify one activation_obs_or_fq for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 543,
    "line": "        # TODO: refactor the following code in terms of apply a qconfig to a pattern"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 589,
    "line": "    TODO(future PR, if needed): explicitly spell out the non-Tensor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 843,
    "line": "    # TODO: move this to a separate function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 855,
    "line": "            # TODO: we are assuming \"target_dtype_info\" exists here, maybe"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 931,
    "line": "        # TODO: this is looking into how the value is used in the future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 1207,
    "line": "            # TODO: this does not handle dynamic quantization yet"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 1278,
    "line": "    # TODO: probably need to remove `is_general_tensor_value_op`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 1415,
    "line": "    # TODO(future PR): delete the orphaned observer modules"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 1525,
    "line": "    # TODO: we probably don't need this counter since each graph will only have"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 1589,
    "line": "            # TODO(future PR): update the output_quantized_idxs API to match"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 1594,
    "line": "            # TODO(future PR): support more dtypes in model outputs, if necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 1628,
    "line": "        # TODO: we might want to handle these more uniformly with the default path"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 1665,
    "line": "    # TODO: reuse placeholder_node_to_input_index and output_node_to_output_index"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 1672,
    "line": "    # TODO: change this to insert obs/fq by pattern instead of by node"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 1705,
    "line": "            # TODO: take a closer look to see if we can remove this check"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 1803,
    "line": "                            # TODO: This currently diverges from how custom modules are handled today,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\prepare.py",
    "line_number": 2084,
    "line": "    # TODO: support regex as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\qconfig_mapping_utils.py",
    "line_number": 74,
    "line": "            # TODO: currently it only works for modules,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\qconfig_mapping_utils.py",
    "line_number": 76,
    "line": "            # TODO: currently it only works for object_type configurations,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 163,
    "line": "# TODO: remove this class, this is still exposed in torch.ao.quantization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 173,
    "line": "# TODO: remove this class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 178,
    "line": "# TODO: remove this class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 183,
    "line": "# TODO: remove this class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 188,
    "line": "# TODO: remove this class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 193,
    "line": "# TODO: remove this class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 198,
    "line": "# TODO: remove this class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 203,
    "line": "# TODO: remove this class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 208,
    "line": "# TODO: remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 213,
    "line": "# TODO: remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 218,
    "line": "# TODO: not used, can be removed after torch.ao.quantization namespace is deprecated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\quantize_handler.py",
    "line_number": 223,
    "line": "# TODO: not used, can be removed after torch.ao.quantization namespace is deprecated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\utils.py",
    "line_number": 41,
    "line": "# TODO: revisit this list. Many helper methods shouldn't be public"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\utils.py",
    "line_number": 247,
    "line": "# TODO: delete"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\utils.py",
    "line_number": 325,
    "line": "                        # TODO(future PR): remove this entire function  and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\utils.py",
    "line_number": 345,
    "line": "                    # TODO(future PR): remove this entire function  and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\utils.py",
    "line_number": 772,
    "line": "        TODO: traverse upwards from the output and handle the case when tuple is not a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\utils.py",
    "line_number": 859,
    "line": "    # TODO: log warnings only when the user enabled a debug flag"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\utils.py",
    "line_number": 868,
    "line": "        # TODO: for now, just use the existing eps value as scale_min. In the future, we should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\utils.py",
    "line_number": 910,
    "line": "            # TODO: handle fp16 qconfigs properly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_decomposed.py",
    "line_number": 160,
    "line": "# TODO: remove other variants and keep this one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_decomposed.py",
    "line_number": 266,
    "line": "        # TODO: investigate why"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_decomposed.py",
    "line_number": 359,
    "line": "# TODO: remove other variants and keep this one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_decomposed.py",
    "line_number": 983,
    "line": "    # TODO: support fp16"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_decomposed.py",
    "line_number": 993,
    "line": "# TODO: dtype is ignored for now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_decomposed.py",
    "line_number": 1014,
    "line": "    # TODO: check for dtype, currently we can't express torch.int4 so it's omitted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_lower_to_native_backend.py",
    "line_number": 267,
    "line": "# TODO: correct the namespace for these modules"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_lower_to_native_backend.py",
    "line_number": 273,
    "line": "# TODO: merge with STATIC_LOWER_MODULE_MAP after we merge"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_lower_to_native_backend.py",
    "line_number": 302,
    "line": "    # TODO: LinearLeakyReLU is registered as global but it is only fused and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_lower_to_native_backend.py",
    "line_number": 398,
    "line": "# TODO: add tests for lowering these ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_lower_to_native_backend.py",
    "line_number": 810,
    "line": "        # TODO: maybe define a WeightedDynamicallyQuantizedModule"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_lower_to_native_backend.py",
    "line_number": 834,
    "line": "        # TODO: WeightedQuantizedModule is currently assuming static quant apis"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_lower_to_native_backend.py",
    "line_number": 837,
    "line": "        # TODO: maybe define a WeightedWeightOnlyQuantizedModule"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_lower_to_native_backend.py",
    "line_number": 1155,
    "line": "        # TODO: add safety checks that users for the ref_node and dq_node needs to be one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_lower_to_native_backend.py",
    "line_number": 1160,
    "line": "            # TODO: add a warning or error out here? (bc-breaking if error out)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_lower_to_native_backend.py",
    "line_number": 1170,
    "line": "            # TODO: add a warning or error out here? (bc-breaking if error out)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\fx\\_lower_to_native_backend.py",
    "line_number": 1201,
    "line": "        # TODO: enable we have patterns that needs to swap the modules"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\export_utils.py",
    "line_number": 101,
    "line": "    # TODO(Leslie): This function still fails to support custom momentum and eps value."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\export_utils.py",
    "line_number": 173,
    "line": "# TODO: expose these under this namespace?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\prepare.py",
    "line_number": 29,
    "line": "# TODO: make pt2e folder private?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\prepare.py",
    "line_number": 150,
    "line": "    # TODO: add assertions for types of root qspecs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\prepare.py",
    "line_number": 303,
    "line": "            # TODO: maybe edge_or_node_to_qspec should be edge_or_node_to_root_qspec, this will simplify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\prepare.py",
    "line_number": 552,
    "line": "        # TODO: simplify logic for inserting observers"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\qat_utils.py",
    "line_number": 105,
    "line": "# TODO: merge this with the `no_conv_bias` case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\qat_utils.py",
    "line_number": 121,
    "line": "        # TODO: allow setting eps"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\qat_utils.py",
    "line_number": 163,
    "line": "        # TODO: allow setting eps"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\qat_utils.py",
    "line_number": 231,
    "line": "    # TODO: allow setting eps"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\qat_utils.py",
    "line_number": 295,
    "line": "    # TODO: allow setting eps"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\qat_utils.py",
    "line_number": 447,
    "line": "        # TODO: This branch is going through a deprecated branch and should be deleted soon,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\qat_utils.py",
    "line_number": 526,
    "line": "# TODO: this is error prone, use the replace_literals_with_placeholders hack instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\qat_utils.py",
    "line_number": 678,
    "line": "    # TODO: use the public replace_pattern API once it also returns replacement nodes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\qat_utils.py",
    "line_number": 721,
    "line": "    #       TODO: do this for literal args for batchnorm as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\utils.py",
    "line_number": 185,
    "line": "# TODO: move this to torch/ao/quantization/utils.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\utils.py",
    "line_number": 350,
    "line": "    # TODO: move this information to fx node itself"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\utils.py",
    "line_number": 604,
    "line": "# TODO: Handle this in export itself and don't wrap the model in another GraphModule"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\representation\\rewrite.py",
    "line_number": 113,
    "line": "    # TODO: change to mul.Scalar"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\representation\\rewrite.py",
    "line_number": 118,
    "line": "    # TODO: change to mul.Scalar when we make x_scale/weight_scale etc. Scalar values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\representation\\rewrite.py",
    "line_number": 195,
    "line": "    # TODO: use out_dtype(mul, ...) here when the op is ready"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\representation\\rewrite.py",
    "line_number": 364,
    "line": "    # TODO: change to mul.Scalar when we make x_scale/weight_scale etc. Scalar values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\representation\\rewrite.py",
    "line_number": 436,
    "line": "    # TODO: change this to mul.Scalar?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\representation\\rewrite.py",
    "line_number": 511,
    "line": "    # TODO: use out_dtype op"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\representation\\rewrite.py",
    "line_number": 609,
    "line": "    # TODO: use out_dtype(mul, ...) here when the op is ready"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\representation\\rewrite.py",
    "line_number": 645,
    "line": "    # TODO: use out_dtype op"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\pt2e\\representation\\rewrite.py",
    "line_number": 647,
    "line": "    # TODO: debug the implementation later when torchdynamo time out issue is resolved"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\quantizer.py",
    "line_number": 50,
    "line": "        # TODO: add init for quant_min/quant_max"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\quantizer.py",
    "line_number": 125,
    "line": "    # TODO: change the value to QuantizationSpec in a separate PR"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\utils.py",
    "line_number": 75,
    "line": "            # TODO This is non standard behavior and should be removed when we migrate off capture_pre_autograd_graph."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\x86_inductor_quantizer.py",
    "line_number": 282,
    "line": "    # TODO: Add more supported operators here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\x86_inductor_quantizer.py",
    "line_number": 875,
    "line": "                    # TODO<leslie> Remove the annotate of output in QAT when qat util support pattern matcher."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\x86_inductor_quantizer.py",
    "line_number": 940,
    "line": "                    # TODO<leslie> Remove the annotate of output in QAT when qat util support pattern matcher."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\x86_inductor_quantizer.py",
    "line_number": 996,
    "line": "                    # TODO<leslie> Remove the annotate of output in QAT when qat util support pattern matcher."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\x86_inductor_quantizer.py",
    "line_number": 1037,
    "line": "                    # TODO<leslie> Remove the annotate of output in QAT when qat util support pattern matcher."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\xnnpack_quantizer.py",
    "line_number": 146,
    "line": "        # TODO: qat + per channel?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\xnnpack_quantizer.py",
    "line_number": 256,
    "line": "        # TODO: move this to BoltNNQuantizer?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\xnnpack_quantizer.py",
    "line_number": 362,
    "line": "        # TODO: implement the support for None to be canceling out previous annotations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\xnnpack_quantizer.py",
    "line_number": 379,
    "line": "        # TODO: implement the support for None to be canceling out previous annotations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\xnnpack_quantizer_utils.py",
    "line_number": 56,
    "line": "    # TODO: remove, since we can use observer_or_fake_quant_ctr to express this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\xnnpack_quantizer_utils.py",
    "line_number": 542,
    "line": "        # TODO: annotate the uses of input, weight, and bias separately instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\xnnpack_quantizer_utils.py",
    "line_number": 954,
    "line": "# TODO: remove Optional in return type, fix annotated_partitions logic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\xnnpack_quantizer_utils.py",
    "line_number": 970,
    "line": "            # TODO: change this to AnnotationException"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\xnnpack_quantizer_utils.py",
    "line_number": 1011,
    "line": "        # TODO: remove?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\ao\\quantization\\quantizer\\xnnpack_quantizer_utils.py",
    "line_number": 1055,
    "line": "# TODO: make the list of ops customizable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\gradcheck.py",
    "line_number": 689,
    "line": "                # TODO: handle the other Ju"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\gradcheck.py",
    "line_number": 931,
    "line": "            # TODO: To cover more problematic cases, replace stride = 0 check with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\gradcheck.py",
    "line_number": 1723,
    "line": "    # TODO: properly handle case when u is tuple instead of only taking first element"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\gradcheck.py",
    "line_number": 1905,
    "line": "    # TODO: replicate https://github.com/pytorch/pytorch/pull/77743 for fast gradcheck as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\gradcheck.py",
    "line_number": 2197,
    "line": "    # TODO: do we want to test this too?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\profiler.py",
    "line_number": 227,
    "line": "        # TODO Consider changing _function_events into data structure with size cap"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\profiler.py",
    "line_number": 726,
    "line": "        # TODO: TorchScript ignores standard type annotation here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\profiler.py",
    "line_number": 746,
    "line": "        # TODO: Too slow with __torch_function__ handling enabled"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\profiler.py",
    "line_number": 783,
    "line": "        # TODO: Too slow with __torch_function__ handling enabled"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\profiler.py",
    "line_number": 1049,
    "line": "        )  # TODO: find in sqlite database"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\profiler_legacy.py",
    "line_number": 31,
    "line": "    category=None,  # TODO: change to `FutureWarning`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\__init__.py",
    "line_number": 126,
    "line": "            # TODO: We can remove this conditional once we uniformly use"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\autograd\\_functions\\tensor.py",
    "line_number": 32,
    "line": "# TODO: deprecate this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\prepare.py",
    "line_number": 75,
    "line": "            # TODO: See if it's possible to use those directly."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\prepare.py",
    "line_number": 87,
    "line": "            # TODO: See if it's possible to use those directly."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\prepare.py",
    "line_number": 142,
    "line": "    # TODO: Maybe make these names match the original."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 14,
    "line": "# TODO: Add type annotations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 15,
    "line": "# TODO: Check tensor types for ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 151,
    "line": "# TODO: Expose these directly to Python to avoid maintaining this list."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 207,
    "line": "    # TODO: Make this an enum."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 240,
    "line": "    # TODO: Support non-equal-rank broadcast where semantics match."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 271,
    "line": "    # TODO: Handle dilation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 501,
    "line": "                # TODO: Improve this error message, possibly after converting"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 1198,
    "line": "            # TODO: Possibly check scale and zero point."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 1200,
    "line": "            # TODO: Possibly support variable-sized inputs."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 1501,
    "line": "                # TODO: Support this by adding trailing 1 dims."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 1533,
    "line": "        # TODO: Validate ceil_mode semantics."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 1792,
    "line": "        # TODO: Transform at load time to share weights with CPU model."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 1832,
    "line": "        # TODO: Support automatic reshape"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 1871,
    "line": "        # TODO: Transform at load time to share weights with CPU model."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\backends\\_nnapi\\serializer.py",
    "line_number": 2094,
    "line": "        # TODO: Transform at load time to share weights with CPU model."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\contrib\\_tensorboard_vis.py",
    "line_number": 138,
    "line": "        # TODO: handle attrs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\cpu\\amp\\autocast_mode.py",
    "line_number": 42,
    "line": "    # TODO: discuss a unified TorchScript-friendly API for autocast"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\cuda\\__init__.py",
    "line_number": 251,
    "line": "        # TODO(torch_deploy): this accesses linecache, which attempts to read the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\cuda\\amp\\autocast_mode.py",
    "line_number": 43,
    "line": "    # TODO: discuss a unified TorchScript-friendly API for autocast"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\device_mesh.py",
    "line_number": 111,
    "line": "                # TODO: we need to handle reconstructing a non-contiguous flattened dim."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\device_mesh.py",
    "line_number": 194,
    "line": "            # TODO: If we decide to restrict flatten initialization once, we should remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\device_mesh.py",
    "line_number": 321,
    "line": "                    # TODO: this doesn't allow non-contiguous slicing with flatten dim yet. next_idx"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\device_mesh.py",
    "line_number": 445,
    "line": "            # TODO(yeounoh) implement DeviceMesh backend and register XLA backend."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\device_mesh.py",
    "line_number": 476,
    "line": "            # TODO: if user want to pass pg_options, offer a way to do it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\device_mesh.py",
    "line_number": 497,
    "line": "            # TODO(yifu): remove tag and ranks once we fully migrate to native"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\device_mesh.py",
    "line_number": 545,
    "line": "                        # TODO: Add two tests to cover internal tests scenarios and re-enable reuse subgroup if exists."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 314,
    "line": "        # TODO: remove this exception once UCC plugin is fully deprecated."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 598,
    "line": "        TODO don't expose the map, expose fine grained ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 608,
    "line": "        TODO don't expose the map, expose fine grained ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 618,
    "line": "        TODO don't expose the map, expose fine grained ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 628,
    "line": "        TODO don't expose the map, expose fine grained ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 638,
    "line": "        TODO don't expose group_count, use something else instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 728,
    "line": "            # TODO moco benchmark on CPU initializes pgnccl backend today, triggered this assert in CI before it was"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 959,
    "line": "# TODO: remove this once the ecosystem moves away from it."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 997,
    "line": "    # TODO(yifu): remove this function once ranks + tag is not a supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 1741,
    "line": "            # TODO: remove this check after lazy initialization is supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 1776,
    "line": "            # TODO: once UCC plugin is fully deprecated, remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 1818,
    "line": "        # TODO: This defaults to the old behavior for PythonProcessGroups which overwrites the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 4227,
    "line": "        # TODO(whc) aparently some existing test case for monitored_barrier passes in a timeout in float format?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\distributed_c10d.py",
    "line_number": 4938,
    "line": "    # TODO copy settings and timeout from default PG"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_functional_collectives.py",
    "line_number": 208,
    "line": "    # TODO this should be done inside AsyncCollectiveTensor to delay the wait() call"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_functional_collectives.py",
    "line_number": 241,
    "line": "    # TODO this should be done inside AsyncCollectiveTensor to delay the wait() call"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_functional_collectives.py",
    "line_number": 717,
    "line": "        # TODO: it should run collective in the whole mesh instead of dim 0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_functional_collectives.py",
    "line_number": 966,
    "line": "    # TODO(yifu): remove these in functional collective beta release"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_functional_collectives.py",
    "line_number": 1008,
    "line": "    group,  # TODO add a type,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_functional_collectives.py",
    "line_number": 1026,
    "line": "    op: str = \"sum\",  # TODO type is actually c10d ReduceOp. is this ok?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_functional_collectives.py",
    "line_number": 1027,
    "line": "    group=None,  # TODO add a type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_state_dict_utils.py",
    "line_number": 120,
    "line": "    # TODO: should we use pytree?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_state_dict_utils.py",
    "line_number": 197,
    "line": "                # TODO: support DTensor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_state_dict_utils.py",
    "line_number": 561,
    "line": "        # TODO: currently, we cannot handle strided sharding if the dp dimension is not even. For example,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_state_dict_utils.py",
    "line_number": 657,
    "line": "# TODO: We should consolidate the code here as some not all modules can depend on"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\algorithms\\ddp_comm_hooks\\default_hooks.py",
    "line_number": 102,
    "line": "# TODO: create an internal helper function and extract the duplicate code in FP16_compress and BF16_compress."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\algorithms\\ddp_comm_hooks\\optimizer_overlap_hooks.py",
    "line_number": 78,
    "line": "            # not average. TODO: (rohan-varma) the div factor may be different"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\algorithms\\ddp_comm_hooks\\optimizer_overlap_hooks.py",
    "line_number": 83,
    "line": "            # TODO (rohan-varma): upcast as needed for DDP mixed precision,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\algorithms\\ddp_comm_hooks\\powerSGD_hook.py",
    "line_number": 598,
    "line": "        # TODO: The above procedure does two matmul+allreduce steps per iteration --"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\algorithms\\ddp_comm_hooks\\powerSGD_hook.py",
    "line_number": 820,
    "line": "        # TODO: The above procedure does two matmul+allreduce steps per iteration --"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\algorithms\\_checkpoint\\checkpoint_wrapper.py",
    "line_number": 288,
    "line": "    # TODO: Importing inside function to avoid circular import issue between FSDP and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\algorithms\\_optimizer_overlap\\optimizer_overlap.py",
    "line_number": 77,
    "line": "    # TODO: register_fsdp once FSDP supports communication hook."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\default_planner.py",
    "line_number": 65,
    "line": "# TODO: Update docstrings for default_planner.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\filesystem.py",
    "line_number": 241,
    "line": "        # TODO replace with headq"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\filesystem.py",
    "line_number": 290,
    "line": "            # TODO: Using the OverlappingCpuLoader with multiple threads creates significant"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\filesystem.py",
    "line_number": 644,
    "line": "                # TODO sort by offset and cache the reading"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\format_utils.py",
    "line_number": 84,
    "line": "        # TODO: read on each host, instead of only the coordinator"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\optimizer.py",
    "line_number": 47,
    "line": "# TODO: Update docstrings for optimizer.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\optimizer.py",
    "line_number": 197,
    "line": "            # TODO: The ReadItems will have a displaced MetadataIndex, fix it."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\optimizer.py",
    "line_number": 198,
    "line": "            # TODO: we should change _create_sharded_read_items to have more ergonomic API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\planner_helpers.py",
    "line_number": 358,
    "line": "    # TODO: let state_dict_util._iterate_state_dict() to support in place option"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\state_dict.py",
    "line_number": 505,
    "line": "        # TODO: make this faster."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\state_dict.py",
    "line_number": 863,
    "line": "            # TODO: check if value is the same if exists."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\state_dict.py",
    "line_number": 1305,
    "line": "# TODO: correct the state_dict function signature."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\state_dict.py",
    "line_number": 1306,
    "line": "# TODO: this API is not yet fully tested. Make it private"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\state_dict.py",
    "line_number": 1360,
    "line": "# TODO: correct the load_state_dict function signature."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\state_dict.py",
    "line_number": 1361,
    "line": "# TODO: this API is not yet fully tested. Make it private"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\state_dict_loader.py",
    "line_number": 40,
    "line": "        # TODO: test returning `load` here instead."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\state_dict_saver.py",
    "line_number": 45,
    "line": "    # TODO: test returning `save` here instead."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\storage.py",
    "line_number": 161,
    "line": "        TODO: provide an example"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\utils.py",
    "line_number": 386,
    "line": "# TODO: integrate with distributed logging flag"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\_dedup_tensors.py",
    "line_number": 33,
    "line": "# TODO add docstring for dedup_tensors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\_fsspec_filesystem.py",
    "line_number": 76,
    "line": "# TODO: add the dcp.async_save mixin"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\_nested_dict.py",
    "line_number": 17,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\_nested_dict.py",
    "line_number": 27,
    "line": "# TODO: Update Docstring for nested_dict.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\_sharded_tensor_utils.py",
    "line_number": 19,
    "line": "# TODO: We need to refactor this code."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\_traverse.py",
    "line_number": 35,
    "line": "# TODO: update docstring for traverse.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\checkpoint\\_traverse.py",
    "line_number": 186,
    "line": "        # TODO: add local offset for _local_tensor in print_nested."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\elastic\\agent\\server\\api.py",
    "line_number": 81,
    "line": "    # TODO @kiuk - make entrypoint a required field"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\elastic\\agent\\server\\api.py",
    "line_number": 506,
    "line": "        # TODO: BC - specific to static rdzv and can be simplifed further"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\elastic\\agent\\server\\api.py",
    "line_number": 664,
    "line": "        # TODO after stopping workers, wait at least monitor_interval*2 for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\elastic\\multiprocessing\\api.py",
    "line_number": 451,
    "line": "        # TODO log_line_prefixes can be exanded too"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\elastic\\rendezvous\\api.py",
    "line_number": 83,
    "line": "        # TODO swap to collectives comms API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\elastic\\rendezvous\\etcd_rendezvous.py",
    "line_number": 163,
    "line": "        # TODO: look into using weakref here instead."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\elastic\\rendezvous\\etcd_rendezvous.py",
    "line_number": 212,
    "line": "# TODO: we should probably handle a few additional errors,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\elastic\\rendezvous\\etcd_rendezvous.py",
    "line_number": 270,
    "line": "        # TODO: look into using weakref here instead."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\elastic\\rendezvous\\etcd_rendezvous.py",
    "line_number": 946,
    "line": "        # TODO: implement timeout"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\elastic\\utils\\distributed.py",
    "line_number": 100,
    "line": "            # TODO properly map the exceptions in pybind (c10d/init.cpp)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_common_utils.py",
    "line_number": 120,
    "line": "        # TODO: Move all the attributes to this class to enable typing for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_common_utils.py",
    "line_number": 201,
    "line": "    # TODO: This is a temporary hack for differentiate between code paths."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_common_utils.py",
    "line_number": 244,
    "line": "    # TODO: Explicitly replacing the checkpoint wrapper prefix is not ideal as"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_common_utils.py",
    "line_number": 343,
    "line": "                    # TODO: Remove this hack once DMP + FSDP is not supported."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_common_utils.py",
    "line_number": 428,
    "line": "                    # TODO: Remove this hack once DMP + FSDP is not supported."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_common_utils.py",
    "line_number": 502,
    "line": "            # TODO: We need to run this mixed precision ignored module in fp32,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_common_utils.py",
    "line_number": 554,
    "line": "        # TODO(voz): Extend a dynamo util to answer the above, unify the codepaths here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_exec_order_utils.py",
    "line_number": 81,
    "line": "        # TODO (awgu): We can broadcast the metadata of rank 0's `all_handles`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_exec_order_utils.py",
    "line_number": 215,
    "line": "            # TODO (awgu): Since every module has at most one handle in the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_exec_order_utils.py",
    "line_number": 219,
    "line": "                # TODO(voz): Don't graph break on this - dynamo hates the n1 != n2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_exec_order_utils.py",
    "line_number": 245,
    "line": "                # TODO(voz): Don't graph break on this - dynamo hates the i1 != i2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_flat_param.py",
    "line_number": 117,
    "line": "# TODO: Define this for now to avoid circular imports. See if we can remove."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_flat_param.py",
    "line_number": 1570,
    "line": "                # TODO (awgu): Gradient accumulation outside `no_sync()`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_flat_param.py",
    "line_number": 1611,
    "line": "            # TODO (rohan-varma): test for full precision with keep_low_precision_grads"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_flat_param.py",
    "line_number": 1620,
    "line": "        # TODO (awgu): We should replace these conditional checks to encode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_flat_param.py",
    "line_number": 1789,
    "line": "                # TODO: Change `_unpadded_unsharded_size` if we change the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_flat_param.py",
    "line_number": 2297,
    "line": "        # TODO: If we want to handle shared parameters, we need to re-generate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_init_utils.py",
    "line_number": 81,
    "line": "# TODO (awgu): Refactor this later"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_init_utils.py",
    "line_number": 324,
    "line": "    # TODO: FSDP's contract for buffers is not well-defined. They are"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_init_utils.py",
    "line_number": 526,
    "line": "    # TODO: we need to add additional check once we support FSDP + PiPPy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_init_utils.py",
    "line_number": 695,
    "line": "            # TODO: We may relax this by taking the FSDP instance's wrapped"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_init_utils.py",
    "line_number": 871,
    "line": "    # TODO: We need to establish a contract for FSDP and buffers. For now, we"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_init_utils.py",
    "line_number": 1089,
    "line": "# TODO: See how to deprecate!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_optim_utils.py",
    "line_number": 1453,
    "line": "        # TODO: This solution is not general and only apply to PTD TP solution."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_optim_utils.py",
    "line_number": 1753,
    "line": "                # TODO: it is unclear if we need to do the same check with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_runtime_utils.py",
    "line_number": 319,
    "line": "            # But maybe we need to? TODO(voz): Look into this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_runtime_utils.py",
    "line_number": 586,
    "line": "        # TODO: Do not use the side stream for tensor copies for now; investigate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_runtime_utils.py",
    "line_number": 790,
    "line": "    # TODO: Post-backward prefetching does not support the multiple handles"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_runtime_utils.py",
    "line_number": 967,
    "line": "    # TODO: Investigate why `NO_SHARD` breaks correctness when using"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_runtime_utils.py",
    "line_number": 969,
    "line": "    # TODO (rohan-varma): When CPU offload and optimizer overlap,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_runtime_utils.py",
    "line_number": 1000,
    "line": "                # TODO (rohan-varma): For CPU offload, this unfortunately"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_runtime_utils.py",
    "line_number": 1090,
    "line": "        # TODO (rohan-varma): this also waits for the overlapped optimizer step to finish"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_runtime_utils.py",
    "line_number": 1133,
    "line": "            # TODO: This already-resharded check is brittle:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_state_dict_utils.py",
    "line_number": 151,
    "line": "    # TODO: need to check if this is always correct for composable FSDP."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_state_dict_utils.py",
    "line_number": 445,
    "line": "    # TODO: Add DTensor state_dict support for LOCAL_STATE_DICT."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_state_dict_utils.py",
    "line_number": 502,
    "line": "    # TODO: Add DTensor state_dict support for LOCAL_STATE_DICT."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_state_dict_utils.py",
    "line_number": 622,
    "line": "            continue  # TODO: Improve unittesting for state_dict finetuning"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_traversal_utils.py",
    "line_number": 39,
    "line": "    # TODO: Add any other composable APIs that are mutually exclusive."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_traversal_utils.py",
    "line_number": 46,
    "line": "# TODO (awgu): We may be able to remove this function if we retired the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_unshard_param_utils.py",
    "line_number": 83,
    "line": "        # TODO: figure out the case for the composable APIs."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_unshard_param_utils.py",
    "line_number": 98,
    "line": "        # TODO: figure out the case for the composable APIs."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_unshard_param_utils.py",
    "line_number": 144,
    "line": "        # TODO: Rank 0 can broadcast the `FlatParameter` to allow all ranks to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\fsdp\\_wrap_utils.py",
    "line_number": 43,
    "line": "    # TODO: We may relax this no-nested-wrapping constraint to support manual"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\nn\\api\\remote_module.py",
    "line_number": 262,
    "line": "            # TODO: We need to change this to rpc.remote, and make it async (see the else branch below)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\nn\\jit\\templates\\remote_module_template.py",
    "line_number": 61,
    "line": "# TODO: Merge these two templates together in the future once TorchScript syntax is improved."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\optim\\apply_optimizer_in_backward.py",
    "line_number": 73,
    "line": "            # TODO: Remove these attributes once we have a better way of accessing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\optim\\functional_adagrad.py",
    "line_number": 61,
    "line": "        # TODO: no union or any types in TorchScript, make step a scalar tensor instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\optim\\functional_sgd.py",
    "line_number": 59,
    "line": "        # TODO: Once step_param interface is robust, refactor step to call"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\optim\\named_optimizer.py",
    "line_number": 68,
    "line": "    TODO: Add tutorial for _NamedOptimizer."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\optim\\named_optimizer.py",
    "line_number": 69,
    "line": "    TODO: Add documentation in the docstring for the public attributes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\optim\\named_optimizer.py",
    "line_number": 323,
    "line": "        # TODO(chienchin): This API should be FSDP agnostic and should support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\optim\\named_optimizer.py",
    "line_number": 332,
    "line": "        # TODO(chienchin): This API should be FSDP agnostic and should support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\optim\\optimizer.py",
    "line_number": 32,
    "line": "# TODO (wanchaol): remove this once we added TorchScript"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\optim\\optimizer.py",
    "line_number": 63,
    "line": "# TODO (wanchaol): remove/merge this with ScriptLocalOptimizer once"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\optim\\optimizer.py",
    "line_number": 115,
    "line": "    # TODO: improve error propagation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\optim\\zero_redundancy_optimizer.py",
    "line_number": 1535,
    "line": "        # TODO: Manually add `self.param_groups` if using a functional"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\microbatch.py",
    "line_number": 166,
    "line": "                # TODO: check type of v. If it's a tensor, use chunk (or debug mask)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\microbatch.py",
    "line_number": 300,
    "line": "    # TODO: _debug_mask_minibatches"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 52,
    "line": "    # TODO(whc) rename to _ActType?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 228,
    "line": "        # TODO: enable this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 584,
    "line": "        # TODO: later replace this with lazy shape inference during forward"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1023,
    "line": "                    # TODO we can avoid send/recv if the 2 stages are on the same rank."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1088,
    "line": "        # TODO: later replace this with lazy shape inference during forward"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1103,
    "line": "        # TODO(whc) this should be merged with the logic in test_schedule.py#L453-L554"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1223,
    "line": "        TODO: Does not use sorted_batch_isend_irecv(). As a result, this schedule does"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1239,
    "line": "            # TODO: assumption that stages only communicate from distances of +1/-1 (no skip connections)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1301,
    "line": "                                # TODO: We are assuming that stage will always receive from stage-1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1337,
    "line": "                                # TODO: We are assuming that stage will always receive from stage+1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1391,
    "line": "            # TODO what level of validation should we offer for compute+comms schedule?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1430,
    "line": "        # TODO should there be an option to dump the compute_only schedule from PipelineScheduleRuntime? It's possible"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1450,
    "line": "        TODO: Does not use sorted_batch_isend_irecv(). As a result, this schedule does"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1508,
    "line": "                # TODO(whc) it's not actually safe to use _batch_p2p here in the uncommon case the model has skip-connections,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1597,
    "line": "                # TODO(whc) what is the best practice for printing a multiline log?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1765,
    "line": "            # TODO: we don't need to always append, after all 1f1b are finished we can stop appending None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\schedules.py",
    "line_number": 1825,
    "line": "        # TODO: is this limitation a must?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 258,
    "line": "        # TODO: this is needed for backward_maybe_with_nosync"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 292,
    "line": "            )  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 353,
    "line": "                )  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 389,
    "line": "                )  # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 665,
    "line": "            # TODO: We may want to change our semantics so we are allowed to ignore"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 687,
    "line": "                # TODO: we dont need to save this, add to dw_runner?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 723,
    "line": "                # TODO: figure out a better way to do this:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 740,
    "line": "            # TODO why is there a separate recv_info for each pipeline chunk?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 750,
    "line": "            # TODO- need a mapping of kwarg to position in self.args_recv_info"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 754,
    "line": "        # TODO- need a mapping of kwarg to position in self.args_recv_info"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 1027,
    "line": "            # TODO: otherwise needs grad accumulation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 1191,
    "line": "        # TODO: Assumes prev_stage == rank - 1 and next_stage == rank + 1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 1205,
    "line": "            # TODO: send/recv should take a group, rather than use the default group"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 1214,
    "line": "        # TODO: if forward fails raise a more descriptive error explaining which stage failed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 1246,
    "line": "        dw_builder: TODO clean up comments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\stage.py",
    "line_number": 1301,
    "line": "        # TODO: create args_recv_info lazily? (same needed for PipelineStage)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\_backward.py",
    "line_number": 237,
    "line": "        # TODO: Handle case where intermediate can have multiple outputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\_backward.py",
    "line_number": 358,
    "line": "# TODO: handling requires_grad=False dynamically. Can we analyze this during initial"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\_IR.py",
    "line_number": 33,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\_IR.py",
    "line_number": 118,
    "line": "    # Collect metadata about tuple output values. TODO: move this to split_module or FX IR"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\_IR.py",
    "line_number": 533,
    "line": "        # TODO: is there a way not to hard wire init?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\_IR.py",
    "line_number": 661,
    "line": "        # TODO: investigate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\_IR.py",
    "line_number": 731,
    "line": "        # TODO: what does split do with module invocations? does it move the modules"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\_IR.py",
    "line_number": 754,
    "line": "        # TODO: backport this into split_module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\_IR.py",
    "line_number": 832,
    "line": "                    persistent=True,  # TODO: handle non-persistent buffer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\_IR.py",
    "line_number": 1063,
    "line": "        # TODO? Not sure yet."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\pipelining\\_IR.py",
    "line_number": 1171,
    "line": "    # TODO: make this implementation out-of-place?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\rpc\\backend_registry.py",
    "line_number": 302,
    "line": "            # TODO: make async?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\rpc\\backend_registry.py",
    "line_number": 379,
    "line": "        # TODO: add try-except and destroy _agent in all processes if any fails."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\placement_types.py",
    "line_number": 414,
    "line": "    TODO: strided sharding needs to work fine with uneven sharding. Now it forbids"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\placement_types.py",
    "line_number": 416,
    "line": "    TODO: we should remove _StridedShard placement once we can unify it with Shard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\placement_types.py",
    "line_number": 425,
    "line": "            # TODO: this is to avoid extra all-gather in dtensor op dispatch"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\placement_types.py",
    "line_number": 453,
    "line": "        TODO: currently _StridedShard does not support padding"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\placement_types.py",
    "line_number": 624,
    "line": "        # TODO: if the reduce_op is min/max, etc. the _partition_value should be a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_api.py",
    "line_number": 154,
    "line": "            # TODO: support uneven sharding when global shape/stride not passed, by"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_api.py",
    "line_number": 158,
    "line": "            # TODO: See if we need to make this run_check logic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_api.py",
    "line_number": 206,
    "line": "            # TODO: return the redistributed local tensor directly without"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_api.py",
    "line_number": 210,
    "line": "        # TODO: backward is also differentiable now, add a test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_api.py",
    "line_number": 287,
    "line": "        # TODO: consider all_gather the local tensors for better debugging"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_api.py",
    "line_number": 682,
    "line": "    # TODO: the value assignment to global variable is not the ideal solution"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_api.py",
    "line_number": 725,
    "line": "    # TODO(xilun): address sharding order"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_collective_utils.py",
    "line_number": 54,
    "line": "        # TODO: This logs way too much"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_collective_utils.py",
    "line_number": 68,
    "line": "    # TODO: enable async op for shard_dim_alltoall"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_collective_utils.py",
    "line_number": 98,
    "line": "    # TODO: Ideally we should use the meta tensor way"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_collective_utils.py",
    "line_number": 154,
    "line": "    # TODO: Ideally we should use the meta tensor way"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_collective_utils.py",
    "line_number": 267,
    "line": "                # TODO: see if we need to tweak this or offer a way for user"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_collective_utils.py",
    "line_number": 328,
    "line": "        # TODO: see if we want to support this once there's cross mesh communication"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_dispatch.py",
    "line_number": 356,
    "line": "                    # TODO: try replicate dtensor spec in missing dimension would work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_op_schema.py",
    "line_number": 222,
    "line": "    TODO: make this a frozen dataclass"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_op_schema.py",
    "line_number": 256,
    "line": "        # TODO: see if we should merge this with args_spec"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_random.py",
    "line_number": 44,
    "line": "        # TODO: Logs way too much"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_redistribute.py",
    "line_number": 164,
    "line": "        # TODO: alltoall/permute reshuffling to change device_mesh if they are not the same"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_sharding_prop.py",
    "line_number": 210,
    "line": "        # scalar. TODO: figure out a better way to handle this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_shards_wrapper.py",
    "line_number": 137,
    "line": "        # TODO, do we need to change the shape of associated offsets?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_tp_conv.py",
    "line_number": 15,
    "line": "    # TODO: whether there requires data exchange is currently determined by padding"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_utils.py",
    "line_number": 17,
    "line": "# TODO: audit existing code base to see if we can safely remove this API."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_utils.py",
    "line_number": 152,
    "line": "        # TODO: change this function to correctly address this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_utils.py",
    "line_number": 153,
    "line": "        # TODO: this logic can be applied to contiguous sharding as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\experimental\\_attention.py",
    "line_number": 32,
    "line": "# TODO: expose a single API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\experimental\\_attention.py",
    "line_number": 244,
    "line": "    # TODO(fegin): figure out why this is a requirement since SDPA does not have"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\experimental\\_attention.py",
    "line_number": 294,
    "line": "    # TODO: remove the context parallel strategy from the default propagation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\experimental\\_attention.py",
    "line_number": 672,
    "line": "        # TODO(d4l3k); this should be Shard(2), need to fix Linear layer rules"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\experimental\\_attention.py",
    "line_number": 764,
    "line": "    # TODO: provide a more robust way to replace SDPA."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\experimental\\_func_map.py",
    "line_number": 137,
    "line": "                # TODO: the current code doesn't consider the uneven sharding case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\experimental\\_register_sharding.py",
    "line_number": 96,
    "line": "        # TODO: handle out variant ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\parallel\\api.py",
    "line_number": 77,
    "line": "        # TODO: we should allow user to pass in the default seed from a config"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\parallel\\ddp.py",
    "line_number": 42,
    "line": "    # TODO: To add perf optimizations to this iterations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\parallel\\ddp.py",
    "line_number": 102,
    "line": "    # TODO: To add test cases and ensure that it works for nested modules"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\parallel\\fsdp.py",
    "line_number": 347,
    "line": "            # TODO: this is a short term fix and we should make the get_unflat_views"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\parallel\\style.py",
    "line_number": 100,
    "line": "        # TODO: figure out dynamo support for instance method and switch this to instance method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\parallel\\style.py",
    "line_number": 467,
    "line": "                # TODO: re-enable the check once we fix the compile path"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\parallel\\style.py",
    "line_number": 605,
    "line": "                    # TODO: re-enable the check once we fix the compile path"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\parallel\\_utils.py",
    "line_number": 28,
    "line": "    # TODO: Will follow up with dynamo POC to make warnings.warn working with dynamo."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\utils.py",
    "line_number": 130,
    "line": "        # TODO: maybe we should determine is_shardable based on"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_common_rules.py",
    "line_number": 97,
    "line": "                # TODO: further merge the sharding properly (i.e. reshard one input to replicate)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_common_rules.py",
    "line_number": 163,
    "line": "            # TODO: consider a more advanced heuristic to pick the best sharding"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_einsum_strategy.py",
    "line_number": 112,
    "line": "            # TODO: see if this is valid for the submesh case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_einsum_strategy.py",
    "line_number": 168,
    "line": "    # TODO: filter out invalid strategies, at this point we generate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_math_ops.py",
    "line_number": 425,
    "line": "        # TODO: The diagonal ops can have an improved sharding strategy for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_math_ops.py",
    "line_number": 816,
    "line": "        # TODO: we can avoid forcing the redistribution once we figure out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_math_ops.py",
    "line_number": 833,
    "line": "            # TODO: we can avoid forcing the redistribution once we figure out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_math_ops.py",
    "line_number": 850,
    "line": "            # TODO: we can avoid forcing the redistribution once we figure out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_math_ops.py",
    "line_number": 918,
    "line": "        # TODO: change the strategy to the following rule."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_math_ops.py",
    "line_number": 924,
    "line": "        # TODO: now grad_out spec follows input spec. we may need"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_math_ops.py",
    "line_number": 970,
    "line": "            # TODO: now d_weight spec follows input spec w/ a reduction."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_math_ops.py",
    "line_number": 1054,
    "line": "    # TODO: topk on sharded dim requries non-trival reduction, address it later"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_matrix_ops.py",
    "line_number": 168,
    "line": "    # TODO: sdpa might be a good candidate for us to explore decomposed sharding propagation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_matrix_ops.py",
    "line_number": 321,
    "line": "    # TODO(d4l3k); implement a more correct strategy for constant_pad_nd"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_pointwise_ops.py",
    "line_number": 539,
    "line": "# TODO: add all for_each ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_random_ops.py",
    "line_number": 34,
    "line": "            # TODO: figure out how inplace random op should behave when it's partial"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_tensor_ops.py",
    "line_number": 321,
    "line": "    #   TODO: Ideally we'd like to make sure the output is re-sharded afterwards to keep input sharding."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_tensor_ops.py",
    "line_number": 382,
    "line": "    # TODO: see if we can support input sharding pattern"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_tensor_ops.py",
    "line_number": 610,
    "line": "    TODO: exception: when the dtype of second input is \"bool\", then a torch.nonzero needs to be triggered first."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_tensor_ops.py",
    "line_number": 743,
    "line": "    # TODO: tensor to split cannot have Partial"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_tensor_ops.py",
    "line_number": 753,
    "line": "    # TODO: just like slice op, split replicates before"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\tensor\\_ops\\_view_ops.py",
    "line_number": 612,
    "line": "            # TODO: optimize this. we shouldn't simply blindly replicate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\contract.py",
    "line_number": 21,
    "line": "# TODO: we can add additional info to RegistryItem to share across APIs. E.g.,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\contract.py",
    "line_number": 198,
    "line": "            # TODO: verify that installed distributed paradigms are compatible with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\contract.py",
    "line_number": 206,
    "line": "                {},  # TODO(@yhcharles): this is a temporary fix, need a better way"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\replicate.py",
    "line_number": 23,
    "line": "        # TODO(@fegin): this variable is originally create for testing, we"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\replicate.py",
    "line_number": 196,
    "line": "    # TODO(fegin): using kwargs is not a good idea if we would like to make"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\replicate.py",
    "line_number": 225,
    "line": "            # TODO: This is a temporary work around to enable DDP + TP."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\fsdp\\fully_shard.py",
    "line_number": 373,
    "line": "        # TODO: Remove this padding logic once DTensor pads the local tensor:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\fsdp\\_fsdp_param.py",
    "line_number": 238,
    "line": "        # TODO: Remove this padding logic once DTensor pads the local tensor:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\fsdp\\_fsdp_param.py",
    "line_number": 252,
    "line": "        # TODO: Replace the sharded DTensor parameter construction logic with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\fsdp\\_fsdp_param.py",
    "line_number": 254,
    "line": "        # TODO: Simplify the following sharded parameter padding logic after"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\fsdp\\_fsdp_param.py",
    "line_number": 303,
    "line": "            # TODO: enable uneven sharding for FSDP+TP"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_composable\\fsdp\\_fsdp_param.py",
    "line_number": 573,
    "line": "        # TODO: Prefer this DTensor to be read-only and generalize the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharded_optim\\api.py",
    "line_number": 80,
    "line": "        # TODO: implement state_dict"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharded_optim\\api.py",
    "line_number": 90,
    "line": "        # TODO: implement load_state_dict"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharded_optim\\api.py",
    "line_number": 97,
    "line": "        # TODO: implement add_param_group"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharded_tensor\\api.py",
    "line_number": 438,
    "line": "            # TODO make it as a view of out tensor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharded_tensor\\api.py",
    "line_number": 508,
    "line": "        # TODO: make this a __torch_function__ op once ShardedTensor becomes a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharded_tensor\\api.py",
    "line_number": 866,
    "line": "        # TODO: figure out what the API should behave when some rank have no shard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharded_tensor\\_ops\\tensor_ops.py",
    "line_number": 31,
    "line": "# TODO: set grad with a ShardedTensor that consists of all local grads"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharding_spec\\api.py",
    "line_number": 182,
    "line": "        # TODO: figure out a generic and efficient way to scatter the shards for EnumerableShardingSpec"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharding_spec\\chunk_sharding_spec.py",
    "line_number": 67,
    "line": "        # TODO: support named dimension"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharding_spec\\_internals.py",
    "line_number": 154,
    "line": "        # TODO: Can we improve this error message to point out the gaps?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharding_spec\\chunk_sharding_spec_ops\\embedding.py",
    "line_number": 288,
    "line": "    # TODO: Make the result a PartialTensor."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_shard\\sharding_spec\\chunk_sharding_spec_ops\\embedding_bag.py",
    "line_number": 408,
    "line": "    # TODO: Make the result a PartialTensor and move the logic below there."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_symmetric_memory\\__init__.py",
    "line_number": 55,
    "line": "    # TODO: check device connectiivity"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_symmetric_memory\\__init__.py",
    "line_number": 994,
    "line": "    TODO(yifu): the SM-based copy can be avoided with a list-based reduction"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_tensor\\api.py",
    "line_number": 6,
    "line": "TODO: throw warnings when this module imported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_tensor\\placement_types.py",
    "line_number": 6,
    "line": "TODO: throw warnings when this module imported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_tensor\\__init__.py",
    "line_number": 14,
    "line": "    # TODO: _shards_wrapper/_utils here mainly for checkpoint BC, remove them"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_tools\\fsdp2_mem_tracker.py",
    "line_number": 356,
    "line": "        # TODO(@sanketpurandare): This will need to be modified after this PR (https://github.com/pytorch/pytorch/pull/127786)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_tools\\runtime_estimator.py",
    "line_number": 218,
    "line": "        # TODO: also check metadata change on inputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_tools\\runtime_estimator.py",
    "line_number": 449,
    "line": "        # TODO: @sanketpurandare: Flatten tensors by desugaring the tensor subclasses"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributed\\_tools\\runtime_estimator.py",
    "line_number": 450,
    "line": "        # TODO: @sanketpurandare: Add logic for incorporating communication time"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributions\\constraint_registry.py",
    "line_number": 251,
    "line": "# TODO define a bijection for LowerCholeskyTransform"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributions\\kl.py",
    "line_number": 552,
    "line": "# TODO: Add Beta-Laplace KL Divergence"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributions\\kl.py",
    "line_number": 591,
    "line": "# TODO: Add ContinuousBernoulli-Laplace KL Divergence"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributions\\kl.py",
    "line_number": 650,
    "line": "# TODO: Add Exponential-Laplace KL Divergence"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributions\\kl.py",
    "line_number": 695,
    "line": "# TODO: Add Gamma-Laplace KL Divergence"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributions\\kl.py",
    "line_number": 727,
    "line": "# TODO: Add Gumbel-Laplace KL Divergence"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributions\\kl.py",
    "line_number": 824,
    "line": "# TODO: Add Pareto-Laplace KL Divergence"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributions\\kl.py",
    "line_number": 921,
    "line": "# TODO: Uniform-Laplace KL Divergence"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributions\\laplace.py",
    "line_number": 76,
    "line": "        # TODO: If we ever implement tensor.nextafter, below is what we want ideally."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributions\\uniform.py",
    "line_number": 31,
    "line": "    # TODO allow (loc,scale) parameterization to allow independent constraints."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\distributions\\utils.py",
    "line_number": 157,
    "line": "    * property when Sphinx autodoc looks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\dynamic_shapes.py",
    "line_number": 159,
    "line": "        # TODO(avik): use sympy value range analysis instead?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\dynamic_shapes.py",
    "line_number": 179,
    "line": "        # TODO(avik): use sympy value range analysis instead?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\dynamic_shapes.py",
    "line_number": 319,
    "line": "        # TODO: A better way is needed. Currently we use 't_id' to map the constraint,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\dynamic_shapes.py",
    "line_number": 598,
    "line": "        # TODO(avik): check that shape is indeed a Shape"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\dynamic_shapes.py",
    "line_number": 649,
    "line": "    # TODO(avik): raise an error in the future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\dynamic_shapes.py",
    "line_number": 850,
    "line": "            # TODO(pianpwk): deprecate mark_dynamic() usage for export"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\exported_program.py",
    "line_number": 201,
    "line": "        # TODO (tmanlaibaatar) make this utility function and share it with functional_tensor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\exported_program.py",
    "line_number": 242,
    "line": "                # TODO (tmanlaibaatar)https://github.com/pytorch/pytorch/issues/129430"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\exported_program.py",
    "line_number": 310,
    "line": "    # TODO Merge this path with inference IR decomp, but it will require some additional work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\exported_program.py",
    "line_number": 403,
    "line": "    # TODO(zhxhchen17) Return the new graph_signature directly."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\exported_program.py",
    "line_number": 624,
    "line": "    # TODO unfortunately preserving graph-level metadata is not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\exported_program.py",
    "line_number": 1024,
    "line": "        # TODO(zhxchen17) Remove this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\exported_program.py",
    "line_number": 1119,
    "line": "    # TODO: remove this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\exported_program.py",
    "line_number": 1128,
    "line": "    # TODO(zhxchen17) Formalize this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\unflatten.py",
    "line_number": 421,
    "line": "        # TODO(zhxchen17) We can register modules ahead of time instead of reorder later."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\unflatten.py",
    "line_number": 487,
    "line": "            # TODO(suo): untangle this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\unflatten.py",
    "line_number": 491,
    "line": "                # TODO(suo): The FlatArgsAdapter returns a list of flat args,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\unflatten.py",
    "line_number": 624,
    "line": "    # TODO: support skip connection by inlining the child module."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\unflatten.py",
    "line_number": 1128,
    "line": "    # TODO Can be optimized by adding submodules ahead of time."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\_trace.py",
    "line_number": 276,
    "line": "                    # TODO Figure out why sometimes we have root sometimes we don't."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\_trace.py",
    "line_number": 298,
    "line": "                    except Exception:  # TODO(zhxchen17) Remove this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\_trace.py",
    "line_number": 600,
    "line": "    transform=lambda x: x,  # TODO(zhxchen17) Revisit if this is needed later."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\_trace.py",
    "line_number": 657,
    "line": "    # TODO unfortunately preserving graph-level metadata and output node's meta"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\_trace.py",
    "line_number": 883,
    "line": "    TODO(pianpwk): make this a consistent node-level check once nn_module_stack is populated for cond submodules."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\_trace.py",
    "line_number": 1712,
    "line": "# TODO (tmanlaibaatar) We need to preserve aten.to here somehow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\export\\_unlift.py",
    "line_number": 259,
    "line": "    # TODO(suo) this should not be optional, but is since we still ahve"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\node.py",
    "line_number": 44,
    "line": "# TODO: Either refactor this into 2 functions 1 dce for functional graphs and 1 dce for all graphs,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\node.py",
    "line_number": 523,
    "line": "                # TODO: THIS IS BROKEN: _get_qualified_name calls `__name__`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\operator_schemas.py",
    "line_number": 74,
    "line": "        # TODO: Figure out if this is safe. It seems like when generating the type signatures for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\operator_schemas.py",
    "line_number": 199,
    "line": "            # todo(chilli): Figure out the right way for mypy to handle this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\proxy.py",
    "line_number": 101,
    "line": "    \"quantization_tag\",  # TODO deprecated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\proxy.py",
    "line_number": 102,
    "line": "    \"_numeric_debug_handle\",  # TODO deprecated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\proxy.py",
    "line_number": 149,
    "line": "        # TODO node_name_to_scope will be depreciated in favor of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\proxy.py",
    "line_number": 523,
    "line": "                # TODO: Define how to symbolically trace HigherOrderOperators"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\_lazy_graph_module.py",
    "line_number": 130,
    "line": "    # TODO: we shold handle __reduce_deploy__ the same way as __reduce_package__,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\_symbolic_trace.py",
    "line_number": 418,
    "line": "            # TODO: binary search"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\_symbolic_trace.py",
    "line_number": 658,
    "line": "            # TODO: type annotations for *args and **kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\accelerator_partitioner.py",
    "line_number": 355,
    "line": "                # TODO: add different size support for sparse_nn_partition"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\graph_gradual_typechecker.py",
    "line_number": 186,
    "line": "    # TODO. We leave it like this till we add a type to represent tensor sizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\merge_matmul.py",
    "line_number": 117,
    "line": "        # TODO: Properly handle aliasing caused by get_attr. For now,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\meta_tracer.py",
    "line_number": 195,
    "line": "            # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\optimization.py",
    "line_number": 122,
    "line": "# TODO: Determine whether this can be removed after type inference."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 406,
    "line": "            # TODO: This doesn't properly track storages.  A more robust"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 779,
    "line": "    # TODO: we could use types to test this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 822,
    "line": "        # TODO: maybe constant SymInts should also be allowed?  Not sure if"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 1197,
    "line": "# TODO: Make downstream users of this work with OperatorBase"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 1250,
    "line": "            # TODO(tmanlaibaatar): we should systematically couple it with expoert verifier,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 1410,
    "line": "# TODO: I'm not sure what the point of this class is; you can just"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 1433,
    "line": "        # TODO handle case where the first character of target is '*'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 1961,
    "line": "                # TODO: it would be nice to line these up with the names"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 2007,
    "line": "                # TODO: Would be nice to fix this at the source..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 2040,
    "line": "        # TODO: kind of a bad way to do it, should maybe figure out a better way"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 2119,
    "line": "# TODO: this is a legacy name, there is only ever one proxy mode as it's an"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\proxy_tensor.py",
    "line_number": 2152,
    "line": "        # TODO: properly compute types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\schema_type_annotation.py",
    "line_number": 49,
    "line": "                # TODO: can we emit the union of these? What are the implications on TorchScript"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 133,
    "line": "        # TODO: There's a ref-cycle here (wrapped_f -> cumulative_cache_info"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 264,
    "line": "    # TODO: do boolean equality test too, see"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 272,
    "line": "        # (TODO: should be a helper for this, maybe sym_eq?  That"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 620,
    "line": "                # TODO: Determine if this is correct"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 671,
    "line": "                # TODO: DivideByKey needs to test divisibility at runtime!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 869,
    "line": "    TODO: Make Dynamo handle this appropriately if this is seen in Dynamo-ed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 874,
    "line": "    TODO: I didn't support min/max because I didn't have a use case where this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 919,
    "line": "    that doesn't have a lot of safety guarantees (TODO: provide higher level"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 1006,
    "line": "        # TODO: check perf implications of this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 1125,
    "line": "        # TODO: better printing for -oo and oo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 1306,
    "line": "    # TODO: add storage offset and stride symbolic_context"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 1339,
    "line": "# TODO(voz): Shape env validation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 1363,
    "line": "    # TODO(voz): consider a weakref to the shape_env here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 1411,
    "line": "# TODO: Deduplicate this with torch/_prims_common/__init__.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 1775,
    "line": "        # TODO(avik): https://github.com/pytorch/pytorch/issues/101093"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 2757,
    "line": "        # TODO: Shouldn't we install a guard if the symbol is backed?  Or is the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 2775,
    "line": "        # TODO: this does not install a deferred runtime assert yet"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 2777,
    "line": "        # TODO: Maybe dedupe this with _maybe_guard_rel?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 2789,
    "line": "            # TODO: Actually, we can support this as long as one of them is a symbol."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 3118,
    "line": "        # TODO: make this configurable from outside symbolic_context; we made a symbolic_context"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 3123,
    "line": "        # TODO: This should be DYNAMIC, using DUCK for BC"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 3451,
    "line": "            # TODO: maybe put the hint somewhere"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 3746,
    "line": "        # TODO: Make this more efficient by binding all the size/stride/offsets"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 4140,
    "line": "                        # TODO: With int_oo, I think this condition is a noop"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 4397,
    "line": "                # TODO We could further canonicalize Eq ordering the lhs and rhs somehow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 4555,
    "line": "        # TODO: when unbacked_only, can sometimes early return even when there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 4591,
    "line": "        # TODO it would seem that this pass is not necessary given the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 4674,
    "line": "        # TODO: in a Dynamo context, having user code, and having the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 4706,
    "line": "            # TODO: Help text about how to use our runtime tests to fix this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 4790,
    "line": "            # TODO: Should we propagate size-like-ness?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 4959,
    "line": "                        # TODO: Maybe trivial solutions for int should also be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 4996,
    "line": "                            d = q / sympy.gcd(q, c)  # TODO: CleanDiv?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 5136,
    "line": "        # TODO: split conjunctions and evaluate them separately"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 5210,
    "line": "                # TODO: dedupe this with _maybe_evaluate_static"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 5275,
    "line": "                    # TODO: If we successfully eliminate a symbol via equality, it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 5354,
    "line": "        # TODO: split conjunctions and evaluate them separately"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\symbolic_shapes.py",
    "line_number": 5396,
    "line": "            # TODO: Do this in a way that is less janky than int(s.name[1:])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 59,
    "line": "# TODO: An incomplete list"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 427,
    "line": "        # TODO: use the file/line for some useful diagnostic on why a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 437,
    "line": "        # TODO: use the file/line for some useful diagnostic on why a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 447,
    "line": "        # TODO: use the file/line for some useful diagnostic on why a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 468,
    "line": "        # TODO: file/line here is very important, because the assert has been"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 499,
    "line": "        # TODO: use the file/line for some useful diagnostic on why a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 523,
    "line": "# TODO: this probably needs the sizes-strides eval functions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 929,
    "line": "# NB: There is a TODO in C++ to allow omitting the batch dim.  If that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 996,
    "line": "    # TODO: These could also be done with indicators, maybe it is better"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 1028,
    "line": "    # TODO: let C++ also take advantage of this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 1093,
    "line": "                # TODO: consider constant prop here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 1141,
    "line": "        # TODO: consider constant prop here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 1254,
    "line": "            # TODO: Remove the args construction below if a different sentinel is used by FX."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 1320,
    "line": "    # TODO: This is technically hotpath, but in the ideal end state"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 1341,
    "line": "            # TODO: this is an awful implementation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 1424,
    "line": "        # TODO: Remove eq and other relations from this list."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\sym_node.py",
    "line_number": 1440,
    "line": "            # TODO: remove these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\validator.py",
    "line_number": 352,
    "line": "            # TODO: Probably OK to relax this and allow lower precision"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\_config.py",
    "line_number": 30,
    "line": "# TODO: Perhaps consider allowing unions for the configs below (so you can hit"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\migrate_gradual_types\\constraint_generator.py",
    "line_number": 372,
    "line": "    # TODO: add the extra check mentioned here:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\migrate_gradual_types\\constraint_generator.py",
    "line_number": 395,
    "line": "        # TODO: review this rule; should input = dyn; output = dyn be included here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\migrate_gradual_types\\constraint_generator.py",
    "line_number": 521,
    "line": "            # TODO: we should figure out why there is a key-error here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\migrate_gradual_types\\constraint_generator.py",
    "line_number": 782,
    "line": "# TODO normalize index"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\migrate_gradual_types\\constraint_generator.py",
    "line_number": 886,
    "line": "        # TODO generate add constraints for scalar addition"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\experimental\\migrate_gradual_types\\constraint_transformation.py",
    "line_number": 141,
    "line": "    TODO: we have to check if this is the case for all HF models"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\fake_tensor_prop.py",
    "line_number": 45,
    "line": "                # TODO: How is it possible that we get a non fake tensor?  We"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\pass_manager.py",
    "line_number": 207,
    "line": "        # TODO(alexbeloi): add constraint management/validation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\reinplace.py",
    "line_number": 130,
    "line": "# TODO: this should be beefed up to be able to properly re-inplace with:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\reinplace.py",
    "line_number": 133,
    "line": "# TODO: we should also figure this info out using torchgen."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\reinplace.py",
    "line_number": 538,
    "line": "                # TODO: later, add the optimization for handling `copy_()` calls in the graph."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\runtime_assert.py",
    "line_number": 111,
    "line": "    # TODO: Request simplification on runtime asserts before emitting them"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\runtime_assert.py",
    "line_number": 240,
    "line": "                # TODO: Remove relaxing assert on unbacked_symint https://github.com/pytorch/pytorch/issues/119689"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\runtime_assert.py",
    "line_number": 250,
    "line": "                        # TODO: use ra.msg here, but it's pretty"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\runtime_assert.py",
    "line_number": 412,
    "line": "                    # TODO: some CSE when generating these nodes can probably"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\runtime_assert.py",
    "line_number": 463,
    "line": "                            # TODO: need to assert divisibility"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\runtime_assert.py",
    "line_number": 562,
    "line": "                        # TODO(pianpwk): calling sym_constrain_range_for_size or adding bound asserts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\split_module.py",
    "line_number": 335,
    "line": "        # TODO currently placeholders/parameters aren't put into random partitions,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\backends\\cudagraphs.py",
    "line_number": 12,
    "line": "    # TODO: why is submodules passed here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\backends\\cudagraphs.py",
    "line_number": 52,
    "line": "    # TODO: single node partition may be wrong due to the pessimization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\utils\\fuser_utils.py",
    "line_number": 134,
    "line": "            # TODO: do we really need copy the get_attr node into the graph?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\utils\\matcher_utils.py",
    "line_number": 91,
    "line": "        # TODO: assert pattern is a connected graph"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\utils\\matcher_utils.py",
    "line_number": 111,
    "line": "        # TODO(tmanlaibaatar) should probably make this actual API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\utils\\matcher_utils.py",
    "line_number": 213,
    "line": "        # TODO: use a more efficient way to check if gn is matched before: two-way dict"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\fx\\passes\\utils\\source_matcher_utils.py",
    "line_number": 76,
    "line": "        # TODO: Bypass \"torch_fn\" when \"source_fn_stack\" because now \"torch_fn\" can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\annotations.py",
    "line_number": 444,
    "line": "        # TODO: this is hack to recognize NumberType"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\annotations.py",
    "line_number": 450,
    "line": "        # TODO: Determine if the other cases need to be fixed as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\annotations.py",
    "line_number": 540,
    "line": "    # TODO: Consider not exporting these during wildcard import (reserve"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\frontend.py",
    "line_number": 264,
    "line": "    # TODO: proper overriding analysis when implementing class inheritance"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\frontend.py",
    "line_number": 393,
    "line": "# TODO: more robust handling of recognizing ignore context manager"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\frontend.py",
    "line_number": 527,
    "line": "        # TODO: add input, output validator"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\frontend.py",
    "line_number": 775,
    "line": "            # TODO: try to recover the location of else:? Python doesn't give us useful"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\supported_ops.py",
    "line_number": 9,
    "line": "# this file is for generating documentation using sphinx autodoc"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_builtins.py",
    "line_number": 126,
    "line": "    # TODO: add support for more ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_check.py",
    "line_number": 148,
    "line": "        # TODO @ansley: add `Union` once landed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_decompositions.py",
    "line_number": 96,
    "line": "# TODO: replace torch.sigmoid -> aten.sigmoid"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_monkeytype_config.py",
    "line_number": 66,
    "line": "    TODO: To remove this check once Union support lands."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_monkeytype_config.py",
    "line_number": 132,
    "line": "                    # TODO: To remove this check once Union suppport in TorchScript lands."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_recursive.py",
    "line_number": 32,
    "line": "# TODO: there should be a more principled way of doing this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_recursive.py",
    "line_number": 300,
    "line": "            # TODO: We should really error in this case, but its bc-breaking so"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_recursive.py",
    "line_number": 319,
    "line": "            # TODO: We should really error in this case, but its bc-breaking so"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_recursive.py",
    "line_number": 399,
    "line": "            # TODO: could add more detail here. For example, what the user should do"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_recursive.py",
    "line_number": 679,
    "line": "            # TODO: Why skip this? Because @torch.jit._overload_method will"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_recursive.py",
    "line_number": 685,
    "line": "        # TODO: we don't currently do this functions that are recursively"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_recursive.py",
    "line_number": 838,
    "line": "    (TODO add a link when the rules are published)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_script.py",
    "line_number": 840,
    "line": "                # TODO: we don't have _concrete_type set after load(), and in general we lose constant information."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_script.py",
    "line_number": 848,
    "line": "                # TODO: it's possible that the following is confusing:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_script.py",
    "line_number": 999,
    "line": "    # TODO MAKE SURE THAT DISABLING WORKS"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_serialization.py",
    "line_number": 169,
    "line": "    # TODO: Pretty sure this approach loses ConstSequential status and such"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 41,
    "line": "            # TODO: only assertion error is bound in C++ compilation right now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 96,
    "line": "            # TODO: only assertion error is bound in C++ compilation right now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 407,
    "line": "    # TODO: return self"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 613,
    "line": "        # TODO: handling of slice"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 619,
    "line": "        # TODO: handling of slice"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 626,
    "line": "        # todo: copy ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 680,
    "line": "    # TODO: look into rewriting with early return and getting loop unrolling to fire"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 700,
    "line": "    # TODO: assertions could be expanded with the error messages"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 1031,
    "line": "        # TODO: return self"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 1039,
    "line": "    # TODO: use slicing when slice optimization has landed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 1457,
    "line": "# TODO: migrate over all of symbolic_shape_registry_util.cpp"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_shape_functions.py",
    "line_number": 1472,
    "line": "# quantized_conv_prepack TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_trace.py",
    "line_number": 160,
    "line": "            # TODO: figure out one liner to .clone() and set requires_grad"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_trace.py",
    "line_number": 229,
    "line": "    # TODO: In principle, we track device information in our trace, so it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_trace.py",
    "line_number": 233,
    "line": "    # TODO: Consider adding a utility function to torch.jit to test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\jit\\_trace.py",
    "line_number": 273,
    "line": "        # TODO: I'm not sure if the clone here is necessary but it is safer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\masked\\_ops.py",
    "line_number": 531,
    "line": "    assert mask.dense_dim() == input.dense_dim()  # TODO: eliminate this restriction"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\masked\\_ops.py",
    "line_number": 823,
    "line": "    # TODO: implement sparse CSR specific where operator for efficiency"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\masked\\_ops.py",
    "line_number": 1388,
    "line": "            # TODO: compute count analytically"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\masked\\_ops.py",
    "line_number": 1607,
    "line": "            # TODO: compute count analytically"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\masked\\_ops.py",
    "line_number": 1618,
    "line": "        # TODO: replace torch.subtract/divide/square/maximum with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\masked\\_ops.py",
    "line_number": 1785,
    "line": "    # TODO: eliminate mask_input as unnecessary when using masked divide."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\masked\\_ops.py",
    "line_number": 1789,
    "line": "        # TODO: replace torch.maximum with masked maximum when available."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\masked\\_ops.py",
    "line_number": 1791,
    "line": "        # TODO: replace torch.divide with masked divide when available."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\masked\\maskedtensor\\reductions.py",
    "line_number": 129,
    "line": "        # TODO: autograd.Function doesn't support kwarg"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\multiprocessing\\reductions.py",
    "line_number": 326,
    "line": "    # TODO: Handle distinguishing between subclass and non-subclass versions of NT better"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\multiprocessing\\reductions.py",
    "line_number": 642,
    "line": "    # TODO: Maybe this should be in tensor_classes? :)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\multiprocessing\\spawn.py",
    "line_number": 231,
    "line": "    # todo: investigate why spawn does not work with threadpool and raises SIGINT"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\__init__.py",
    "line_number": 89,
    "line": "            # TODO: Just use nt.to(layout=layout) when it exists."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\__init__.py",
    "line_number": 295,
    "line": "        # TODO: switch to as_nested_tensor(tensor) when it is available"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\__init__.py",
    "line_number": 402,
    "line": "            # TODO: Truly support offsets=None at some point?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\nested_tensor.py",
    "line_number": 164,
    "line": "    # TODO: Revisit this when @properties are better supported by PT2. I think the ideal"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\nested_tensor.py",
    "line_number": 203,
    "line": "    # reasons. TODO: Remove these!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\nested_tensor.py",
    "line_number": 230,
    "line": "        # TODO: Update this to handle the other inner tensors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\nested_tensor.py",
    "line_number": 318,
    "line": "# TODO: Remove ViewBufferFromNested, ViewNestedFromBuffer, and buffer_from_jagged once the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\nested_tensor.py",
    "line_number": 418,
    "line": "        # TODO: An alternative way to construct offsets is to use F.pad. This avoids creating"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\ops.py",
    "line_number": 299,
    "line": "        # TODO: Make this work with autograd"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\ops.py",
    "line_number": 444,
    "line": "            # TODO: write a kernel for this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\ops.py",
    "line_number": 447,
    "line": "            # TODO: We probably want the output to have the same ragged structure / nested int."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\ops.py",
    "line_number": 724,
    "line": "    # TODO: Figure out how to handle this better"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\ops.py",
    "line_number": 1100,
    "line": "            # TODO: Fix this; it's a bug. should be unsqueezing on ragged_idx"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\ops.py",
    "line_number": 1378,
    "line": "    # TODO: make this more efficient"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\ops.py",
    "line_number": 1540,
    "line": "    # TODO: Handle inference mode properly."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\sdpa.py",
    "line_number": 66,
    "line": "        # TODO: Figure out whether masks are actually supported for this layout or not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\sdpa.py",
    "line_number": 317,
    "line": "        # TODO: Explore performance impact of copying"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\sdpa.py",
    "line_number": 322,
    "line": "        # TODO: Explore performance impact of copying"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\sdpa.py",
    "line_number": 328,
    "line": "        # TODO: Explore performance impact when compiling"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\sdpa.py",
    "line_number": 372,
    "line": "# TODO: Next iteration should add test cases and check it works"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\sdpa.py",
    "line_number": 552,
    "line": "    # [TODO] K and V have to have the same Nnz, should probably torch_check"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\sdpa.py",
    "line_number": 605,
    "line": "# TODO: coalesce with torch/nn/utils/attention.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nested\\_internal\\sdpa.py",
    "line_number": 607,
    "line": "    # TODO: Investigate why math.sqrt() isn't properly handled by Dynamo?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\functional.py",
    "line_number": 1540,
    "line": "    # TODO: Properly support no-batch-dim inputs. For now, these are NOT supported; passing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\functional.py",
    "line_number": 2687,
    "line": "            # TODO: Remove this once script supports type() calls"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\functional.py",
    "line_number": 2767,
    "line": "    # TODO: make use of reduce like below when JIT is ready with the missing features:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\functional.py",
    "line_number": 5099,
    "line": "# TODO: Fix via https://github.com/pytorch/pytorch/issues/75798"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\functional.py",
    "line_number": 6167,
    "line": "        # TODO finish disentangling control flow so we don't do in-projections when statics are passed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\functional.py",
    "line_number": 6178,
    "line": "        # TODO finish disentangling control flow so we don't do in-projections when statics are passed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\_reduction.py",
    "line_number": 22,
    "line": "        ret = -1  # TODO: remove once JIT exceptions support control flow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\attention\\bias.py",
    "line_number": 239,
    "line": "                    is_causal=True,  # TODO: Flash accepts causal = True and for this particular op it means lower right"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\attention\\flex_attention.py",
    "line_number": 737,
    "line": "    # TODO: fix this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\attention\\flex_attention.py",
    "line_number": 900,
    "line": "    # TODO this config segfaults with Triton without:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\attention\\__init__.py",
    "line_number": 26,
    "line": "# TODO: Consider using this for sdpa regardless of subclasses"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\attention\\__init__.py",
    "line_number": 36,
    "line": "# https://stackoverflow.com/questions/38765577/overriding-sphinx-autodoc-alias-of-for-import-of-private-class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\activation.py",
    "line_number": 87,
    "line": "        # TODO: check in THNN (if inplace == True, then assert value <= threshold)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\batchnorm.py",
    "line_number": 171,
    "line": "            # TODO: if statement only here to tell the jit to skip emitting this when it is None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\conv.py",
    "line_number": 331,
    "line": "        padding_mode: str = \"zeros\",  # TODO: refine this type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\conv.py",
    "line_number": 512,
    "line": "        padding_mode: str = \"zeros\",  # TODO: refine this type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\conv.py",
    "line_number": 1359,
    "line": "# TODO: Deprecate and remove the following alias `_ConvTransposeMixin`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\conv.py",
    "line_number": 1384,
    "line": "# TODO: Conv2dLocal"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\conv.py",
    "line_number": 1385,
    "line": "# TODO: Conv2dMap"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\conv.py",
    "line_number": 1386,
    "line": "# TODO: ConvTranspose2dMap"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\conv.py",
    "line_number": 1564,
    "line": "        padding_mode: str = \"zeros\",  # TODO: refine this type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\linear.py",
    "line_number": 134,
    "line": "# TODO: fail fast on quantization API usage error, then remove this class"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\linear.py",
    "line_number": 293,
    "line": "# TODO: PartialLinear - maybe in sparse?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\loss.py",
    "line_number": 1991,
    "line": "# TODO: L1HingeEmbeddingCriterion"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\loss.py",
    "line_number": 1992,
    "line": "# TODO: MSECriterion weight"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\loss.py",
    "line_number": 1993,
    "line": "# TODO: ClassSimplexCriterion"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\module.py",
    "line_number": 2143,
    "line": "    # TODO: Change `*args` to `*` and remove the corresponding warning in docs when BC allows."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\module.py",
    "line_number": 2189,
    "line": "        # TODO: Remove `args` and the parsing logic when BC allows."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\normalization.py",
    "line_number": 413,
    "line": "# TODO: ContrastiveNorm2d"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\normalization.py",
    "line_number": 414,
    "line": "# TODO: DivisiveNorm2d"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\normalization.py",
    "line_number": 415,
    "line": "# TODO: SubtractiveNorm2d"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\padding.py",
    "line_number": 12,
    "line": "# TODO: grad_output size asserts in THNN"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\rnn.py",
    "line_number": 789,
    "line": "# TODO: remove the overriding implementations for LSTM and GRU when TorchScript"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\modules\\rnn.py",
    "line_number": 1600,
    "line": "            ret = input  # TODO: remove when jit supports exception flow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\parallel\\comm.py",
    "line_number": 138,
    "line": "    # TODO: When `len(inputs) == 1` and all inputs are on `destination`, just"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\parallel\\data_parallel.py",
    "line_number": 132,
    "line": "    # TODO: update notes/cuda.rst when this class handles 8+ GPUs well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\parallel\\distributed.py",
    "line_number": 92,
    "line": "    # TODO (rohan-varma): keep_low_precision_grads: bool = False"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\parallel\\distributed.py",
    "line_number": 93,
    "line": "    # TODO (rohan-varma): APIs to allow users to run batchnorm and layernorm"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\parallel\\distributed.py",
    "line_number": 150,
    "line": "        # TODO: Expand to remote RRefs."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\parallel\\distributed.py",
    "line_number": 295,
    "line": "        # TODO: make DDP uneven inputs context manager support buffer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\parallel\\distributed.py",
    "line_number": 679,
    "line": "                # TODO: This is a temporary work around to enable DDP + TP."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\parallel\\distributed.py",
    "line_number": 867,
    "line": "            # params. TODO (rohan-varma): Make this compose with general"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\parallel\\distributed.py",
    "line_number": 1080,
    "line": "                        # TODO: when zero_grad(set_to_none=False) or in grad"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\parallel\\distributed.py",
    "line_number": 1559,
    "line": "            # TODO (rohan-varma) test this codepath."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\parallel\\distributed.py",
    "line_number": 1596,
    "line": "        # TODO: DDPSink is currently enabled for unused parameter detection and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\utils\\memory_format.py",
    "line_number": 66,
    "line": "    # TODO: expand this to `_ConvNd` when channels_last support is extended"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\utils\\memory_format.py",
    "line_number": 141,
    "line": "    # TODO: expand this to `_ConvNd` when channels_last support is extended"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\utils\\parametrize.py",
    "line_number": 704,
    "line": "                        # TODO: Fix this for tensor subclasses that are parameters:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\utils\\prune.py",
    "line_number": 1278,
    "line": "    # TODO: consider removing this check and allowing users to specify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\utils\\rnn.py",
    "line_number": 241,
    "line": "        # TODO: Re-enable this check (.type isn't supported in TorchScript)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\utils\\stateless.py",
    "line_number": 273,
    "line": "    # TODO allow kwargs such as unsafe and others for parametrization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\nn\\utils\\weight_norm.py",
    "line_number": 24,
    "line": "    # TODO Make return type more specific"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_helper.py",
    "line_number": 134,
    "line": "    # TODO(justinchuby): Replace insinstance with _is_value once we figure out mypy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_helper.py",
    "line_number": 406,
    "line": "            # TODO(justinchuby): Only single output is supported for now. We may want to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_helper.py",
    "line_number": 1292,
    "line": "        # TODO(justinchuby): Check if dtype is indeed a int."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_helper.py",
    "line_number": 2156,
    "line": "# TODO: remove these once we support Type's in the JIT IR and we can once again"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset10.py",
    "line_number": 737,
    "line": "    # TODO(justinchuby): Extract all the cast ops into a helper function."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset13.py",
    "line_number": 520,
    "line": "    # TODO: So far we don\"t have a module using this method. We\"ll keep"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset15.py",
    "line_number": 17,
    "line": "                        TODO: test coverage for mixed types inputs."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset15.py",
    "line_number": 20,
    "line": "                        TODO: bfloat16 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset15.py",
    "line_number": 23,
    "line": "                        TODO: optional start/end attribute."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset18.py",
    "line_number": 141,
    "line": "# TODO(justinchuby): Support multiple quantized args in output"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset18.py",
    "line_number": 153,
    "line": "# TODO(justinchuby): Support multiple quantized args in output"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 1305,
    "line": "        # TODO: remove this as onnx opset 11 spec allows negative axes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 1354,
    "line": "    # TODO(justinchuby): Looks like this op is deprecated in torch"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 2210,
    "line": "    # TODO: remove this as onnx opset 11 spec allows negative axes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 3170,
    "line": "# TODO(justinchuby): Support multiple quantized args in output"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 3182,
    "line": "# TODO(justinchuby): Support multiple quantized args in output"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 3891,
    "line": "# TODO(justinchuby): Support multiple quantized args in output"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 3918,
    "line": "# TODO(justinchuby): Support multiple quantized args in output"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 4973,
    "line": "    # TODO: remove this as onnx opset 11 spec allows negative axes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 5383,
    "line": "            # TODO: If indexing is supported natively in ONNX in future opsets,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 5780,
    "line": "        # TODO: Might need a fix in torch group_norm module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 6261,
    "line": "# TODO: It would be better to export this as a chunk directly, as this is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 6263,
    "line": "# TODO: Once we have proper scoping, stop reimplementing chunk, delete this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\symbolic_opset9.py",
    "line_number": 6320,
    "line": "        # TODO(justinchuby): Use a public method in the helper module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\utils.py",
    "line_number": 56,
    "line": "# TODO(justinchuby): Remove dependency to this global variable from constant_fold.cpp"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\utils.py",
    "line_number": 1106,
    "line": "    # TODO: can we simplify this to always return a tuple of Tensor or None?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\utils.py",
    "line_number": 1349,
    "line": "            # TODO(justinchuby): Create a way to check if an op is fully supported."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\utils.py",
    "line_number": 1577,
    "line": "            # TODO: Don't allocate a in-memory string for the protobuf"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\utils.py",
    "line_number": 1832,
    "line": "                # TODO Wrap almost identical attrs assignment or comment the difference."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\verification.py",
    "line_number": 100,
    "line": "# TODO(justinchuby): Add type checking by narrowing down the return type when input is None"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\verification.py",
    "line_number": 233,
    "line": "            # TODO: Remove `check_shape` option once every shape inconsistent issue is addressed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\verification.py",
    "line_number": 409,
    "line": "        # TODO: remove this and treat mutating model separately. See #77679"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\verification.py",
    "line_number": 586,
    "line": "    # TODO: refactor utils.py to remove duplicated code of context setup. See #78834"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\verification.py",
    "line_number": 654,
    "line": "    # TODO: Below is doing aten graph to onnx. It should be abstracted as a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\verification.py",
    "line_number": 832,
    "line": "        # TODO(#77679): remove this and treat mutating model separately."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\verification.py",
    "line_number": 879,
    "line": "    # TODO: Only copy the argument if mutation is detected in Graph."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\verification.py",
    "line_number": 1222,
    "line": "            # TODO: A more compact graph printer."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\verification.py",
    "line_number": 1775,
    "line": "    # TODO: Copied from utils.py `export` until `_optimize_graph`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_experimental.py",
    "line_number": 14,
    "line": "    # TODO(justinchuby): Deprecate and remove this class."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_exporter_states.py",
    "line_number": 7,
    "line": "    # TODO(justinchuby): Deprecate and remove this class."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_onnx_supported_ops.py",
    "line_number": 40,
    "line": "        # TODO(thiagocrepaldi): handle overload_name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_onnx_supported_ops.py",
    "line_number": 46,
    "line": "        # TODO(thiagocrepaldi): handle overload_name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\__init__.py",
    "line_number": 522,
    "line": "# TODO(justinchuby): Deprecate these logging functions in favor of the new diagnostic module."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\io_adapter.py",
    "line_number": 22,
    "line": "# TODO(bowbao): Add diagnostics for IO adapters."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\io_adapter.py",
    "line_number": 136,
    "line": "# TODO: make_fx lose stack info https://github.com/pytorch/pytorch/issues/90276"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\io_adapter.py",
    "line_number": 166,
    "line": "    # TODO(bowbao): Turn this check into diagnostic. Consider warning instead of error."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\jit_utils.py",
    "line_number": 4,
    "line": "# TODO(justinchuby): Move more of the symbolic helper functions here and expose"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\jit_utils.py",
    "line_number": 339,
    "line": "# TODO: Expose this to user when migrating symbolic helper functions to here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\onnxruntime.py",
    "line_number": 137,
    "line": "    # TODO: select a good default based on the capabilities of the host"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\onnxruntime.py",
    "line_number": 724,
    "line": "    # TODO(wschin): Make it to inference session level flag."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\onnxruntime.py",
    "line_number": 821,
    "line": "        # TODO(wschin): this is a naive implementation of cache without proper guard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\onnxruntime.py",
    "line_number": 1015,
    "line": "            # TODO(wschin): enable external allocators."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\onnxruntime.py",
    "line_number": 1143,
    "line": "                # TODO(wschin): use a better way to identify fused submodule"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\registration.py",
    "line_number": 150,
    "line": "    # TODO(justinchuby): Add @functools.lru_cache(maxsize=None) if lookup time becomes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\_exporter_legacy.py",
    "line_number": 114,
    "line": "        # TODO: get opset version from torchlib"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\_exporter_legacy.py",
    "line_number": 321,
    "line": "        from torch.onnx._internal.fx import (  # TODO: Prevent circular dep"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\_exporter_legacy.py",
    "line_number": 547,
    "line": "        # TODO: If ONNX used absolute paths on the initializers external data files,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\_exporter_legacy.py",
    "line_number": 561,
    "line": "                # TODO: Revisit the need of `model_with_state_dict` being a real model and not just its state"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\_exporter_legacy.py",
    "line_number": 811,
    "line": "            # TODO: Should this be part of the serializer?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\_exporter_legacy.py",
    "line_number": 921,
    "line": "    # TODO: Design the passes API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\_exporter_legacy.py",
    "line_number": 955,
    "line": "        # TODO: https://github.com/pytorch/pytorch/issues/107714"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\_exporter_legacy.py",
    "line_number": 965,
    "line": "        from torch.export._trace import (  # TODO: Prevent circular dependency"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\_exporter_legacy.py",
    "line_number": 969,
    "line": "        # TODO: Defer `import onnxscript` out of `import torch` path"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\_exporter_legacy.py",
    "line_number": 979,
    "line": "            # TODO: Defer `import onnxscript` out of `import torch` path"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\_exporter_legacy.py",
    "line_number": 1242,
    "line": "    # TODO: Import here to prevent circular dependency"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\_rules.py",
    "line_number": 495,
    "line": "                    \"markdown\": 'This error occurs when the ONNX converter is unable to find a corresponding symbolic function\\nto convert a \"call_function\" node in the input graph to its equivalence in ONNX. The \"call_function\"\\nnode represents a normalized function call in PyTorch, such as \"torch.aten.ops.add\".\\n\\nTo resolve this error, you can try one of the following:\\n\\n- If exists, apply the auto-fix suggested by the diagnostic. TODO: this part is not available yet.\\n- Rewrite the model using only supported PyTorch operators or functions.\\n- Follow this [guide](https://pytorch.org/tutorials/beginner/onnx/onnx_registry_tutorial.html#overview) to write and\\n  register a custom symbolic function for the unsupported call_function FX node.\\n',"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\_rules.py",
    "line_number": 520,
    "line": "                    \"markdown\": \"This error indicates that an FX graph contains one or more unsupported nodes. The error message\\nis typically accompanied by a list of the unsupported nodes found during analysis.\\n\\nTo resolve this error, you can try resolving each individual unsupported node error by following\\nthe suggestions by its diagnostic. Typically, options include:\\n\\n- If exists, apply the auto-fix suggested by the diagnostic. TODO: this part is not available yet.\\n- Rewrite the model using only supported PyTorch operators or functions.\\n- Follow this [guide](https://pytorch.org/docs/stable/onnx.html#onnx-script-functions) to write and\\n  register a custom symbolic function for the unsupported call_function FX node.\\n\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\context.py",
    "line_number": 269,
    "line": "    # TODO(bowbao): Implement this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\context.py",
    "line_number": 395,
    "line": "            # TODO(bowbao): Create builtin-rules and create diagnostic using that."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\decorator.py",
    "line_number": 99,
    "line": "            # TODO(bowbao): by default diagnostic doesn't have stack."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\decorator.py",
    "line_number": 153,
    "line": "# TODO(bowbao): decorator to report only when failed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\_infra.py",
    "line_number": 265,
    "line": "    # TODO: Implement this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_building.py",
    "line_number": 180,
    "line": "            # TODO(justinchuby): Implement type promotion logic here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_building.py",
    "line_number": 317,
    "line": "            # TODO(justinchuby): Cast the ir.Value here if needed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_building.py",
    "line_number": 558,
    "line": "            # TODO(justinchuby): Handle cast"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_building.py",
    "line_number": 634,
    "line": "            # TODO: Upstream signature to ONNX Function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_compat.py",
    "line_number": 143,
    "line": "        # TODO(justinchuby): Change the hardcoded opset version for it to be flexible"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_compat.py",
    "line_number": 194,
    "line": "                opset_version=17,  # TODO(justinchuby): Hard coded to 17 for now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_core.py",
    "line_number": 113,
    "line": "            # TODO: Use ml_dtypes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_core.py",
    "line_number": 187,
    "line": "    # TODO: Consider using meta[\"tensor_meta\"] for this? Would it be faster?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_core.py",
    "line_number": 439,
    "line": "    # TODO: Log the message here to expose false positives"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_core.py",
    "line_number": 443,
    "line": "        # TODO(justinchuby): Fall back to ATen op or do something else?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_core.py",
    "line_number": 503,
    "line": "        # TODO: Get IR function directly when onnxscript is updated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_core.py",
    "line_number": 733,
    "line": "    # TODO(justinchuby): Reassigning the graph module to save some runtime."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_core.py",
    "line_number": 917,
    "line": "    # TODO: Decide if we should keep mutated buffers as inputs/outputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_core.py",
    "line_number": 919,
    "line": "    # TODO(justinchuby): Remove the hack"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_core.py",
    "line_number": 1144,
    "line": "        # TODO(justinchuby): Remove the hack"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_core.py",
    "line_number": 1280,
    "line": "            # TODO(justinchuby): The threshold is arbitrary right now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_dispatching.py",
    "line_number": 158,
    "line": "        # TODO: Maybe just check dtype? Being more strict here for now"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_dispatching.py",
    "line_number": 286,
    "line": "                # TODO: Handle None attributes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_dispatching.py",
    "line_number": 338,
    "line": "    # TODO: Handle when node does not have a target"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_ir_passes.py",
    "line_number": 14,
    "line": "    # TODO: Ensure the names do not have duplicates"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_ir_passes.py",
    "line_number": 30,
    "line": "        # TODO(justinchuby): Remove this hack and improved onnxscript"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_onnx_program.py",
    "line_number": 109,
    "line": "        # TODO(justinchuby): Maybe output complex tensors as needed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_onnx_program.py",
    "line_number": 215,
    "line": "        # TODO(justinchuby): Allow different inference options"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_registration.py",
    "line_number": 61,
    "line": "    # TODO(justinchuby): Handle arbitrary custom ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_registration.py",
    "line_number": 122,
    "line": "        # TODO: Design multi-opset version support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_schemas.py",
    "line_number": 110,
    "line": "    # TODO: Add other properties too"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_schemas.py",
    "line_number": 149,
    "line": "    # TODO: Upstream this to IR"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_schemas.py",
    "line_number": 363,
    "line": "        # TODO: Double check the separator for overload"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_schemas.py",
    "line_number": 458,
    "line": "                        # TODO: Handle variadic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_schemas.py",
    "line_number": 470,
    "line": "                        # TODO: Use ir_convenience instead to handle int as float"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_schemas.py",
    "line_number": 510,
    "line": "                            # TODO: Handle variadic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_tensors.py",
    "line_number": 37,
    "line": "    # TODO: Implement indexing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\exporter\\_testing.py",
    "line_number": 58,
    "line": "    # TODO(justinchuby): Include output names in the error message"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\diagnostics.py",
    "line_number": 131,
    "line": "    # TODO: Compact display of `param_schema`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\fx_onnx_interpreter.py",
    "line_number": 52,
    "line": "    TODO(bowbao): Create fx utils module and move this function there."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\fx_onnx_interpreter.py",
    "line_number": 302,
    "line": "    # TODO: aten::sym_size has overload, but fx graph is using"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\fx_onnx_interpreter.py",
    "line_number": 375,
    "line": "    TODO: Convert methods to @staticmethod when the diagnostic system supports it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\fx_onnx_interpreter.py",
    "line_number": 384,
    "line": "        # TODO: Diagnostics API should be revised to get rid of this attribute."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\fx_onnx_interpreter.py",
    "line_number": 529,
    "line": "        # TODO: Fix FakeTensorMode limitation asap"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\fx_onnx_interpreter.py",
    "line_number": 694,
    "line": "        # TODO(wechi): Support call_method."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\fx_onnx_interpreter.py",
    "line_number": 746,
    "line": "        # TODO: We may want to consider other naming styles. The goal is to be stable and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\fx_symbolic_graph_extractor.py",
    "line_number": 122,
    "line": "# TODO: Migrate to `DynamoExporter` after fake model tracing is supported."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\fx_symbolic_graph_extractor.py",
    "line_number": 158,
    "line": "        # TODO: plumb ``concrete_args`` to symbolic_trace call at ``generate_fx``"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\onnxfunction_dispatcher.py",
    "line_number": 292,
    "line": "            # TODO(titaiwang): aten::sym_size has overload, but fx graph is using"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\patcher.py",
    "line_number": 13,
    "line": "# TODO: Remove after https://github.com/huggingface/safetensors/pull/318"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\patcher.py",
    "line_number": 49,
    "line": "    TODO: Should this really be a global patcher? Can we make it a local patcher?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\serialization.py",
    "line_number": 115,
    "line": "# TODO: generalize to allow more checkpoints formats (torch or gguf)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\_pass.py",
    "line_number": 41,
    "line": "        # TODO: Figure out how to retrieve commit hash."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\_pass.py",
    "line_number": 189,
    "line": "    TODO(bowbao): Add more overridable methods in call hierarchy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\_pass.py",
    "line_number": 190,
    "line": "    TODO(bowbao): Create an example once more overridable methods are added."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\passes\\decomp.py",
    "line_number": 55,
    "line": "        # TODO: May need revisit for user fake mode export + dynamic shape scenario."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\passes\\functionalization.py",
    "line_number": 106,
    "line": "        # TODO: May need revisit for user fake mode export + dynamic shape scenario."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\passes\\type_promotion.py",
    "line_number": 34,
    "line": "# TODO(bowbao): move to type utils."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\onnx\\_internal\\fx\\passes\\type_promotion.py",
    "line_number": 1261,
    "line": "        # TODO(bowbao): diagnostic.emit and diagnostic.set_message api."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\optim\\adam.py",
    "line_number": 84,
    "line": "            # TODO(crcrpar): [low prec params & their higher prec copy]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\optim\\radam.py",
    "line_number": 486,
    "line": "            # TODO(mlazos): we should try and get a foreach_where op https://github.com/pytorch/pytorch/issues/117884"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\optim\\_functional.py",
    "line_number": 21,
    "line": "# TODO: use foreach API in optim._functional to do all the computation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\package\\importer.py",
    "line_number": 78,
    "line": "            # TODO: I guess we should do copyreg too?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\package\\package_exporter.py",
    "line_number": 918,
    "line": "                # TODO: Once we decide to break serialization FC, we can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\package\\package_importer.py",
    "line_number": 273,
    "line": "                # TODO: Once we decide to break serialization FC, we can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\package\\package_importer.py",
    "line_number": 310,
    "line": "        # TODO from zdevito:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\profiler\\_memory_profiler.py",
    "line_number": 168,
    "line": "        # TODO(robieta): Move away from load bearing names"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\profiler\\_memory_profiler.py",
    "line_number": 306,
    "line": "        # TODO(robieta):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\profiler\\_memory_profiler.py",
    "line_number": 1063,
    "line": "        # TODO: Write a faster serialize (orjson not available in CI)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\profiler\\_pattern_matcher.py",
    "line_number": 182,
    "line": "        # TODO: We should also check tensor identities"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\profiler\\_pattern_matcher.py",
    "line_number": 217,
    "line": "        # TODO: Check if tensor is reused"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\profiler\\_pattern_matcher.py",
    "line_number": 419,
    "line": "        # TODO: fixme! Due to lifetime issues of the function name, this field might"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\profiler\\_pattern_matcher.py",
    "line_number": 438,
    "line": "        # TODO: We should also check if the loader is bottleneck."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\profiler\\_pattern_matcher.py",
    "line_number": 484,
    "line": "        # TODO: We should also check if the optimizer's numerical behavior will change."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\profiler\\_utils.py",
    "line_number": 145,
    "line": "            # TODO: find a better way to identify cudaLaunchKernel"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\profiler\\_utils.py",
    "line_number": 149,
    "line": "            # TODO: find a better way to identify CUDA Kernel"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\profiler\\_utils.py",
    "line_number": 379,
    "line": "# TODO(dberard) - deprecate / remove workaround for CUDA >= 12, when"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\quantization\\fuse_modules.py",
    "line_number": 10,
    "line": "# TODO: These functions are not used outside the `fuse_modules.py`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\quantization\\__init__.py",
    "line_number": 41,
    "line": "    # 'fuse_fx', 'quantize_fx',  # TODO: add quantize_dynamic_fx"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\sparse\\semi_structured.py",
    "line_number": 270,
    "line": "            # TODO in the future we can add in padding to support sparse dimensions that aren't perfect multiples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\sparse\\_triton_ops.py",
    "line_number": 100,
    "line": "        # TODO: investigate if contiguity along other axes than the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\sparse\\_triton_ops.py",
    "line_number": 963,
    "line": "        # todo: eliminate inner for-loops for efficiency"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\sparse\\_triton_ops.py",
    "line_number": 1151,
    "line": "    # todo: implement checks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_comparison.py",
    "line_number": 283,
    "line": "        # TODO: Instead of always upcasting to int64, it would be sufficient to cast to the next higher dtype to avoid"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_comparison.py",
    "line_number": 791,
    "line": "        # TODO: Remove this conversion as soon as all operations are supported natively by the MPS backend"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_comparison.py",
    "line_number": 1529,
    "line": "        # TODO: compose all metas into one AssertionError"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_device_type.py",
    "line_number": 875,
    "line": "# TODO: remove \"allow_xpu\" option after Interl GPU support all test case instantiate by this function."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_device_type.py",
    "line_number": 1280,
    "line": "        raise unittest.SkipTest(\"TODO: Memory availability checks for XLA?\")"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_device_type.py",
    "line_number": 1283,
    "line": "        raise unittest.SkipTest(\"TODO: Memory availability checks for Intel GPU?\")"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_device_type.py",
    "line_number": 1902,
    "line": "# TODO: the \"all\" in the name isn't true anymore for quite some time as we have also have for example XLA and MPS now."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_distributed.py",
    "line_number": 799,
    "line": "        # TODO: we should pipe the exception of the failed subprocess here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_distributed.py",
    "line_number": 964,
    "line": "        # TODO: get test name from kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_distributed.py",
    "line_number": 1068,
    "line": "        # TODO: figure out a better way to do this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_fsdp.py",
    "line_number": 72,
    "line": "    # TODO: FSDP non-recursive wrapping"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_fsdp.py",
    "line_number": 1437,
    "line": "        # TODO: Disable checking the parameters for pure FP16 due to floating"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 1326,
    "line": "        # TODO: exclude_zeros can be removed after https://github.com/pytorch/pytorch/issues/73638 is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 1333,
    "line": "        # TODO: exclude_zeros can be removed after https://github.com/pytorch/pytorch/issues/73638 is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 1421,
    "line": "# TODO: add reduction kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 1883,
    "line": "        # TODO: no layout"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 1891,
    "line": "    # TODO: no layout"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 2665,
    "line": "    # TODO: FIXME"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 3262,
    "line": "            # TODO: this can be simplified after https://github.com/pytorch/pytorch/issues/69316 is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 4500,
    "line": "    # TODO: @krshrimali, once to_numpy method in SampleInput class is modified to take None inputs,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 5177,
    "line": "    # TODO: can't switch `to.device` overload to use positional arguments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 7788,
    "line": "# TODO: add reference inputs for where(condition) signature"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 8779,
    "line": "    gqa_options = [False] if TEST_WITH_ROCM else [True, False]  # TODO: GQA support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 9166,
    "line": "        # TODO: remove once the issue is resolved"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 11604,
    "line": "                       # TODO: Fix test_out_arg_all_dtypes as torch.empty_like(expected_output) where expected_output=op(input)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 12246,
    "line": "               # TODO: update sample inputs with for_inplace_variant kwarg to support this test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 12257,
    "line": "               # TODO: update sample inputs with for_inplace_variant kwarg to support this test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 13812,
    "line": "                        # TODO: FIXME: RuntimeError: not implemented for 'ComplexFloat'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14019,
    "line": "           # TODO: some signatures of median do support out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14027,
    "line": "           # TODO: some signatures of nanmedian do support out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14035,
    "line": "           # TODO: some signatures of var_mean do support out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14050,
    "line": "           # TODO: some signatures of var_mean do support out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14064,
    "line": "           # TODO: some signatures of std_mean do support out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14077,
    "line": "           # TODO: some signatures of var_mean do support out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14193,
    "line": "            # TODO: FIXME: RuntimeError: \"max_elementwise_cuda\" not implemented for 'ComplexFloat'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14204,
    "line": "            # TODO: FIXME: RuntimeError: \"max_elementwise_cuda\" not implemented for 'ComplexFloat'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14220,
    "line": "            # TODO: FIXME: RuntimeError: \"min_elementwise_cuda\" not implemented for 'ComplexFloat'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14234,
    "line": "            # TODO: FIXME: RuntimeError: \"min_elementwise_cuda\" not implemented for 'ComplexFloat'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14281,
    "line": "                        # TODO: FIXME: RuntimeError: \"bitwise_or_cuda\" not implemented for 'Half'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 14295,
    "line": "                        # TODO: FIXME: RuntimeError: \"bitwise_xor_cuda\" not implemented for 'Half'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 15644,
    "line": "           # TODO: add shape checks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 15709,
    "line": "           # TODO: add shape checks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 15713,
    "line": "           # TODO: investigate nondeterminism"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 16081,
    "line": "            # TODO Need to understand what this is testing and why it doesn't work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 16084,
    "line": "            # TODO skip this for now since we can't skip on runtime arch support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 16156,
    "line": "        # TODO: Skip because it produces a CUDA illegal memory access for some reason"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 16204,
    "line": "    # TODO: combine this with the nn.functional.silu OpInfo when"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 16383,
    "line": "        # TODO(whc) should not need sample_inputs_func, but without it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 16557,
    "line": "                    # TODO: FIXME"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 16565,
    "line": "    # TODO: FIXME, ideally by implemented grad for both inputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 16605,
    "line": "    # TODO: FIXME, ideally by implementing grad for both inputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 17390,
    "line": "                        # TODO: FIXME tolerance is too high"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 17838,
    "line": "           # TODO(@heitorschueroff) update SampleInput to handle such cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 17979,
    "line": "    # TODO(@kshitij12345): Refactor similar to `mvlgamma` entries."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 18965,
    "line": "               # TODO: same as this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 19505,
    "line": "    OpInfo('trapz',  # TODO: in the future, 'trapz' should be made a proper alias of 'trapezoid'"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 19781,
    "line": "               # TODO: FIXME: complex inputs requiring grad error in forward"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 19789,
    "line": "               # TODO: implement csr.to_sparse(sample_dim) where sampled_dim is 1."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 20223,
    "line": "        # TODO Benchmark again with the new implementation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 20506,
    "line": "            # TODO: Investigate why more granular skips in the test don't work in CI"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 20548,
    "line": "            # TODO skip this for now since we can't skip on runtime arch support (taken from scaled_dot_product_attention)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 20625,
    "line": "    # TODO: delete this OpInfo once we add meta support for grid_sampler_3d"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21516,
    "line": "            # TODO: RuntimeError: no _refs support for torch.rand_like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21517,
    "line": "            DecorateInfo(unittest.skip(\"TODO: RuntimeError: no _refs support for torch.rand_like\"),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21545,
    "line": "            # TODO: RuntimeError: no _refs support for torch.rand_like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21546,
    "line": "            DecorateInfo(unittest.skip(\"TODO: RuntimeError: no _refs support for torch.rand_like\"),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21577,
    "line": "            # TODO: RuntimeError: no _refs support for torch.rand_like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21578,
    "line": "            DecorateInfo(unittest.skip(\"TODO: RuntimeError: no _refs support for torch.rand_like\"),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21604,
    "line": "            # TODO: RuntimeError: no _refs support for torch.rand_like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21605,
    "line": "            DecorateInfo(unittest.skip(\"TODO: RuntimeError: no _refs support for torch.rand_like\"),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21631,
    "line": "            # TODO: RuntimeError: no _refs support for torch.rand_like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21632,
    "line": "            DecorateInfo(unittest.skip(\"TODO: RuntimeError: no _refs support for torch.rand_like\"),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21660,
    "line": "            # TODO: RuntimeError: no _refs support for torch.rand_like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21661,
    "line": "            DecorateInfo(unittest.skip(\"TODO: RuntimeError: no _refs support for torch.rand_like\"),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21690,
    "line": "            # TODO: RuntimeError: no _refs support for torch.rand_like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 21691,
    "line": "            DecorateInfo(unittest.skip(\"TODO: RuntimeError: no _refs support for torch.rand_like\"),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 22617,
    "line": "    PythonRefInfo(  # TODO: Port this to an UnaryOpInfo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23360,
    "line": "        # TODO: Uses minimum and clamp"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23388,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23396,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23404,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23415,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23445,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23453,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23461,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23469,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23480,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23491,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23502,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23510,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 23518,
    "line": "        # TODO: If self already has the correct dtype and device, then self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_methods_invocations.py",
    "line_number": 24425,
    "line": "# TODO: review porting these to make_tensor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_modules.py",
    "line_number": 370,
    "line": "    # TODO: Uncomment when negative weights is supported."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_modules.py",
    "line_number": 1513,
    "line": "        # TODO: add pos_weight to the definition here and corresponding SampleInputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_nn.py",
    "line_number": 144,
    "line": "    # TODO: reference function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_nn.py",
    "line_number": 151,
    "line": "        # TODO(#50743): Figure out the error. \"RuntimeError: Unrecognized tensor type ID: Batched\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_nn.py",
    "line_number": 2519,
    "line": "        # TODO(#50743): figure out the error"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_nn.py",
    "line_number": 2802,
    "line": "            # TODO: This code can path can be removed if #61309 is resolved"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_nn.py",
    "line_number": 3174,
    "line": "# TODO : Fix these discrepancies"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_nn.py",
    "line_number": 3317,
    "line": "            # TODO: compare structure (ensure analytic jacobian has correct shape)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_nn.py",
    "line_number": 3435,
    "line": "                # TODO: do this with in-memory files as soon as torch.save will support it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_nn.py",
    "line_number": 3732,
    "line": "                # TODO: torch.complex32 when properly supported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_nn.py",
    "line_number": 3814,
    "line": "    # TODO: check that criterions don't ignore grad_output"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_optimizers.py",
    "line_number": 459,
    "line": "        ),  # TODO: Move out to testing in param_group?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_optimizers.py",
    "line_number": 485,
    "line": "# TODO: consider tensor LR! See multi_tensor_optimizer_configs in test_optim.py --> tensor LR should work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_optimizers.py",
    "line_number": 1105,
    "line": "        ),  # TODO: Move out to testing in param_group?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_quantization.py",
    "line_number": 336,
    "line": "    # TODO(future PR): consider combining with skipIfNoQNNPACK,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_quantization.py",
    "line_number": 1046,
    "line": "            # TODO: make img_data a single example instead of a list"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_quantization.py",
    "line_number": 1571,
    "line": "        # TODO: remove this check and define two fuse_modules function on this module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_quantization.py",
    "line_number": 1793,
    "line": "# TODO: self.fc should be self.conv"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_quantization.py",
    "line_number": 1807,
    "line": "# TODO: self.fc should be self.conv"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_quantization.py",
    "line_number": 1824,
    "line": "# TODO: self.fc should be self.conv"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_quantization.py",
    "line_number": 1973,
    "line": "        # TODO: remove this check and define two fuse_modules function on this module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_quantization.py",
    "line_number": 2510,
    "line": "        # TODO: remove this check and define two fuse_model function on this module"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_quantized.py",
    "line_number": 166,
    "line": "# TODO: Update all quantization tests to use this decorator."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_subclass.py",
    "line_number": 9,
    "line": "# TODO: Move LoggingTensor here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 117,
    "line": "# TODO: Expand this class to handle abritrary settings in addition to boolean flags?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 1394,
    "line": "# TODO: Remove PYTORCH_MIOPEN_SUGGEST_NHWC once ROCm officially supports NHWC in MIOpen"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 2547,
    "line": "# TODO: Revisit the relaxed pairs and check how much work it is to fix the tests that would fail without the relaxation."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 2955,
    "line": "        # TODO: sure looks like we unconditionally initialize the context here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 3032,
    "line": "        # TODO: Remove this; this is grandfathered in because we suppressed errors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 3750,
    "line": "    # TODO: add args/kwargs for passing to assertEqual (e.g. rtol, atol)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 3811,
    "line": "            # TODO: default this to True"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 3884,
    "line": "            # TODO: compose all metas into one AssertionError"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 3968,
    "line": "    # TODO: Support context manager interface"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 4357,
    "line": "# TODO: consider more complicated noncontiguity schemes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 4378,
    "line": "# TODO: remove this (prefer make_symmetric_matrices below)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\common_utils.py",
    "line_number": 4428,
    "line": "# TODO: remove this (prefer make_symmetric_pd_matrices below)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\dynamo_test_failures.py",
    "line_number": 100,
    "line": "# TODO: due to case sensitivity problems, for now list these files by hand"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\hypothesis_utils.py",
    "line_number": 131,
    "line": "    # TODO: Maybe embed the enforced zero_point in the `torch.iinfo`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\jit_metaprogramming_utils.py",
    "line_number": 492,
    "line": "    # flaky test - TODO fix"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\jit_metaprogramming_utils.py",
    "line_number": 530,
    "line": "# TODO: delete this list once we make all nn_tests work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\jit_utils.py",
    "line_number": 532,
    "line": "        # TODO: check gradients for parameters, not just inputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\jit_utils.py",
    "line_number": 688,
    "line": "# TODO(suo) remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\jit_utils.py",
    "line_number": 752,
    "line": "# TODO: Remove me once https://bugs.python.org/issue42666 is resolved"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\jit_utils.py",
    "line_number": 821,
    "line": "        # TODO: inplace tests currently fail, fix and add inplace variant"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\jit_utils.py",
    "line_number": 825,
    "line": "    # TODO: find better way to standardize on op registration itself.."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\logging_tensor.py",
    "line_number": 46,
    "line": "# TODO: TensorBase should work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\logging_tensor.py",
    "line_number": 62,
    "line": "            # TODO: clone storage aliasing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\distributed_test.py",
    "line_number": 1598,
    "line": "            # TODO: now that nccl send/recv is supported, there does not seem to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\distributed_test.py",
    "line_number": 2598,
    "line": "            # TODO: move this test to use torch.profiler once kineto issues are"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\distributed_test.py",
    "line_number": 3645,
    "line": "            # TODO: Instead we should probably go through _rank_not_in_group"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\distributed_test.py",
    "line_number": 6495,
    "line": "            # TODO: NCCL backend does not work correctly for bitwise reduction ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\distributed_test.py",
    "line_number": 8664,
    "line": "            # TODO: enable this for general training use cases:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\distributed_test.py",
    "line_number": 8895,
    "line": "            # TODO(#54879): Provide ability to wait and report all failed ranks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\multi_threaded_pg.py",
    "line_number": 29,
    "line": "TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\nn\\api\\remote_module_test.py",
    "line_number": 701,
    "line": "            # TODO: Once the RPC backend can support directly sending GPU tensors, the expected device type should be \"cuda:0\"."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\nn\\api\\remote_module_test.py",
    "line_number": 707,
    "line": "            # TODO: Once the RPC backend can support directly sending GPU tensors, the expected device type should be \"cuda:0\"."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\nn\\api\\remote_module_test.py",
    "line_number": 733,
    "line": "        # TODO: Once the RPC backend can support directly sending GPU tensors, the expected device type should be \"cuda:0\"."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\rpc\\dist_autograd_test.py",
    "line_number": 1566,
    "line": "        # TODO, need more investigation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\rpc\\rpc_test.py",
    "line_number": 549,
    "line": "    # TODO: use torch.futures.collect_all"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\rpc\\rpc_test.py",
    "line_number": 1422,
    "line": "        # TODO: with TCP init, rank 0 raises Address already in use because"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\rpc\\rpc_test.py",
    "line_number": 3462,
    "line": "        # TODO: enable timeouts for rpc.remote/RRef (https://github.com/pytorch/pytorch/issues/33803)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\rpc\\rpc_test.py",
    "line_number": 5106,
    "line": "        # TODO: Cuda RPC is failing due to:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\rpc\\jit\\rpc_test.py",
    "line_number": 928,
    "line": "        # TODO, need more investigation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\rpc\\jit\\rpc_test.py",
    "line_number": 1152,
    "line": "            # TODO: Can't get a reliable time for this profiling event since"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\_tensor\\common_dtensor.py",
    "line_number": 440,
    "line": "        # TODO: dist tensor need to support quantized and sparse"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\distributed\\_tensor\\common_dtensor.py",
    "line_number": 475,
    "line": "        # TODO: add multi mesh choices"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\core.py",
    "line_number": 763,
    "line": "    # TODO: rename this to supports_bwgrad_bwgrad to be consistent with below"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\core.py",
    "line_number": 858,
    "line": "    # TODO: rename supports_sparse to supports_sparse_coo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\core.py",
    "line_number": 1500,
    "line": "    # TODO(@heitorschueroff) Once all reduction operators are using"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\core.py",
    "line_number": 1504,
    "line": "    # TODO(@heitorschueroff) Once all reduction operators are using ReductionOpInfo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\core.py",
    "line_number": 2449,
    "line": "# TODO: in the future generalize the reference generators to handle n-ary elementwise operations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\refs.py",
    "line_number": 54,
    "line": "        \"aliases\": None,  # TODO add a check for alias coverage"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\refs.py",
    "line_number": 56,
    "line": "        \"inplace_variant\": None,  # TODO: add a check for inplace coverage"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\linalg.py",
    "line_number": 1539,
    "line": "        # TODO: backward uses in-place operations that vmap doesn't like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\linalg.py",
    "line_number": 2421,
    "line": "            # TODO: is this really needed?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\nested.py",
    "line_number": 72,
    "line": "    # TODO: add non-contiguous NJTs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\nested.py",
    "line_number": 101,
    "line": "        # TODO: handle this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\nested.py",
    "line_number": 106,
    "line": "        # TODO: handle list / tuple / non-NJT outputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\nested.py",
    "line_number": 159,
    "line": "        # TODO: account for non-contiguous NJTs here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\nested.py",
    "line_number": 160,
    "line": "        # TODO: provide sample inputs for broadcasting cases and mixed (NT, T), (T, NT) inputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\nested.py",
    "line_number": 176,
    "line": "        # TODO: Cover this in the set of error inputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\nested.py",
    "line_number": 281,
    "line": "        # TODO: make the reference customizeable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\nested.py",
    "line_number": 296,
    "line": "    # TODO: Translate the rest of the OpInfos"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\signal.py",
    "line_number": 302,
    "line": "            # TODO: same as this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\sparse.py",
    "line_number": 150,
    "line": "                # TODO: remove this if-block after gh-98495 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\sparse.py",
    "line_number": 215,
    "line": "            # TODO: remove this if-block after gh-98495 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\sparse.py",
    "line_number": 248,
    "line": "            # TODO: remove this if-block after gh-98495 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\special.py",
    "line_number": 46,
    "line": "# TODO: Consolidate `i0e` with sample_inputs_unary when `make_tensor`,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\special.py",
    "line_number": 74,
    "line": "        # TODO: eliminate low after gh-106692 is fixed:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\testing\\_internal\\opinfo\\definitions\\special.py",
    "line_number": 248,
    "line": "    # TODO: FIXME"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\backend_registration.py",
    "line_number": 12,
    "line": "# TODO: Should use `torch._C._get_privateuse1_backend_name()` to get"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\backend_registration.py",
    "line_number": 121,
    "line": "            # TODO mypy doesn't support @property, see: https://github.com/python/mypy/issues/6185"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\bundled_inputs.py",
    "line_number": 393,
    "line": "        # TODO: Should we do this even for non-contiguous tensors?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\bundled_inputs.py",
    "line_number": 403,
    "line": "        # TODO: Provide more useful diagnostics."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\checkpoint.py",
    "line_number": 843,
    "line": "            # TODO: we can probably make this check stricter by checking that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\checkpoint.py",
    "line_number": 1158,
    "line": "    # TODO: unify _is_compiling across all compile stacks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\checkpoint.py",
    "line_number": 1192,
    "line": "            # version counter. TODO: Use reentrant_dispatch instead of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\dlpack.py",
    "line_number": 47,
    "line": "# TODO: add a typing.Protocol to be able to tell Mypy that only objects with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\mkldnn.py",
    "line_number": 14,
    "line": "            # TODO: Remove this once ScriptModule supports registering None buffer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\mkldnn.py",
    "line_number": 55,
    "line": "            # TODO: Remove this once ScriptModule supports registering None buffer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\weak.py",
    "line_number": 320,
    "line": "        # TODO, add _fix_weakref type binding"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_content_store.py",
    "line_number": 103,
    "line": "        # TODO: make storage support buffer protocol so this isn't"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_content_store.py",
    "line_number": 112,
    "line": "    # TODO: factor this into a random utility"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_content_store.py",
    "line_number": 153,
    "line": "    # TODO: offer some sort of non-blocking API to speed things up"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_content_store.py",
    "line_number": 158,
    "line": "        # TODO: consider not using torch.save for this; we don't actually"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_content_store.py",
    "line_number": 184,
    "line": "        # TODO: Support more advanced snapshotting of requires_grad/grad/etc"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_cxx_pytree.py",
    "line_number": 235,
    "line": "    # TODO(XuehaiPan): remove this condition when we make Python pytree out-of-box support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_python_dispatch.py",
    "line_number": 22,
    "line": "# TODO: Limitations and things about enable_torch_dispatch_mode we should fix before exposing it:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_pytree.py",
    "line_number": 347,
    "line": "            # TODO: change this warning to an error after OSS/internal stabilize"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_pytree.py",
    "line_number": 1471,
    "line": "# TODO(angelayi): remove this function after OSS/internal stabilize"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_pytree.py",
    "line_number": 1480,
    "line": "# TODO(angelayi): remove this function after OSS/internal stabilize"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_traceback.py",
    "line_number": 84,
    "line": "                # TODO: This creates a temporary file for every frame, but we"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_traceback.py",
    "line_number": 175,
    "line": "            # TODO: Maybe indicate that the traceback was elided?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\benchmark\\utils\\valgrind_wrapper\\timer_interface.py",
    "line_number": 33,
    "line": "    # TODO(#105471): Rename the count field"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\dataloader.py",
    "line_number": 699,
    "line": "                # TODO(https://github.com/pytorch/pytorch/issues/76750)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\dataloader.py",
    "line_number": 725,
    "line": "        # TODO: add limited pickling support for sharing an iterator"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\graph.py",
    "line_number": 22,
    "line": "# TODO(VitalyFedyunin): Make sure it works without dill module installed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\gen_pyi.py",
    "line_number": 272,
    "line": "    TODO: The current implementation of this script only generates interfaces for built-in methods. To generate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\_decorator.py",
    "line_number": 76,
    "line": "    # TODO: Lambda for picking"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\_decorator.py",
    "line_number": 192,
    "line": "    # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\_hook_iterator.py",
    "line_number": 166,
    "line": "            # TODO: Add try-except to in-place reduce traceback from the Exception"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\_hook_iterator.py",
    "line_number": 220,
    "line": "                # TODO: Simplify the traceback message to skip over `response = gen.send(None)`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\_typing.py",
    "line_number": 15,
    "line": "# TODO: Use TypeAlias when Python 3.6 is deprecated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\_typing.py",
    "line_number": 233,
    "line": "# TODO: When PyTorch drops the support for Python 3.6, it can be converted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\_typing.py",
    "line_number": 289,
    "line": "        # TODO: the statements below are not reachable by design as there is a bug and typing is low priority for now."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\_typing.py",
    "line_number": 308,
    "line": "    # TODO: Fix isinstance bug"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\_typing.py",
    "line_number": 365,
    "line": "    # TODO: Fix isinstance bug"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\_typing.py",
    "line_number": 376,
    "line": "    # TODO: Fix isinstance bug"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\_typing.py",
    "line_number": 422,
    "line": "    # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 9,
    "line": "# TODO(VitalyFedyunin): Add error when two different traces get combined"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 54,
    "line": "#  TODO(VitalyFedyunin): Extract this list from the DFIterDataPipe registred functions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 73,
    "line": "    # TODO: All operations are shared across entire InitialCapture, need to figure out what if we join two captures"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 90,
    "line": "        # TODO(VitalyFedyunin): Currently can't pickle (why?)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 144,
    "line": "        # TODO(VitalyFedyunin): Make this calculation thread safe (as currently it updates pointer)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 155,
    "line": "    # TODO(VitalyFedyunin): Add tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 156,
    "line": "    # TODO(VitalyFedyunin): Need to join context if one of them are empty because we used capture"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 159,
    "line": "        # TODO: Check if args or kwargs have more than one different context"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 161,
    "line": "            # TODO: Allow CaptureA to take context from mock"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 204,
    "line": "        # TODO(VitalyFedyunin): Do not use provate function here, copy own implementation instead."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 234,
    "line": "        # TODO: VitalyFedyunin execute kwargs and maybe nested structures"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 256,
    "line": "    # TODO(VitalyFedyunin): This should be atomic and thread safe"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 275,
    "line": "        # TODO(VitalyFedyunin): Make this calculation thread safe (as currently it updates pointer)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py",
    "line_number": 445,
    "line": "    # TODO(VitalyFedyunin): Must implement all special functions of datapipes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\datapipes.py",
    "line_number": 37,
    "line": "            # TODO(VitalyFedyunin): Replacing with TorchArrow only API, as we are dropping pandas as followup"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\datapipes.py",
    "line_number": 123,
    "line": "        ):  # TODO(VitalyFedyunin): Replace with better iterable exception"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\callable.py",
    "line_number": 138,
    "line": "    # TODO(VitalyFedyunin): Verify that item is any sort of batch"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\callable.py",
    "line_number": 140,
    "line": "        # TODO(VitalyFedyunin): Compact all batch dataframes into one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\callable.py",
    "line_number": 159,
    "line": "            # TODO(VitalyFedyunin): Add default collation into df_wrapper"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\callable.py",
    "line_number": 173,
    "line": "    # TODO(VitalyFedyunin): We can dynamically extract types from the tuple_values here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\callable.py",
    "line_number": 174,
    "line": "    # TODO(VitalyFedyunin): Instead of ignoring mypy error, make sure tuple_names is not empty"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\callable.py",
    "line_number": 231,
    "line": "        # TODO(VitalyFedyunin): Replace `Callable[..., Any]` with `Callable[[IColumn], Any]`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\callable.py",
    "line_number": 232,
    "line": "        # TODO(VitalyFedyunin): Replace with `Dict[Union[str, IColumn], Union[Callable, Enum]]`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\callable.py",
    "line_number": 239,
    "line": "                # TODO(VitalyFedyunin): Validate passed dictionary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\combinatorics.py",
    "line_number": 110,
    "line": "        # TODO: Performance optimization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\fileopener.py",
    "line_number": 57,
    "line": "        # TODO: enforce typing for each instance based on mode, otherwise"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\utils\\decoder.py",
    "line_number": 368,
    "line": "                # TODO: xinyu, figure out why Nvidia do this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\datapipes\\utils\\snapshot.py",
    "line_number": 7,
    "line": "# TODO: Caveats"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\data\\_utils\\worker.py",
    "line_number": 177,
    "line": "# TODO: Implement `SeedSequence` like object for `torch.random`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\hipify\\cuda_to_hip_mappings.py",
    "line_number": 2120,
    "line": "                \"hipDeviceAttributeSingleToDoublePrecisionPerfRatio\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\hipify\\cuda_to_hip_mappings.py",
    "line_number": 4815,
    "line": "            \"cudaDevAttrSingleToDoublePrecisionPerfRatio\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\hipify\\cuda_to_hip_mappings.py",
    "line_number": 4817,
    "line": "                \"hipDeviceAttributeSingleToDoublePrecisionPerfRatio\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\hipify\\cuda_to_hip_mappings.py",
    "line_number": 8525,
    "line": "        # TODO: Undo this special-case; see the header for motivation behind this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\hipify\\hipify_python.py",
    "line_number": 496,
    "line": "    TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\model_dump\\__init__.py",
    "line_number": 49,
    "line": "    - Fix various TODO comments in this file and the JS."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\model_dump\\__init__.py",
    "line_number": 177,
    "line": "            # TODO: Undo at least that second hack.  We should support string states."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\model_dump\\__init__.py",
    "line_number": 291,
    "line": "                # TODO: Handle this case better.  TorchScript ranges are in bytes,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\model_dump\\__init__.py",
    "line_number": 324,
    "line": "                # TODO: handle errors here and just ignore the file?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\tensorboard\\summary.py",
    "line_number": 207,
    "line": "    # TODO: expose other parameters in the future."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\tensorboard\\writer.py",
    "line_number": 73,
    "line": "        # TODO: See if we can remove this in the future if we are"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\tensorboard\\_pytorch_graph.py",
    "line_number": 46,
    "line": "        # TODO; Specify a __slots__ for this class or potentially"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\tensorboard\\_pytorch_graph.py",
    "line_number": 115,
    "line": "        # TODO: See if we can remove this in the future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\tensorboard\\_pytorch_graph.py",
    "line_number": 217,
    "line": "        # TODO: compute correct memory usage and CPU time once"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\tensorboard\\_pytorch_graph.py",
    "line_number": 345,
    "line": "    # TODO: See if we can extract GPU vs CPU information from the PyTorch model"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\functions.py",
    "line_number": 148,
    "line": "# TODO: In Triton, // rounds to zero, but in Python, it is floor division."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\functions.py",
    "line_number": 300,
    "line": "                        # TODO if https://github.com/openai/triton/issues/619 is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\functions.py",
    "line_number": 874,
    "line": "    # TODO: microoptimization is to avoid overflowing into arbitrary precision"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\functions.py",
    "line_number": 980,
    "line": "# TODO: As an indicator, this != 0 implies == 1 (and vice versa)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\functions.py",
    "line_number": 1016,
    "line": "            # TODO: Inability to access size-obliviousness sucks: if we have a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\interp.py",
    "line_number": 48,
    "line": "# TODO: Dedupe this with SYMPY_INTERP"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\interp.py",
    "line_number": 53,
    "line": "    # TODO add CeilDiv (it doesn't appear in the index_expr)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\interp.py",
    "line_number": 55,
    "line": "    # TODO default to some decompositions if the interpreter doesn't have them"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\interp.py",
    "line_number": 71,
    "line": "        CleanDiv: \"floordiv\",  # TODO: hmm?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\interp.py",
    "line_number": 80,
    "line": "        # TODO: There is a hazard here, if we have float * float it will"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\interp.py",
    "line_number": 86,
    "line": "        PythonMod: \"mod\",  # TODO: this is wrong"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\interp.py",
    "line_number": 87,
    "line": "        # TODO: Inductor can generate these, but it's ill-specified which"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\reference.py",
    "line_number": 138,
    "line": "        raise NotImplementedError(\"TODO: truncdiv\")"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\reference.py",
    "line_number": 191,
    "line": "# sharing (TODO: considering splitting out a BaseReferenceAnalysis)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\symbol.py",
    "line_number": 80,
    "line": "    # TODO: maybe put the assumptions here directly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\value_ranges.py",
    "line_number": 158,
    "line": "        # TODO: when the bounds have free variables, this may be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\value_ranges.py",
    "line_number": 872,
    "line": "        # TODO: We should tighten value ranges"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\value_ranges.py",
    "line_number": 891,
    "line": "        # TODO: We should tighten value ranges"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\value_ranges.py",
    "line_number": 1021,
    "line": "    # TODO: this is slightly inaccurate because truncdiv operates at integer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\utils\\_sympy\\value_ranges.py",
    "line_number": 1069,
    "line": "        # TODO A better way of doing this would be to assign them a range upon creation, as"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_custom_op\\autograd.py",
    "line_number": 47,
    "line": "# TODO(#101191): Use the actual C++ autograd not implemented fallback,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions.py",
    "line_number": 70,
    "line": "        # TODO: pretty sure this is not quite right"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions.py",
    "line_number": 398,
    "line": "# TODO: None of these loss castings are quite correct, see"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions.py",
    "line_number": 1507,
    "line": "# TODO: this doesn't appear to have enough precision in bfloat16"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions.py",
    "line_number": 1685,
    "line": "# TODO: Take a closer look at the type promotion semantics"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions.py",
    "line_number": 1892,
    "line": "# TODO: this decomposition is NOT here to stay. We would much prefer replacing native_batch_norm"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions.py",
    "line_number": 2160,
    "line": "    assert not layout or layout == torch.strided, \"TODO\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions.py",
    "line_number": 2161,
    "line": "    assert not pin_memory, \"TODO\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions.py",
    "line_number": 2514,
    "line": "            # TODO make minimum accept scalars"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions.py",
    "line_number": 4379,
    "line": "        # TODO: handling of slice"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions_for_jvp.py",
    "line_number": 30,
    "line": "# TODO: The mechanism we are using to register decompositions doesn't"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions_for_jvp.py",
    "line_number": 100,
    "line": "# TODO: do these also belong here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions_for_rng.py",
    "line_number": 30,
    "line": "# TODO - We have to register many more distributions here, and also higher level"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\decompositions_for_rng.py",
    "line_number": 171,
    "line": "        # TODO: Investigate if there is be a better way to wrap the tuple in a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_decomp\\__init__.py",
    "line_number": 28,
    "line": "# TODO: relax key type here; torch registrations should be possible to; but"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dispatch\\python.py",
    "line_number": 80,
    "line": "    # TODO: test the specs match; empirically  sometimes we have a tuple"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dispatch\\python.py",
    "line_number": 128,
    "line": "                # TODO: suppress guards"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dispatch\\python.py",
    "line_number": 138,
    "line": "        # TODO: This probably does the wrong thing if you're running other"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\bytecode_analysis.py",
    "line_number": 13,
    "line": "    # TODO(jansel): double check exception handling"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\cache_size.py",
    "line_number": 78,
    "line": "    TODO(janimesh) - Consider adding a map from tuple_of_match_ids to count -"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\compiled_autograd.py",
    "line_number": 142,
    "line": "        # TODO(jansel): are all these modes needed?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\compiled_autograd.py",
    "line_number": 400,
    "line": "                        # TODO: DCE for compiled autograd graph"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\comptime.py",
    "line_number": 116,
    "line": "            # TODO: Maybe complain if this isn't a int/bool/float variable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\comptime.py",
    "line_number": 135,
    "line": "    # TODO: API for adding a custom guard"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\comptime.py",
    "line_number": 276,
    "line": "        # TODO: improve print format, current guard format is extremely"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\config.py",
    "line_number": 116,
    "line": "# TODO(janimesh, voz): Remove both of these flags (or atleast guard_nn_modules)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\config.py",
    "line_number": 195,
    "line": "# TODO: Detect this situation automatically so the user doesn't need"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\convert_frame.py",
    "line_number": 142,
    "line": "class TODO_UNKNOWN:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\convert_frame.py",
    "line_number": 477,
    "line": "        # TODO - Running exec generated frame seems propagates f_globals to the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\convert_frame.py",
    "line_number": 1140,
    "line": "# TODO mlazos: add support for same args, or record them"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\convert_frame.py",
    "line_number": 1213,
    "line": "            # TODO: the first condition is not covered by any test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\create_parameter_op.py",
    "line_number": 40,
    "line": "    # TODO(jansel): alloc followed by free is inefficient, need a way to allocate an unbacked tensor."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\debug_utils.py",
    "line_number": 162,
    "line": "        # TODO - Assuming that all modules can be safely repr'd. Check if that assumption is correct."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\debug_utils.py",
    "line_number": 217,
    "line": "        # TODO - Keep this code for now. But, I don't think we will need this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\debug_utils.py",
    "line_number": 511,
    "line": "# TODO: Support bundling the entire repro into a zip file for ease of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\debug_utils.py",
    "line_number": 538,
    "line": "                    # TODO: transfer it to the right device?  But failing this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\debug_utils.py",
    "line_number": 600,
    "line": "        # TODO: consider ensuring tensor and storage counters line up?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\debug_utils.py",
    "line_number": 634,
    "line": "        # TODO: being optional on device is kind of pointless as the default"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\debug_utils.py",
    "line_number": 683,
    "line": "    # TODO: this doesn't actually symint atm"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\decorators.py",
    "line_number": 162,
    "line": "    TODO(voz): We now have allow_in_graph, disallow_in_graph, forbid_in_graph - some more robust"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\decorators.py",
    "line_number": 431,
    "line": "        # TODO: Make this configurable via a supported public API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\decorators.py",
    "line_number": 440,
    "line": "        # TODO(voz): Should we bounds check?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\decorators.py",
    "line_number": 458,
    "line": "        # TODO: Make this configurable via a supported public API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\decorators.py",
    "line_number": 464,
    "line": "        # TODO(voz): Should we bounds check?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\decorators.py",
    "line_number": 511,
    "line": "        # TODO: Make this configurable via a supported public API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\decorators.py",
    "line_number": 526,
    "line": "        # TODO(voz): Should we bounds check?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\decorators.py",
    "line_number": 555,
    "line": "# TODO: we should delete this whole _allow_in_graph_einops logic by approximately 2024 Q2"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\eval_frame.py",
    "line_number": 797,
    "line": "# TODO(voz): Consider making \"explain\" output alongside a run / part of a run"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\eval_frame.py",
    "line_number": 801,
    "line": "        # TODO(voz): Do we want a decorator for this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\eval_frame.py",
    "line_number": 837,
    "line": "        # TODO(voz): We may have instances of `f` that mutate inputs, we should track sideeffects and reject."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\eval_frame.py",
    "line_number": 844,
    "line": "        # TODO(voz): Do we want a decorator for this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\eval_frame.py",
    "line_number": 901,
    "line": "                    # TODO(zhxchen17) Also preserve all the user constraints here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\eval_frame.py",
    "line_number": 1010,
    "line": "        # TODO: option to print ALL of the stack traces at once"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\eval_frame.py",
    "line_number": 1430,
    "line": "            # TODO(voz): We may have instances of `f` that mutate inputs, we should track sideeffects and reject."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\external_utils.py",
    "line_number": 25,
    "line": "    TODO(khabinov): we should deprecate this function and use one of these two:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 469,
    "line": "        # TODO - source debug string is probably wrong here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 554,
    "line": "        # TODO: something here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 937,
    "line": "                # TODO(anijain2305) - Consider isolating GetItemSource and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 1281,
    "line": "            # TODO(anijain2305) - Delete this when DictGuardManager uses tags"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 1327,
    "line": "            # TODO(anijain2305) - This is currently restricted to nn.Module objects"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 1377,
    "line": "            # TODO(anijain2305) - Consider this moving this guard to C++"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 1399,
    "line": "            # TODO(anijain2305) - Consider this moving this guard to C++"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 1548,
    "line": "        # the internal types match.  (TODO: what about nested lists?)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 1568,
    "line": "        # TODO: It feels like it would be better to just implement our own"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 1664,
    "line": "    # TODO(voz): Deduplicate w/ AOTAutograd dupe input guards"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 1856,
    "line": "            # TODO(anijain2305,williamwen42) - Consider moving this to C++."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 1907,
    "line": "            # TODO(voz): Either populate a dispatch_key check into the guards, or error on users passing in an unsupported"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 1911,
    "line": "            # TODO(voz): We are missing storage offset in all our tensor guards?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 2254,
    "line": "                # TODO: we could make use of 'DefaultsSource' and offer a .guard.is_defaults() API"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 2268,
    "line": "        # TODO(anijain2305) - Currently this information is stored as an attr on"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 2276,
    "line": "            # TODO: don't do the string rep, do something more structured here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 2287,
    "line": "            # TODO(anijain2305, ydwu4) - Skipping export because of following test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 2453,
    "line": "        # TODO(anijain2305) - There is a duplicate logic in Dynamo to find"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 2471,
    "line": "        # TODO: the \"guard\" here is actually just the top level SHAPE_ENV"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 2503,
    "line": "            # TODO (anijain2305) - When enable_cpp_guard_manager is ON by"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 2532,
    "line": "        # TODO(whc) maybe '.code_parts' was only kept around for the guard callback? so we don't need both"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\guards.py",
    "line_number": 2890,
    "line": "        # TODO(voz): Combine local and global guard builders."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 214,
    "line": "            # TODO: replace `same` function with the one in testing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 270,
    "line": "        # TODO: maybe should just pass the entire f_code in here?  Not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 312,
    "line": "                # TODO (tmanlaibaatar) Remove this once we always lift params and buffers"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 531,
    "line": "    # TODO(rzou): can delete after we refactor speculate_subgraph to use nested GraphTracer."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 608,
    "line": "        # TODO - Consider having a torch level API for torch_function_state. As"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 671,
    "line": "            # TODO: don't readd symint if we already have it in graph"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 1359,
    "line": "                    # TODO(voz): The way export uses gm, and fake tensors, is not supported with us resetting"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 1363,
    "line": "                # TODO(voz): Ostensibily, this should be scoped and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 1430,
    "line": "            # TODO: Why isn't this stored in meta :think:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 1514,
    "line": "            # TODO: We can also technically remove all cases when the input"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 1535,
    "line": "            # TODO: I don't think it's possible to have a bare int/float here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\output_graph.py",
    "line_number": 1538,
    "line": "            # TODO: This will bail here if you ever end up with a more complicated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\resume_execution.py",
    "line_number": 85,
    "line": "        # TODO(williamwen42) call method order is wrong for 3.13+ - will fix later"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\resume_execution.py",
    "line_number": 539,
    "line": "            # TODO(jansel): add dead code elimination here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\source.py",
    "line_number": 748,
    "line": "# TODO: can probably write a generic \"test this on everything in the chain\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\symbolic_convert.py",
    "line_number": 426,
    "line": "            # TODO maybe should respect DtoH sync intention of users later??"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\symbolic_convert.py",
    "line_number": 559,
    "line": "                # TODO link the torch.cond doc later"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\symbolic_convert.py",
    "line_number": 597,
    "line": "                # TODO: Also report the traceback from the parent frame"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\symbolic_convert.py",
    "line_number": 1443,
    "line": "                    # TODO(anijain2305) - This is not tested .. unable to create a testcase"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\symbolic_convert.py",
    "line_number": 2804,
    "line": "        # TODO(jansel): check the id of the cell rather than the contents"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\symbolic_convert.py",
    "line_number": 3085,
    "line": "        # TODO: mlazos, add support for enabling multiple artifact logs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\symbolic_convert.py",
    "line_number": 3142,
    "line": "            # TODO(anijain2305) - This works but we should probably have a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\testing.py",
    "line_number": 162,
    "line": "        # TODO: shouldn't this be f_locals/f_globals from frame?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\test_minifier_common.py",
    "line_number": 132,
    "line": "            # TODO: return a more appropriate data structure here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\trace_rules.py",
    "line_number": 3170,
    "line": "    # TODO: Once we require py3.9 use removesuffix instead."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\trace_rules.py",
    "line_number": 3324,
    "line": "# TODO(yanboliang, anijain2305) - There are a few concerns that we should"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\types.py",
    "line_number": 82,
    "line": "        # TODO(whc) how do I annotate a _RecordFunction here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\utils.py",
    "line_number": 687,
    "line": "    # TODO(anijain2305) - Investigate if we can get rid of this function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\utils.py",
    "line_number": 858,
    "line": "        # TODO: log to init/id tlparse after I add support for it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\utils.py",
    "line_number": 1049,
    "line": "    # TODO: this is questionable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\utils.py",
    "line_number": 2320,
    "line": "            from tabulate import tabulate  # TODO: Check that this is installed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\utils.py",
    "line_number": 2544,
    "line": "    # TODO - This is a temporary situation where we have two versions of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\_trace_wrapped_higher_order_op.py",
    "line_number": 59,
    "line": "# TODO(jansel): need to ensure this does not get DCEed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\backends\\cudagraphs.py",
    "line_number": 60,
    "line": "                    # TODO: not correct for args that contain tensors in a struct"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\backends\\cudagraphs.py",
    "line_number": 66,
    "line": "        # TODO: error on unrecognized nodes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\backends\\distributed.py",
    "line_number": 155,
    "line": "                # TODO(whc)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\backends\\distributed.py",
    "line_number": 268,
    "line": "            # TODO - better way of doing this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\backends\\tvm.py",
    "line_number": 101,
    "line": "            # TODO(shingjan): This could be replaced by tvm.contrib.torch.optimize_torch"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\polyfills\\itertools.py",
    "line_number": 52,
    "line": "        # TODO: use indices = itertools.count() and merge implementation with the else branch"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_aot.py",
    "line_number": 78,
    "line": "        # TODO: why do we need to deepcopy the original graph?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_aot.py",
    "line_number": 87,
    "line": "            # TODO: Failures here are troublesome because no real inputs,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_aot.py",
    "line_number": 246,
    "line": "            # TODO: improve these names with FQN"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_aot.py",
    "line_number": 335,
    "line": "    # TODO: factor this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_aot.py",
    "line_number": 500,
    "line": "    # TODO: speed this up"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_aot.py",
    "line_number": 575,
    "line": "    # TODO: The logic for cloning inputs/models here is intentionally"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_aot.py",
    "line_number": 664,
    "line": "    # TODO: check eager determinism"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_aot.py",
    "line_number": 742,
    "line": "# TODO: lazily load the inputs or something, rather than cloning them"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_aot.py",
    "line_number": 893,
    "line": "    # TODO: make this an option for --analyze too"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_dynamo.py",
    "line_number": 167,
    "line": "    # TODO: Figure out why torch.compile'd hash isn't work on this codepath"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_dynamo.py",
    "line_number": 173,
    "line": "            # TODO: improve these names with FQN"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_dynamo.py",
    "line_number": 253,
    "line": "    # TODO: factor this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_dynamo.py",
    "line_number": 280,
    "line": "    # TODO: It's inconsistent to pass SymInt inputs but REAL tensors."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\repro\\after_dynamo.py",
    "line_number": 437,
    "line": "            # TODO: disable clone"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 252,
    "line": "    # TODO: storing a SymInt here but not a FakeTensor is a pretty strange"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 468,
    "line": "        # TODO(jansel): something like a REPR_MATCH might be more robust here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 595,
    "line": "                # TODO(anijain2305) - Do we have to guard on all the keys? Can"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 880,
    "line": "            # TODO: this doing it manually is bad"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 892,
    "line": "            # TODO: see if we need to add custom guard instead of a simple ID_MATCH"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 896,
    "line": "            # TODO: see if we need to add custom guard instead of a simple ID_MATCH"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 900,
    "line": "            # TODO: see if we need to add custom guard instead of a simple ID_MATCH"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 1027,
    "line": "            # TODO(whc): Why do we limit this to methods on NNModules?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 1067,
    "line": "                # TODO(jansel): combine this case with the one above"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 1429,
    "line": "                # TODO: Delete this condition when rollout is done.  NB: this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 1570,
    "line": "        # TODO(pearu,sparse-team) - Add the corresponding SPARSE_TENSOR_MATCH guards"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 1784,
    "line": "            # TODO: This should be dynamic, as we in general do not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 1793,
    "line": "                # TODO: dynamic_dim = DimDynamic.STATIC should work but"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 1810,
    "line": "            # TODO: Do I actually need guard for constant source?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 1875,
    "line": "        # TODO: Switch RandomValueSource over to use this, this is more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 1888,
    "line": "        # TODO: Maybe the tensor-ification should be built into the source,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 1985,
    "line": "                # TODO: when can this happen?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 2172,
    "line": "        # TODO: not sure about this fake mode test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 2306,
    "line": "            # TODO: this is a little sus, because we didn't check what the self is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 2532,
    "line": "    # TODO: index export_constraints ahead of time so we don't have to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 2741,
    "line": "            # TODO: for TensorGuards, this eventually may need more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builder.py",
    "line_number": 2746,
    "line": "                # TODO: revise this, but for now this stride instead of ()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builtin.py",
    "line_number": 303,
    "line": "                # TODO: If we expand this to handle tensor args, we need to manually"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builtin.py",
    "line_number": 1738,
    "line": "            # TODO(mlazos) - Do we need this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\builtin.py",
    "line_number": 1784,
    "line": "                    # TODO(voz): Make it work properly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\dicts.py",
    "line_number": 78,
    "line": "            # TODO Temorarily remove to figure out what keys are we breaking on"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\dicts.py",
    "line_number": 106,
    "line": "            # TODO: Put this in utils and share it between variables/builtin.py and here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\dicts.py",
    "line_number": 419,
    "line": "# TODO: Implementing this via inheritance rather than composition is a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\dicts.py",
    "line_number": 918,
    "line": "    # TODO(voz): Upstream to transformers lib"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\distributed.py",
    "line_number": 254,
    "line": "    TODO: make it possible to use ProcessGroupVariable as input to simple functions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\distributed.py",
    "line_number": 259,
    "line": "    TODO: should we make this inherit VT instead of UDOV? Do we want any of the default behaviors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\distributed.py",
    "line_number": 289,
    "line": "        # TODO should this just raise unimplemented?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\higher_order_ops.py",
    "line_number": 483,
    "line": "            # TODO: support pytree output"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\higher_order_ops.py",
    "line_number": 647,
    "line": "        # TODO(voz): Support fake tensor dispatch for recursive"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\higher_order_ops.py",
    "line_number": 705,
    "line": "            # TODO: Support kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\higher_order_ops.py",
    "line_number": 1037,
    "line": "        # TODO: Fix these pointless new_empty calls appearing in the dynamo output graph."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\higher_order_ops.py",
    "line_number": 1164,
    "line": "        # TODO: Support kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\higher_order_ops.py",
    "line_number": 1576,
    "line": "        # TODO (tmanlaibaatar) support pytree here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\higher_order_ops.py",
    "line_number": 2082,
    "line": "        # TODO: assert that bwd_graph didn't capture values that were"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\higher_order_ops.py",
    "line_number": 2085,
    "line": "        # TODO(oulgen): Ideally, we would not do a linear search for output"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\misc.py",
    "line_number": 302,
    "line": "        # TODO: support an expression form as well"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\misc.py",
    "line_number": 1295,
    "line": "            # TODO Add all the functions that go from constants to constants to can_constant_fold_through"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\nn_module.py",
    "line_number": 369,
    "line": "                # TODO: Use named_children when it supports remove_duplicate=False."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\nn_module.py",
    "line_number": 428,
    "line": "                    # TODO: do we want to support __call__ for GM's?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\nn_module.py",
    "line_number": 680,
    "line": "                # TODO(anijain2305,export-team) - Remove this if condition when inlining of inbuilt nn modules is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\nn_module.py",
    "line_number": 1008,
    "line": "                # TODO(anijain2305) - This might not be needed if we let Dynamo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\tensor.py",
    "line_number": 161,
    "line": "        # TODO: strip off fake tensor from repr here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\tensor.py",
    "line_number": 971,
    "line": "                # TODO(voz):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\tensor.py",
    "line_number": 1002,
    "line": "                # TODO(jansel): returning None here is wrong, it should be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\tensor.py",
    "line_number": 1093,
    "line": "        # TODO: Should we allow non SymTypes here?  Today it is allowed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\tensor.py",
    "line_number": 1215,
    "line": "            unimplemented(f\"TODO: add support for ndarray.{name}\")"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\torch.py",
    "line_number": 733,
    "line": "                # TODO: this probably should be folded somewhere else but I'm not sure where"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\torch.py",
    "line_number": 734,
    "line": "                # TODO: some of the other symbolic_shapes special tools can also get this treatment too"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\torch.py",
    "line_number": 761,
    "line": "                # TODO: there maybe other recursive structures you need to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\torch.py",
    "line_number": 876,
    "line": "            # TODO(voz): Replace w/ dynamic shape rewrite table."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\torch.py",
    "line_number": 1074,
    "line": "        # TODO(jansel/bdhirsh) - There is some issue with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\torch.py",
    "line_number": 1083,
    "line": "        # TODO(jansel): if the new param falls out of scope, currently it won't get freed until"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\user_defined.py",
    "line_number": 85,
    "line": "        # TODO mlazos: Temporary to get this stack to pass"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\user_defined.py",
    "line_number": 407,
    "line": "            )  # TODO(voz): These can invoke user code!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\user_defined.py",
    "line_number": 410,
    "line": "            )  # TODO(voz): These can invoke user code!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\user_defined.py",
    "line_number": 606,
    "line": "    # TODO: arguably, this should route to wrap_symint/wrap_symfloat"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\user_defined.py",
    "line_number": 739,
    "line": "                # TODO(anijain2305) - Why do we need to guard on all keys?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\user_defined.py",
    "line_number": 783,
    "line": "                # TODO(jansel): add a guard to check for monkey patching?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\user_defined.py",
    "line_number": 1004,
    "line": "        # TODO(anijain2305) - Investigate if we need specialization for more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_dynamo\\variables\\user_defined.py",
    "line_number": 1201,
    "line": "        # TODO this should probably be merged with the dict handling"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\converter.py",
    "line_number": 802,
    "line": "        # TODO: covnert sourceRange() into stack_trace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\converter.py",
    "line_number": 877,
    "line": "        # TODO: covnert sourceRange() into stack_trace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\converter.py",
    "line_number": 936,
    "line": "                    # TODO: covnert sourceRange() into stack_trace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\converter.py",
    "line_number": 1016,
    "line": "        # TODO: (1/N) stage."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\converter.py",
    "line_number": 1175,
    "line": "        # TODO: support aten::enable_grad in both TorchScript and Converter."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\converter.py",
    "line_number": 1252,
    "line": "                # TODO: Revisit this later after HigherOrderOp design changes."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\converter.py",
    "line_number": 1494,
    "line": "        # TODO: adjust input orders to match GraphSignature convention"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\non_strict_utils.py",
    "line_number": 128,
    "line": "    # TODO(avik): refactor Dynamo to avoid duplication of the following code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\non_strict_utils.py",
    "line_number": 285,
    "line": "        # TODO(avik): Maybe record the constraint violation error instead and replay later?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\pass_base.py",
    "line_number": 105,
    "line": "                        # TODO (tmanlaibaatar) properly support Quantized FakeTensor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\pass_base.py",
    "line_number": 110,
    "line": "                        # TODO we should allocate static shapes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\pass_base.py",
    "line_number": 119,
    "line": "                        # TODO: This is just a workaround to get over the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\pass_base.py",
    "line_number": 138,
    "line": "                        # TODO (tmanlaibaatar) properly support Quantized FakeTensor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\pass_base.py",
    "line_number": 146,
    "line": "                        # TODO: This is just a workaround to get over the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\pass_base.py",
    "line_number": 281,
    "line": "        # TODO(angelayi): Update this with what we decide to do for metadata in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\utils.py",
    "line_number": 271,
    "line": "                # TODO(avik): Assert the following property in the IR verifier:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\utils.py",
    "line_number": 627,
    "line": "    # TODO: Directly provide inspect.signature compatible TS-d module."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\verifier.py",
    "line_number": 32,
    "line": "    # TODO(angelayi): remove this in favor of _check_val"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\verifier.py",
    "line_number": 46,
    "line": "        elif isinstance(val, (FakeTensor, torch.Tensor)):  # TODO(zhxchen17) Remove Tensor."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\verifier.py",
    "line_number": 177,
    "line": "            # TODO Remove this allowlist."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\verifier.py",
    "line_number": 187,
    "line": "                # TODO (tmanlaibaatar)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\verifier.py",
    "line_number": 203,
    "line": "                # TODO (tmanlaibaatar) more proper way is needed here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\verifier.py",
    "line_number": 216,
    "line": "                # TODO(T140410192): should have fake tensor for all dialects"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\verifier.py",
    "line_number": 264,
    "line": "                # TODO(zhxchen17)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\passes\\constant_folding.py",
    "line_number": 133,
    "line": "        # TODO - fix errors with this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\passes\\constant_folding.py",
    "line_number": 140,
    "line": "        # TODO - constant folding triton kernel returns the inputs -- fix this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\passes\\constant_folding.py",
    "line_number": 149,
    "line": "        # TODO - more complicated strategy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\passes\\replace_autocast_with_hop_pass.py",
    "line_number": 58,
    "line": "            # TODO: check if current auto-cast type is the same as the args of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\passes\\replace_quantized_ops_with_standard_ops_pass.py",
    "line_number": 645,
    "line": "        TODO: SetAttr + quantized ops will result incorrect program. This flag is used to temporarily"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\passes\\replace_with_hop_pass_util.py",
    "line_number": 46,
    "line": "        # TODO (tmanlaibaatar) Figure out if this is right behaviour"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\passes\\replace_with_hop_pass_util.py",
    "line_number": 98,
    "line": "            # TODO (shangdiy): remove this line, since the export graph can be non-functional"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 263,
    "line": "        storage_offset=serialize_sym_int(0),  # TODO needs to be fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 311,
    "line": "        # TODO: this should be fixed by deserialization instead."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 340,
    "line": "    # TODO: Remove this adjustment when Ed gets rid of fractional ranges"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 483,
    "line": "            # TODO(zhxchen17) Maybe provide a function name helper in FX."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 487,
    "line": "        else:  # TODO(zhxchen17) Don't catch all here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 523,
    "line": "                # TODO: create a new tensor_values here, meta might have faketensor info"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 1095,
    "line": "            raise AssertionError(\"TODO\")"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 1378,
    "line": "        # TODO: Directly serialize exported_program.constants once"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 1464,
    "line": "        ):  # TODO(zhxchen17) Follow up on this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 1472,
    "line": "        else:  # TODO(zhxchen17) Don't catch all here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 1506,
    "line": "                # TODO: This is HIGHLY SUSPICIOUS ezyang(May 2024)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 1862,
    "line": "                # TODO(avik): find a better way to keep this collection in sync;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 2197,
    "line": "            # TODO: Currently this is needed due to indexing Sequential"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_export\\serde\\serialize.py",
    "line_number": 2301,
    "line": "        # TODO(zhxchen17) blocked on thrift schema refactor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\aot_autograd.py",
    "line_number": 487,
    "line": "                # TODO: Ensure that this codepath is never exercised from"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\aot_autograd.py",
    "line_number": 557,
    "line": "    # TODO: Chillee argues that dynamo itself should pass in fake tensors to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\aot_autograd.py",
    "line_number": 663,
    "line": "                    # TODO: refactor the subclass path of run_functionalized_fw_and_collect_metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\aot_autograd.py",
    "line_number": 1091,
    "line": "    # TODO: There is something deeply wrong here; compiled_fn running with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\aot_autograd.py",
    "line_number": 1395,
    "line": "    # TODO: we might have to temporarily patch config.functionalize_rng"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\aot_autograd.py",
    "line_number": 1535,
    "line": "                # TODO(avik): Assigning all other types are allowed right now."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\autograd_function.py",
    "line_number": 186,
    "line": "        # TODO: update following link from master to stable once that's out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\autograd_function.py",
    "line_number": 290,
    "line": "            # TODO: Update link to stable once that's out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\autograd_function.py",
    "line_number": 305,
    "line": "        # TODO: Update link to stable once that's out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\compilers.py",
    "line_number": 165,
    "line": "            # TODO: There is some sort of problem where we record that an"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\eager_transforms.py",
    "line_number": 126,
    "line": "        # TODO: Remove the following hack for namedtuples"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\make_functional.py",
    "line_number": 281,
    "line": "        # TODO: We don't need to copy the model to create a stateless copy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\make_functional.py",
    "line_number": 332,
    "line": "        # TODO: We don't need to copy the model to create a stateless copy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\partitioners.py",
    "line_number": 1027,
    "line": "    # todo(chilli): This is the most questionable of the 3 heuristics for banning recompute."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\partitioners.py",
    "line_number": 1102,
    "line": "    # todo: I'm not totally sure why this heuristic matters. It's possible that this is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\partitioners.py",
    "line_number": 1437,
    "line": "    # TODO(chilli): I think if needed, this memory can be optimized with sliding"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\partitioners.py",
    "line_number": 1533,
    "line": "        # todo(chilli): Normalize this to also return ms"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\partitioners.py",
    "line_number": 1719,
    "line": "    # todo(chilli): Estimated doesn't align exactly with actual - actual is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\pyfunctorch.py",
    "line_number": 114,
    "line": "            # TODO: would be nice to assert that the layers are the same, but"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\pytree_hacks.py",
    "line_number": 9,
    "line": "# TODO: remove this file when the migration of the pytree utility is done"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\autograd_cache.py",
    "line_number": 177,
    "line": "            # TODO: example_inputs causes more cache misses than necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\autograd_cache.py",
    "line_number": 233,
    "line": "    # TODO: add args and parameters"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\collect_metadata_analysis.py",
    "line_number": 129,
    "line": "    # TODO: refactor to kill this flag"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\dispatch_and_compile_graph.py",
    "line_number": 92,
    "line": "    # TODO: replace with AOTDispatchSubclassWrapper once we refactor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\dispatch_and_compile_graph.py",
    "line_number": 222,
    "line": "    # TODO: should factor this into a separate function for export that always only returns just the graph."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\dispatch_and_compile_graph.py",
    "line_number": 260,
    "line": "    # TODO: replace with AOTDispatchSubclassWrapper once we refactor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\dispatch_and_compile_graph.py",
    "line_number": 307,
    "line": "    # TODO: in AOTAutograd, we create metadata like _indices_of_inps_to_detach to detect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\functional_utils.py",
    "line_number": 189,
    "line": "            # TODO:add sparse tensors support to functionalization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\functional_utils.py",
    "line_number": 415,
    "line": "    # isn't actually true.  (TODO: Could this cause problems for Inductor?)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\jit_compile_runtime_wrappers.py",
    "line_number": 226,
    "line": "        # TODO: once we use pre_compile this will be flat_fn at the top of this function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\jit_compile_runtime_wrappers.py",
    "line_number": 485,
    "line": "        # TODO: we should apply the below \"detach inputs if their gradients are statically known to be None\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\logging_utils.py",
    "line_number": 17,
    "line": "# TODO: It would be nice to reset the numbering every time aot_id goes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\logging_utils.py",
    "line_number": 49,
    "line": "    # TODO: Don't shove the aot_id in here; set it in the context"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 361,
    "line": "                    #     TODO: discuss on the PR and decide if we want to tr to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 440,
    "line": "    # TODO: I would love to get rid of this argument, but it's"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 484,
    "line": "                    # TODO: this won't be right for the backward when we convert the call_compiled_backward to use the wrapper"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 769,
    "line": "    # TODO: Can avoid the zip here too, probably"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 904,
    "line": "            # TODO(voz): This structure is 1:1, we could consider an alternate structure like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 980,
    "line": "            # TODO: work out how to setup this assert correctly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 1005,
    "line": "    trace_joint: bool  # TODO: refactor trace_joint"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 1727,
    "line": "                # TODO: replace this with FunctionalizedRngRuntimeWrapper"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 1807,
    "line": "                # TODO: figure out how to refactor the backward properly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 1838,
    "line": "                        # TODO (tmanlaibaatar) Should actually call coerce_runtime_tangent"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 1909,
    "line": "                        # TODO: replace with post_compile wrapper"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 1992,
    "line": "                    # TODO: replace this with FunctionalizedRngRuntimeWrapper.post_compile"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 2021,
    "line": "                            # TODO: figure out how to refactor the backward properly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 2050,
    "line": "                # TODO: figure out how to refactor the backward properly so I can use aot_dispatch_subclass_wrapper() here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 2089,
    "line": "            # TODO: Check aliasing relationships"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\runtime_wrappers.py",
    "line_number": 2090,
    "line": "            # TODO: Check strides for metadata mutation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\schemas.py",
    "line_number": 305,
    "line": "    # TODO: we should kill this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\schemas.py",
    "line_number": 501,
    "line": "        # TODO: This function is only a best effort: there are other fields that may not be cache safe"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\subclass_utils.py",
    "line_number": 245,
    "line": "# TODO: UNUSED. delete?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\subclass_utils.py",
    "line_number": 277,
    "line": "    #   TODO: add a test case to assert we error when this happens, instead of getting silent correctness"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\traced_function_transforms.py",
    "line_number": 642,
    "line": "    # TODO (tmanlaibaatar) revisit this if we ever need to turn on non-strict joint graph export"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\traced_function_transforms.py",
    "line_number": 751,
    "line": "    # TODO: add subclass guards (later PR)."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\utils.py",
    "line_number": 126,
    "line": "            # TODO: Please remove soon"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\utils.py",
    "line_number": 414,
    "line": "        # TODO(future): there is likely a less brittle way to do this by walking"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_functorch\\_aot_autograd\\utils.py",
    "line_number": 423,
    "line": "        # TODO(future): there is likely a less brittle way to do this, same"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\associative_scan.py",
    "line_number": 54,
    "line": "        # TODO: find torch alternative for slice_along dim for torch.jit.script to work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\cond.py",
    "line_number": 208,
    "line": "            # TODO: There is a major issue that the create_fw_bw in the higher_order_op is invoked twice:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\cond.py",
    "line_number": 320,
    "line": "    # TODO: the unbacked symbol allocations MUST NOT leak out, if you want to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\cond.py",
    "line_number": 332,
    "line": "    # TODO: Uhh.... it shouldn't matter, but changing this to true_fn results in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\cond.py",
    "line_number": 335,
    "line": "    # TODO Sometimes the operands are not completely FakeTensor, something seems went wrong in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\executorch_call_delegate.py",
    "line_number": 93,
    "line": "    # TODO: support autograd"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\map.py",
    "line_number": 33,
    "line": "# TODO: We add this to prevent dymamo from tracing into map_wrapper,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\out_dtype.py",
    "line_number": 19,
    "line": "# TODO to figure out a more generic approach"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\torchbind.py",
    "line_number": 36,
    "line": "# TODO: this is not really sufficient. While passes (hopefully) check"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\triton_kernel_wrap.py",
    "line_number": 634,
    "line": "    # TODO(oulgen): Preexisting bug, if two kernel inputs are views of each"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\triton_kernel_wrap.py",
    "line_number": 669,
    "line": "    # TODO(oulgen): For performance reasons, we want to ensure that these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\triton_kernel_wrap.py",
    "line_number": 690,
    "line": "    # TODO(oulgen): For performance reasons, we want to ensure that these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\utils.py",
    "line_number": 274,
    "line": "# TODO: The parameter use_output_and_grad_bw is required because some operations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_higher_order_ops\\wrap.py",
    "line_number": 233,
    "line": "            # TODO: We want to use the same `checkpoint(Interpreter(gmod).run, *args, **kwargs)` here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\autotune_process.py",
    "line_number": 834,
    "line": "        # TODO(jgong5): use CppPythonBindingsCodeCache for better binding perf"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codecache.py",
    "line_number": 533,
    "line": "        # TODO: These tensors don't currently pickle, so we can't cache a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codecache.py",
    "line_number": 597,
    "line": "            # TODO: pickler.fast is technically deprecated. Will this work on new python versions?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codecache.py",
    "line_number": 882,
    "line": "            # TODO: migrate all disable reasons to stack trace, refactor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codecache.py",
    "line_number": 969,
    "line": "    # TODO(masnesral): Investigate whether it's beneficial to store compiled graphs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codecache.py",
    "line_number": 1199,
    "line": "        # TODO: This could be better if we're ever able to serialize compiled"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codecache.py",
    "line_number": 1459,
    "line": "        # TODO - ordered set"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codecache.py",
    "line_number": 1754,
    "line": "            # TODO: Fix mmap weights with cuda"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\comms.py",
    "line_number": 229,
    "line": "    TODO: Come up with a better approach"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\comm_analysis.py",
    "line_number": 171,
    "line": "    - 8 gpus per node  # TODO: Need to find a way to get accurate \"gpus per node\" and \"# nodes\" info."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\comm_analysis.py",
    "line_number": 179,
    "line": "    # TODO: Need to find a way to get accurate \"gpus per node\" and \"# nodes\" info."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\compile_fx.py",
    "line_number": 643,
    "line": "        # TODO: should this be part of fx_kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\compile_fx.py",
    "line_number": 752,
    "line": "        # TODO: Should we actually dump this?  It should be redundant with the aot"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\compile_fx.py",
    "line_number": 1095,
    "line": "                    # TODO - could make one single op of multiple slices"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\compile_fx.py",
    "line_number": 1477,
    "line": "        # TODO: can add logging before/after the call to create_aot_dispatcher_function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\config.py",
    "line_number": 679,
    "line": "# TODO: remove later"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\config.py",
    "line_number": 845,
    "line": "    # TODO - need to debug why this prevents cleanup"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\constant_folding.py",
    "line_number": 156,
    "line": "        # TODO - fix errors with this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\constant_folding.py",
    "line_number": 163,
    "line": "        # TODO - constant folding triton kernel returns the inputs -- fix this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\constant_folding.py",
    "line_number": 172,
    "line": "        # TODO - more complicated strategy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\cpp_builder.py",
    "line_number": 660,
    "line": "            # TODO: this is to avoid FC breakage for fbcode. When using newly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\cpp_builder.py",
    "line_number": 977,
    "line": "                # TODO: fix issue, can't find omp.h"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\cpu_vec_isa.py",
    "line_number": 174,
    "line": "    )  # TODO: use cflags"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\cpu_vec_isa.py",
    "line_number": 229,
    "line": "    )  # TODO: use cflags"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\cudagraph_trees.py",
    "line_number": 188,
    "line": "    # TODO - remove, prevents cleanup"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\cudagraph_trees.py",
    "line_number": 209,
    "line": "    TODO: in the future, we would like to do the following once storage weak refs land"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\cudagraph_trees.py",
    "line_number": 255,
    "line": "        # TODO - when issue #91395 is landed, we can set a weakref on"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\cudagraph_trees.py",
    "line_number": 1555,
    "line": "        # TODO: - should we make the storage resizable ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\cudagraph_trees.py",
    "line_number": 1677,
    "line": "            lambda: \"TODO: graph recording observed an input tensor deallocate during graph \""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\cudagraph_trees.py",
    "line_number": 1805,
    "line": "    # TODO: make generation increment configurable, warn on overwrite."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\cudagraph_trees.py",
    "line_number": 2353,
    "line": "        # TODO: we could also allow the these weak refs to continue to be allocated,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\decomposition.py",
    "line_number": 123,
    "line": "# TODO: for now, inductor doesn't handle asserts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\decomposition.py",
    "line_number": 287,
    "line": "    # todo: Look into why and fix it (hopefully)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\decomposition.py",
    "line_number": 435,
    "line": "    assert not self.is_complex(), \"TODO: implement this\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\decomposition.py",
    "line_number": 516,
    "line": "    # TODO: _to_copy tensor to stride permutation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\decomposition.py",
    "line_number": 788,
    "line": "# TODO(aakhundov): replace this (and the above) Any by more"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\dependencies.py",
    "line_number": 483,
    "line": "            # TODO(jansel): explore this further normalization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\dependencies.py",
    "line_number": 527,
    "line": "# TODO: check call sites"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\freezing.py",
    "line_number": 45,
    "line": "    # TODO (tmanlaibaatar) figure out why this is different"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\freezing.py",
    "line_number": 103,
    "line": "    # TODO - further restrict cse ? right now needed to dedup aliasing ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_utils.py",
    "line_number": 83,
    "line": "        # todo(chilli): Not a great hash function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\graph.py",
    "line_number": 276,
    "line": "            # TODO: this should not be needed once #93059 lands"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\graph.py",
    "line_number": 278,
    "line": "            # TODO: make a dedicated UnknownSource for this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\graph.py",
    "line_number": 571,
    "line": "            # TODO - get different values per hardware"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\graph.py",
    "line_number": 942,
    "line": "        # todo(chilli): We can remove the last check once we turn buffers into"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\graph.py",
    "line_number": 951,
    "line": "        # TODO(jansel): handle input aliasing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\graph.py",
    "line_number": 1307,
    "line": "                # TODO: this is sus, it probably should be handled in the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\graph.py",
    "line_number": 1472,
    "line": "                # TODO(jansel): introduce a store vs inline choice"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\graph.py",
    "line_number": 1651,
    "line": "        # TODO(Eikan): Only support mixing cpu and other device now."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\graph.py",
    "line_number": 1878,
    "line": "        # TODO. Revisit this once the logging API is more mature"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\index_propagation.py",
    "line_number": 345,
    "line": "            # TODO Perhaps move this logic to the simplify indexing pass"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 397,
    "line": "        TODO(ezyang): I think, in principle, every IRNode should have an"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 916,
    "line": "            # TODO the best heuristic currently has XBLOCK (corresponding to numel_hint) 128"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 1008,
    "line": "            # TODO this will fail for something like ((1, N) * (N, 1)).sum()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 1033,
    "line": "            # TODO determine splits when all inputs are broadcast"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 1430,
    "line": "        # TODO(jansel): realize the reduction so we can do dynamic indexing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 1591,
    "line": "        # TODO: Unrolled reduction"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 1764,
    "line": "        # TODO: Can combine_fn/reindex close over unbacked symbols? If so, we"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 1919,
    "line": "        # TODO: custom splitting heuristic for scan"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 2494,
    "line": "        # TODO: a new class for FixedTransferLayout that output layout is constrained by input layout"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 2547,
    "line": "        # TODO: These symbols may not escape, if they don't assert so and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 3649,
    "line": "        TODO(jansel): A better algorithm here would look at downstream consumers of this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 4486,
    "line": "        # TODO: The logics here may be further simplified."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 4724,
    "line": "            # TODO(jansel): impose layout preference on realized buffer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 4819,
    "line": "        # TODO - Storage to InputBuffer"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 5012,
    "line": "        # TODO: I can't tell if the symbols here are temporary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 5342,
    "line": "            # TODO: this should be simplified once we switch to ABI-compatible only"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 5426,
    "line": "        assert isinstance(new_size, int), \"TODO: dynamic shapes\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 5880,
    "line": "                    # TODO: need to assert divisibility"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 5881,
    "line": "                    # TODO: this is invalid C++ codegen"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ir.py",
    "line_number": 6836,
    "line": "    # TODO(yifu): add a pre-grad pass to validate the correctness of collective"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 171,
    "line": "# TODO(jansel): ezyang says we won't need this in the future, try removing it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 187,
    "line": "    # TODO(jansel): add quantized types?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 339,
    "line": "        # TODO maybe we need to use pytrees here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 936,
    "line": "        # TODO: It would be better to realize the input if any of its sizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 1409,
    "line": "        # TODO <leslie> Remove this fallback when we support vectorization"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 1471,
    "line": "    # TODO: We observed negative performance impact of pointwise_cat optimization on CPU so disabled it."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 1603,
    "line": "        # TODO: We don't have to guard on sizes per se, but the number"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 1689,
    "line": "    # TODO: don't guard on static shape here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 2124,
    "line": "# TODO(jansel): we should implement decomps or lowerings for these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 2407,
    "line": "    # TODO(jansel): memory format"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 2688,
    "line": "    # deferred_runtime_asserts, TODO: try this assert out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 3297,
    "line": "    # TODO: use a masked store for this. currently only triton"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 3453,
    "line": "            # TODO: Need to support more reduction type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 3857,
    "line": "    # TODO: Generalize to other max pooling flavors, and arbitrary dim"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 3920,
    "line": "        # TODO will need a better way of determining if inputs are channels-last"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 4248,
    "line": "    # TODO: should we force these to be realized?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\lowering.py",
    "line_number": 4658,
    "line": "    # TODO(jansel): should we force these to be realized?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\mkldnn_ir.py",
    "line_number": 99,
    "line": "        # TODO <Leslie> cleaned up the fake_tensor trace as Linear implementation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\mkldnn_ir.py",
    "line_number": 404,
    "line": "        # TODO: op.call: input[0] should be at::Tensor&"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\mkldnn_lowerings.py",
    "line_number": 804,
    "line": "            ):  # <TODO> Support inplace sum fusion"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ops_handler.py",
    "line_number": 54,
    "line": "# TODO: A superclass that does desugaring for operations like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ops_handler.py",
    "line_number": 238,
    "line": "    # TODO: Better explain how the \"collective\" semantics of these ops;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ops_handler.py",
    "line_number": 260,
    "line": "    # TODO: in practice, this seems to actually return None, but not returning"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ops_handler.py",
    "line_number": 279,
    "line": "        # TODO: Improve the description with some pseudocode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ops_handler.py",
    "line_number": 530,
    "line": "        # TODO: this is probably just illegal lol"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ops_handler.py",
    "line_number": 534,
    "line": "        # TODO: this is probably just illegal lol"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ops_handler.py",
    "line_number": 696,
    "line": "        \"\"\"TODO: to be removed.  This renders as / no matter what the backend is"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\ops_handler.py",
    "line_number": 719,
    "line": "    # TODO(ezyang): Is this really the best way to do this?  What if we have"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\optimize_indexing.py",
    "line_number": 52,
    "line": "    # TODO - there are dominated uses whose dtype does not depend on whether"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\optimize_indexing.py",
    "line_number": 73,
    "line": "                    # TODO - not sure if we should be doing int/float casts while tracing,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\optimize_indexing.py",
    "line_number": 111,
    "line": "    # TODO - if dominated node of one to_dtype is not expressible in int32,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\pattern_matcher.py",
    "line_number": 1354,
    "line": "    # TODO: Revisit the functionalize_rng_ops for lowmem dropout"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\pattern_matcher.py",
    "line_number": 1829,
    "line": "    # TODO - look into using aot autograd, asserting no mutating ops here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 443,
    "line": "                        # but TODO this might be a convenient place to signal to the Collective kernels to inplace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 479,
    "line": "            # TODO(voz): Should the pragma be constant somewhere?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 500,
    "line": "        # TODO(voz): Ostensibly, we should not need this. But there are cases where C++ codegen does"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 533,
    "line": "            # todo: Calculate this - it's kinda annoying."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 592,
    "line": "                            # TODO: Figure out what's going on"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 681,
    "line": "                    # TODO(xmfan): find a better heuristic to model FLOPS/latency relationship"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 704,
    "line": "    # TODO when we drop support for Python < 3.10, we can use"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 792,
    "line": "# TODO(xmfan): reuse: an existing mapping for this if it exists, or formalize this into ir.py:ExternKernel"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 2409,
    "line": "            # TODO support benchmarking epilogue fusion"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 2476,
    "line": "                # TODO - parallel compile triton templates"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 2477,
    "line": "                # TODO - should prune/skip choices that are not within certain % of best choice"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 2488,
    "line": "            # TODO - could preserve multi template and choices for subsequent fusions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\scheduler.py",
    "line_number": 2817,
    "line": "        # TODO Don't do loop reordering for CPU for now."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\select_algorithm.py",
    "line_number": 680,
    "line": "                # TODO(nmacchioni): fix sympy division by zero"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\select_algorithm.py",
    "line_number": 913,
    "line": "        # TODO(AlnisM): Does tile_shape always exist?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\select_algorithm.py",
    "line_number": 1189,
    "line": "        # TODO(jgong5): support multi-template on CPU"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\select_algorithm.py",
    "line_number": 1193,
    "line": "        # TODO - assert that we have not mutating kernels here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\select_algorithm.py",
    "line_number": 1195,
    "line": "        # TODO(nmacchioni): remove once CI tests are fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\select_algorithm.py",
    "line_number": 1385,
    "line": "        # TODO - dont want to precompile if we have a cache hit"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\sizevars.py",
    "line_number": 619,
    "line": "                # TODO(jansel): should we use sympy.diff here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\utils.py",
    "line_number": 251,
    "line": "    # TODO: There is a bug in a call to this function, to repro:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\utils.py",
    "line_number": 584,
    "line": "            # TODO(future): maybe refactor torch/fx/graph.py to make it easy to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\utils.py",
    "line_number": 834,
    "line": "            TODO: discuss if have better solution to handle this issue."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\utils.py",
    "line_number": 1236,
    "line": "    # TODO(jgong5): support dynamic shapes for n or k"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\utils.py",
    "line_number": 1261,
    "line": "        and is_last_dim_stride1(mat1)  # TODO(jgong5): support transposed input"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\utils.py",
    "line_number": 1951,
    "line": "    # TODO(voz): It would be nice to enable this assert, but there are lots of tests that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\utils.py",
    "line_number": 1964,
    "line": "    # TODO(voz): Should we always have one anyway?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\virtualized.py",
    "line_number": 40,
    "line": "   TODO: Define a parent class / protocol that defines all of the operations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\virtualized.py",
    "line_number": 129,
    "line": "            # TODO: To be honest, I feel we probably should just error in this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\virtualized.py",
    "line_number": 160,
    "line": ")  # TODO: improve type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\autoheuristic\\autoheuristic.py",
    "line_number": 131,
    "line": "                # TODO(AlnisM): We might want to allow this in the future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\autoheuristic\\autoheuristic.py",
    "line_number": 167,
    "line": "        # TODO(AlnisM): just using the device name for now, but the same GPU model can have different names"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\autoheuristic\\autoheuristic.py",
    "line_number": 248,
    "line": "                # TODO: Find a nicer way to handle this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\autoheuristic\\autoheuristic_utils.py",
    "line_number": 101,
    "line": "        # TODO(AlnisM): there might be a better way to do this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\common.py",
    "line_number": 590,
    "line": "        # TODO: why are people passing strings to the printer here :think:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\common.py",
    "line_number": 643,
    "line": "    # TODO: Not sure this works with Triton, even when base/exp are integral"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\common.py",
    "line_number": 877,
    "line": "        # TODO: this is wrong"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\common.py",
    "line_number": 878,
    "line": "        # TODO: an easy bandaid is to generate runtime asserts that it's"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\common.py",
    "line_number": 1603,
    "line": "    # TODO: these look dead, but with all the getattr it's hard to tell..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\common.py",
    "line_number": 1784,
    "line": "        # TODO: hoist this to top level"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 1354,
    "line": "    # TODO: this seems to be dead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 2150,
    "line": "            # TODO: Using AOTI_TORCH_CHECK is causing performance drop for some models"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 2291,
    "line": "                # TODO: avoid hard-code torch.float"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 2297,
    "line": "            # TODO: should we consider load mask here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 3047,
    "line": "            self._load_mask is None  # TODO: support transposition with mask"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 3248,
    "line": "        # TODO(jgong5): support alternative tiling factors and data types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 3379,
    "line": "                    # <TODO> Leslie: maybe we can always disable vectorization when loop range is less"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 3714,
    "line": "            # <TODO> This should be removed after full support for vectorization is implemented."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 3996,
    "line": "        # TODO(jansel): allow fusion pointwise (vars1, ()) suffix?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 4015,
    "line": "        # TODO: we can extend fusion support with compatible ranges for FusedSchedulerNode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 4023,
    "line": "        # TODO: we can fix if it allows us to CSE at least one of the variables"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 4150,
    "line": "            # TODO(jgong5): support pre-op fusion with template"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 4555,
    "line": "        # TODO(voz): Ostensibly, we should not need this. But there are cases where C++ codegen does"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 4611,
    "line": "        # TODO: support kernel profile on other platforms"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp.py",
    "line_number": 4834,
    "line": "            # TODO(jansel): look into chunk size and other schedules"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_gemm_template.py",
    "line_number": 276,
    "line": "        TODO(jgong5): allow tuning various blocking options"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_gemm_template.py",
    "line_number": 396,
    "line": "            # TODO: tune the factor here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_gemm_template.py",
    "line_number": 437,
    "line": "            min_Mc_ratio = 2  # TODO(jgong5): something to tune?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_gemm_template.py",
    "line_number": 499,
    "line": "            # TODO(jgong5): perhaps use size hint to decide?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_gemm_template.py",
    "line_number": 574,
    "line": "        # TODO(jgong5): decide proper number of threads per problem size"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_gemm_template.py",
    "line_number": 822,
    "line": "        # TODO(jgong5): for int8 gemm, bias-add is handled outside of gemm template,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_micro_gemm.py",
    "line_number": 48,
    "line": "    # TODO(jgong5): support constant shapes and lds as template args."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_micro_gemm.py",
    "line_number": 337,
    "line": "    // TODO(jgong5): loop unroll for M and N"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_micro_gemm.py",
    "line_number": 507,
    "line": "    TODO(jgong5): support int8 data type."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_micro_gemm.py",
    "line_number": 514,
    "line": "    // TODO(jgong5): loop unroll for M and N"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_micro_gemm.py",
    "line_number": 570,
    "line": "    // TODO(jgong5): add prefetch hint for A, B, C"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_micro_gemm.py",
    "line_number": 675,
    "line": "    // TODO(jgong5): move tail k computation to separate loopnest to save tile configuration overhead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_micro_gemm.py",
    "line_number": 849,
    "line": "    # TODO(jgong5): allow autotuning on choices of configs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_utils.py",
    "line_number": 153,
    "line": "        # <TODO> Leslie: perhaps we can also deduce the masked dtype by"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_utils.py",
    "line_number": 280,
    "line": "    # TODO: This is wrong if one of the inputs is negative.  This is hard to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_utils.py",
    "line_number": 292,
    "line": "        # TODO: This is only accurate up to 2**53"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_utils.py",
    "line_number": 295,
    "line": "    # TODO: PowByNatural: we need to implement our own int-int pow.  Do NOT"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_utils.py",
    "line_number": 328,
    "line": "            # TODO: float vs double"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_utils.py",
    "line_number": 412,
    "line": "        # TODO: dispatch to llrint depending on index type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_wrapper_cpu.py",
    "line_number": 610,
    "line": "                        # TODO: input shape checking for regular tensor interface as well?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_wrapper_cpu.py",
    "line_number": 1239,
    "line": "                    # TODO: The current way to find a 'tensor' type arg is hacky also as mentioned above"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_wrapper_cpu.py",
    "line_number": 1282,
    "line": "                # TODO: handle integer output (e.g., as in attention)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_wrapper_cpu.py",
    "line_number": 1330,
    "line": "            # TODO: add debug printing info for non-abi compatible mode extern kernel call"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_wrapper_cpu.py",
    "line_number": 1349,
    "line": "            # TODO: consider remove \"_out\" and add missing inplace variants to fallback_ops.py"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_wrapper_cpu.py",
    "line_number": 1378,
    "line": "        # TODO: update aoti_torch_index_put_out in ir.py to use autogen out version"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_wrapper_cpu.py",
    "line_number": 1451,
    "line": "            # TODO: assert divisibility here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_wrapper_cpu.py",
    "line_number": 1509,
    "line": "            # TODO: Add buf name directly into check_inf_and_nan."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_wrapper_cpu.py",
    "line_number": 2094,
    "line": "        # TODO: Only support tensor(s) returns for now, SymInt is not implemented yet"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_wrapper_cpu.py",
    "line_number": 2189,
    "line": "        # TODO: need to support control flow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cpp_wrapper_cpu.py",
    "line_number": 2445,
    "line": "        # TODO: not using type_ as the first step of refactoring. Will update this later."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\debug_utils.py",
    "line_number": 136,
    "line": "                    # TODO: add non-abi compatible mode debug printing info"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\debug_utils.py",
    "line_number": 171,
    "line": "                    # TODO: add non-abi compatible mode debug printing info"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 453,
    "line": "        # TODO(jansel): find a better way to do this, builtin % has wrong sign"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 488,
    "line": "        # TODO(jansel): find a better ways to do this, the select-based trick from triton.py didn't work"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 534,
    "line": "        # TODO(jansel): Halide only supports 32-bit indexing, we should error on overflow"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 563,
    "line": "        # TODO(jansel): look into removing the where in the same places triton does"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 819,
    "line": "                        # TODO(jansel): we should just prevent fusion in cases that hit this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 1018,
    "line": "            ):  # TODO(jansel): negative offsets"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 1224,
    "line": "            # TODO(jansel): implement welford_reduce without fallback"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 1469,
    "line": "                # TODO(jansel): explore other flags, see:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 1487,
    "line": "            # TODO(jansel): it is unclear if this does anything, since input sizes are still int32"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 1645,
    "line": "        return False  # TODO(jansel): support asserts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 1650,
    "line": "        pass  # TODO(jansel): support asserts"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\halide.py",
    "line_number": 1655,
    "line": "    # TODO(jansel): Halide doesn't actually support 64 bit indexing..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\memory_planning.py",
    "line_number": 255,
    "line": "            # TODO(jansel): we could try harder here by merging overlapping in space"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\memory_planning.py",
    "line_number": 648,
    "line": "                # TODO(jansel): we should support reusing buffers created via ExternKernelAlloc"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\simd.py",
    "line_number": 115,
    "line": "        # TODO: this is probably SymTy.INDEX and SymTy.RINDEX"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\simd.py",
    "line_number": 680,
    "line": "        # TODO instead of trying to blindly find complicated exprs, we should hoist the"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\simd.py",
    "line_number": 754,
    "line": "            # TODO(jansel): do we need a reshape here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\simd.py",
    "line_number": 1446,
    "line": "                    # TODO - use split ranges ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\simd.py",
    "line_number": 1476,
    "line": "            # TODO: Maybe unify CUDATemplateKernel to also use PartialRender for flexible epilogue fusion."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\simd.py",
    "line_number": 1685,
    "line": "            # TODO(jansel): should we tile reductions?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton.py",
    "line_number": 409,
    "line": "    # TODO: This is wrong, when lhs, rhs > 2**53, Python does a higher"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton.py",
    "line_number": 2798,
    "line": "        # TODO(jansel): if there are constants, we shouldn't bother passing them as args"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton.py",
    "line_number": 2974,
    "line": "                    # TODO: Move this above when ROCm triton adds support for multiple inputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton.py",
    "line_number": 3035,
    "line": "            # TODO(voz): Ostensibly, we should not need this. But there are cases where C++ codegen does"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton.py",
    "line_number": 3125,
    "line": "                # TODO - would be better as a hook in triton do_bench that reset"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton_combo_kernel.py",
    "line_number": 109,
    "line": "            # TODO benchmark the performance when large pointwise nodes combining with others"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton_combo_kernel.py",
    "line_number": 198,
    "line": "        # TODO support combination of kernels with different block dimensions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton_combo_kernel.py",
    "line_number": 342,
    "line": "                # TODO: improve 1d/2d mixed cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton_combo_kernel.py",
    "line_number": 400,
    "line": "            # TODO: support 1d/2d mixed cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton_combo_kernel.py",
    "line_number": 747,
    "line": "            # TODO: we assume all sub_kernels have the same block size"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton_combo_kernel.py",
    "line_number": 823,
    "line": "        # TODO: is it correct to use the first sub kernel's heuristics?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton_utils.py",
    "line_number": 28,
    "line": "        # TODO: Remove fp8 special handling when Triton supports PyTorch fp8 dtypes."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\triton_utils.py",
    "line_number": 130,
    "line": "            # TODO(voz): These are kinda redundant, if we can solve out statically_known_multiple_of with"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\wrapper.py",
    "line_number": 150,
    "line": "# TODO: Move to a well known place"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\wrapper.py",
    "line_number": 881,
    "line": "                # TODO: integrate memory planning & stack allocation?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\wrapper.py",
    "line_number": 968,
    "line": "            # TODO: this seems legit, NullLine has no node"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\wrapper.py",
    "line_number": 1207,
    "line": "                    # TODO: this fallback and those below actually will generate possibly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\wrapper.py",
    "line_number": 1322,
    "line": "            # TODO(aakhundov): add None args to constants, too. currently, this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\wrapper.py",
    "line_number": 1486,
    "line": "        # This is handled in `generate_args_decl` which has a correct comment of: TODO: only works for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cuda\\cuda_kernel.py",
    "line_number": 250,
    "line": "        TODO: Will add needed args to pass it in if it is dynamic."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cuda\\cuda_kernel.py",
    "line_number": 274,
    "line": "        TODO: Will add needed args to pass it in if it is dynamic."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cuda\\cuda_kernel.py",
    "line_number": 294,
    "line": "        TODO: Will add needed args to pass it in if it is dynamic."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cuda\\cuda_kernel.py",
    "line_number": 350,
    "line": "        )  # @TODO: Hack for ensuring that Cutlass Kernel is preferred"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cuda\\cutlass_epilogue_gen.py",
    "line_number": 136,
    "line": "        # of a previous epilogue node, a constant or (TODO) an auxiliary input."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cuda\\cutlass_utils.py",
    "line_number": 57,
    "line": "    # TODO(ipiszy): remove this hack when CUTLASS solves Python scripts packaging structure issues."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cuda\\cutlass_utils.py",
    "line_number": 128,
    "line": "    # TODO: these three look dead?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\codegen\\cuda\\gemm_template.py",
    "line_number": 793,
    "line": "        # TODO: update epilogue functor according to epilogues."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\compile_worker\\subproc_pool.py",
    "line_number": 299,
    "line": "    # TODO(masnesral): Are these still relevant?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\binary_folding.py",
    "line_number": 172,
    "line": "            # TODO: support scalar case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\binary_folding.py",
    "line_number": 190,
    "line": "        # TODO: support scalar case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\binary_folding.py",
    "line_number": 268,
    "line": "                # TODO: support linear?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\decompose_mem_bound_mm.py",
    "line_number": 17,
    "line": "# TODO: need a better strategy for decomposing mm"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\freezing_patterns.py",
    "line_number": 57,
    "line": "        # TODO: remove the need to run fake_tensor_prop on the whole model."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\fuse_attention.py",
    "line_number": 651,
    "line": "    # we could also generate all these patterns in 3d.. TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\fuse_attention.py",
    "line_number": 787,
    "line": "            # TODO: Enable CUDA after solving Bert accuracy issue of calling efficient attention"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\joint_graph.py",
    "line_number": 74,
    "line": "            # TODO - decompose/type promote to avoid this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\joint_graph.py",
    "line_number": 97,
    "line": "            # TODO handle Tensor-Scalar adds, it's a different schema"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\joint_graph.py",
    "line_number": 260,
    "line": "        # TODO: cat, more indexing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\joint_graph.py",
    "line_number": 261,
    "line": "        # TODO - do on cpu to avoid syncs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\joint_graph.py",
    "line_number": 369,
    "line": "            # TODO - not sure about lossy uint->python value->uint conversions"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\mkldnn_fusion.py",
    "line_number": 911,
    "line": "            # TODO: Support dynamic shape case for MKLDNN conv transpose."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\mkldnn_fusion.py",
    "line_number": 1247,
    "line": "        # TODO: aarch64: enable op fusion for acl once it supports fused operators. Disabling it for now."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\pad_mm.py",
    "line_number": 237,
    "line": "    # TODO - finetune coefficient here. As a reference point, Triton mm model assumes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\pad_mm.py",
    "line_number": 319,
    "line": "    # can be planned layout transform is not free. TODO - way to pad and preserve layout ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\pad_mm.py",
    "line_number": 323,
    "line": "    # TODO - see issue https://githpub.com/pytorch/pytorch/issues/128889"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\pad_mm.py",
    "line_number": 356,
    "line": "    # TODO: Build a learned model which would be better than this heuristic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\post_grad.py",
    "line_number": 244,
    "line": "        # TODO: the pattern can be updated to support the case that index tensor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\post_grad.py",
    "line_number": 280,
    "line": "    TODO: Right now the scatter value must be a scalar. But we could support it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\post_grad.py",
    "line_number": 496,
    "line": "    # TODO(jansel): rewrite this as a bmm?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\pre_grad.py",
    "line_number": 253,
    "line": "            # TODO: move efficient_conv_bn_eval_pass to the fusions dict too."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\pre_grad.py",
    "line_number": 450,
    "line": "                # TODO: support kwargs."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\quantization.py",
    "line_number": 1456,
    "line": "            # TODO: add cuda kernel support instead of calling mul+sum"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\quantization.py",
    "line_number": 2540,
    "line": "        # <TODO> Leslie: Here we verify that the quant node has exactly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\reinplace.py",
    "line_number": 587,
    "line": "                # TODO(yifu): this doesn't properly remove copy epilogues for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\split_cat.py",
    "line_number": 178,
    "line": "        # TODO dynamic_shapes with assume_static_by_default=False fails while AOT Autograd tracing."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\fx_passes\\split_cat.py",
    "line_number": 238,
    "line": "        # TODO dynamic_shapes with assume_static_by_default=False fails while AOT Autograd tracing."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\conv.py",
    "line_number": 534,
    "line": "    # TODO: check if it's beneficial to convert Conv1d to Conv2d and then"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\conv.py",
    "line_number": 539,
    "line": "        # TODO maybe we can convert weights to channels last just once before"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\conv.py",
    "line_number": 615,
    "line": "                    # TODO(jansel): try unroll for bigger kernels once fixed:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\conv.py",
    "line_number": 638,
    "line": "                    # TODO(jansel): try unroll for bigger kernels once fixed:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_attention.py",
    "line_number": 357,
    "line": "    # TODO generalize and add proper mask support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_attention.py",
    "line_number": 360,
    "line": "    # TODO dont want to write this if we dont require grad"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_attention.py",
    "line_number": 464,
    "line": "    qk = tl.dot(q, k, input_precision=FLOAT32_PRECISION) # TODO: use cuda matmul when q_len <= 2."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_attention.py",
    "line_number": 509,
    "line": "    # TODO: In the case that score_mod is linear, this can be LICMed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_attention.py",
    "line_number": 672,
    "line": "# TODO: We probably also need a layout constraint?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_attention.py",
    "line_number": 1035,
    "line": "        # TODO: This does not work if DQ is not the same layout as Q (for example,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_attention.py",
    "line_number": 1148,
    "line": "            # TODO: This does not work if DQ is not the same layout as Q (for example,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_attention.py",
    "line_number": 1584,
    "line": "# TODO: We probably also need a layout constraint?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_decoding.py",
    "line_number": 111,
    "line": "    # TODO: support masks not broadcasted along the head dimension."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_decoding.py",
    "line_number": 345,
    "line": "    # TODO: Fix flex decoding non-divisible case!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_decoding.py",
    "line_number": 398,
    "line": "    # TODO: fix autotuning."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\flex_decoding.py",
    "line_number": 470,
    "line": "    # TODO: This feels sketchy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\mm.py",
    "line_number": 290,
    "line": "    # TODO: Re-enable eager mode implementation once cuBLAS is fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\mm.py",
    "line_number": 631,
    "line": "        # TODO: is there a cleaner way to ensure aten.mm is always included?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\mm_plus_mm.py",
    "line_number": 221,
    "line": "        # TODO(jansel): support different K values when this is fixed:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\kernel\\mm_scaled.py",
    "line_number": 19,
    "line": "from .mm import _is_static_problem  # TODO(yangsiyu) move to mm_common"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\runtime\\benchmarking.py",
    "line_number": 120,
    "line": "        # TODO(nmacchioni): For non-CPU functions we default to using the GPU-specific benchmarking"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\runtime\\coordinate_descent_tuner.py",
    "line_number": 41,
    "line": "    TODO will it be necessary to tune multiple fields simultaneously."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\runtime\\coordinate_descent_tuner.py",
    "line_number": 44,
    "line": "    TODO: what if both increasing and decreasing a field can improve perf."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\runtime\\halide_helpers.py",
    "line_number": 34,
    "line": "    # TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\runtime\\triton_helpers.py",
    "line_number": 396,
    "line": "    # TODO(isuruf): use inline_asm_elementwise here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\runtime\\triton_heuristics.py",
    "line_number": 1137,
    "line": "    )  # TODO: query warp size once #129663 is merged"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\runtime\\triton_heuristics.py",
    "line_number": 1500,
    "line": "        # TODO: this may only be beneficial when each iteration of the reduction"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_inductor\\runtime\\triton_heuristics.py",
    "line_number": 1555,
    "line": "    # TODO(jansel): we should be able to improve these heuristics"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_lazy\\computation.py",
    "line_number": 10,
    "line": "    TODO: This API is currently ts backend specific. We are working on"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_lazy\\computation.py",
    "line_number": 24,
    "line": "    TODO: This API is currently ts backend specific. We are working on"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_lazy\\extract_compiled_graph.py",
    "line_number": 128,
    "line": "        # TODO: This solution is no ideal since we may miss some factory methods. In future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_lazy\\extract_compiled_graph.py",
    "line_number": 185,
    "line": "    # TODO: this part is TS backend specific for now and will be generalized to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_lazy\\__init__.py",
    "line_number": 16,
    "line": "    # TODO(whc) expand this to include backend hooks and align with XLA backend needs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_library\\fake_class_registry.py",
    "line_number": 87,
    "line": "# TODO: add this check at compile time for __obj_flatten__."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_library\\utils.py",
    "line_number": 127,
    "line": "    TODO: torchgen/model.py's FunctionSchema.parse is the source of truth for this,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_library\\utils.py",
    "line_number": 272,
    "line": "        # TODO: need to double check the semantics of the \"types\" argument to torch_dispatch."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_library\\utils.py",
    "line_number": 280,
    "line": "    # TODO: check that I got these args correct (in C++, we pass in \"0000\"??)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_logging\\_internal.py",
    "line_number": 32,
    "line": "# TODO: Maybe we should allow for some sub-hierarchy so you can control which"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_logging\\_internal.py",
    "line_number": 121,
    "line": "    # flattens all the qnames together (TODO: consider memoizing?)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_logging\\_internal.py",
    "line_number": 1124,
    "line": "            # TODO: Actually, the rank probably should just be emitted once at"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_numpy\\random.py",
    "line_number": 162,
    "line": "    # TODO: check a.dtype is integer -- cf np.random.choice(3.4) which raises"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_numpy\\_unary_ufuncs_impl.py",
    "line_number": 70,
    "line": "# TODO set __name__ and __qualname__"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\context.py",
    "line_number": 51,
    "line": "        # TODO: Should these methods be mapped some other way?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\executor.py",
    "line_number": 53,
    "line": "        # TODO: caching"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\rng_prims.py",
    "line_number": 268,
    "line": "        # TODO: you don't need to do this, the dispatch here already disabled"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 238,
    "line": "        # TODO: This looks wrong, a number that is wrapped into a tensor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 381,
    "line": "# TODO: implement dtype validation here, too, or on the corresponding refs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 463,
    "line": "    # TODO: fix number type promotion (bool, complex->float)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 994,
    "line": "# TODO: complex needs a special meta to account for its float -> complex behavior"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 1503,
    "line": "        # TODO: this is only here to support the unsqueeze ref"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 1691,
    "line": "# TODO: make stride SymInt"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 1743,
    "line": "# TODO: consider renaming split_dim_view"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 1949,
    "line": "# TODO: review stride logic"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2100,
    "line": "        # TODO: update meta objects so this can be acquired directly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2164,
    "line": "# TODO: create a new return type for scalars?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2196,
    "line": "# TODO: create a new return type for scalars?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2228,
    "line": "# TODO: create a new return type for scalars?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2249,
    "line": "    # TODO: move this as an option on the reference"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2271,
    "line": "# TODO: Remove safe casting and implement on reference instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2335,
    "line": "# TODO: review support arbitrary resizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2493,
    "line": "# TODO: layout, pin_memory, memory_format"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2494,
    "line": "# TODO: model requires_grad on TensorMeta"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2541,
    "line": "# TODO: layout, pin_memory, memory_format"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2542,
    "line": "# TODO: model requires_grad on TensorMeta"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2584,
    "line": "# TODO: add layout, pin_memory"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2639,
    "line": "# TODO: add layout, pin_memory"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2679,
    "line": "# TODO: add layout"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2762,
    "line": "# TODO: add layout and pin_memory support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2803,
    "line": "    # TODO The MAGMA backend returns V, so this is wrong if used with the MAGMA backend"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims\\__init__.py",
    "line_number": 2930,
    "line": "# TODO: we should more seriously review randomness modeling and prims"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\wrappers.py",
    "line_number": 47,
    "line": "# TODO: implement ref.cast with an option to enforce safe casting"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\wrappers.py",
    "line_number": 176,
    "line": "# TODO: handle tuples of tensors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\wrappers.py",
    "line_number": 391,
    "line": "            # TODO: There is a subtle bug here: prims like copy_to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\wrappers.py",
    "line_number": 408,
    "line": "# TODO: when tracing this will add torch tensors and not TensorMeta objects"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\wrappers.py",
    "line_number": 410,
    "line": "# TODO: this wrapper is currently untested"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 41,
    "line": "# TODO: Type[torch.SymInt], Type[torch.SymFloat]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 43,
    "line": "# TODO: This needs a lot more type annotations"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 107,
    "line": "            # TODO: We should check that the symbols are consistent"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 134,
    "line": "# TODO: look at using torch.testing.assert_close instead with an option"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 164,
    "line": "        # TODO: we should review why this happens and see about fixing it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 442,
    "line": "    # TODO: are these necessary?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 1036,
    "line": "        # TODO: type error here is real, replace with sym_complex"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 1055,
    "line": "    # TODO: sym_complex_float?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 1197,
    "line": "# TODO: maybe unify with can_cast_to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 1352,
    "line": "# TODO: when NumberType contains the sym types, can simplify this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 1378,
    "line": "# TODO: document type promotion kinds"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 1641,
    "line": "    # TODO: maybe inform the user of channels_last_3d if rank of the tensor is 5?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_prims_common\\__init__.py",
    "line_number": 1934,
    "line": "    # TODO: a better way to handle this would be with a new op, \"_unsafe_as_strided\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 117,
    "line": "    \"round\",  # TODO: model kwargs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 207,
    "line": "    \"copy_to\",  # TODO: add OpInfo (or implement .to)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 393,
    "line": "    # TODO: make common validations available as utils"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 458,
    "line": "# TODO: add type promotion support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 748,
    "line": "# TODO: if this is special maybe it should be defined there and imported here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 973,
    "line": "# TODO: register this as a real ref/decomposition once TorchInductor supports complex!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 1618,
    "line": "# TODO: skip unnecessary conversion of long to float"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 1699,
    "line": "# TODO: consider refactoring this with add impl"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 1911,
    "line": "# TODO: implement alternate where"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 2106,
    "line": "    # TODO: is_pinned is not currently supported in refs or fake_tensor"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 2130,
    "line": "    # TODO: non_blocking should be handled by `copy_to`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 2162,
    "line": "            # TODO - this is true for eager mode currently, but it's wrong behavior for complex norms"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 2810,
    "line": "        # TODO: fix this to work with meta tensors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 3034,
    "line": "    # TODO: we could look at directing collapse_view to skip its meta function here (unsafe_collapse_view)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 3258,
    "line": "# TODO: Adding this as a meta function causes functorch tests to fail when compiled with debug mode."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 4460,
    "line": "    # TODO: Add sparse support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 4588,
    "line": "# TODO: Turn this into a decomposition (currently fails on reshape meta tests)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 5391,
    "line": "    requires_grad: bool = False,  # TODO: unused"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 5418,
    "line": "    # TODO: Use requires_grad.  All refs taking the requires_grad kwarg must"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 6034,
    "line": "    # TODO: fix inductor rand_like for integer, bool dtypes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 6068,
    "line": "# TODO: add support for functionalization aten.normal_functional"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 6334,
    "line": "# TODO: This must return a sparse tensor if the input is sparse, but refs have"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 6352,
    "line": "    # TODO: this is inaccurate, we actually test PySequence_Check"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 6395,
    "line": "    # TODO: this is inaccurate, we actually test PySequence_Check"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 6405,
    "line": "            # TODO: test this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 6474,
    "line": "    # TODO"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 6478,
    "line": "    # TODO: test for numpy input with PyArray_Check"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 6506,
    "line": "    # TODO (or not): support names kwarg"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\__init__.py",
    "line_number": 6516,
    "line": "        {\"device\": \"cpu\"},  # TODO: use torch.get_default_tensor_type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\nn\\functional\\__init__.py",
    "line_number": 580,
    "line": "        # TODO: Raise exception instead of converting value.  This is only for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\nn\\functional\\__init__.py",
    "line_number": 605,
    "line": "        # TODO: Raise exception instead of converting value.  This is only for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\nn\\functional\\__init__.py",
    "line_number": 668,
    "line": "        # TODO: Raise exception instead of converting value.  This is only for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\nn\\functional\\__init__.py",
    "line_number": 716,
    "line": "    # TODO: Enable data-dependent checks with debug mode"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\nn\\functional\\__init__.py",
    "line_number": 717,
    "line": "    # TODO: This check does not work with FakeTensor inputs; See Issue #85834"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\nn\\functional\\__init__.py",
    "line_number": 796,
    "line": "    # TODO: raise exception instead of converting value"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\nn\\functional\\__init__.py",
    "line_number": 852,
    "line": "# TODO: This ref supports int reduction and out kwarg to be compatible with ATen:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\nn\\functional\\__init__.py",
    "line_number": 854,
    "line": "# TODO: Could be rewritten to support complex:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\nn\\functional\\__init__.py",
    "line_number": 938,
    "line": "        # TODO: Raise exception instead of converting value.  This is only for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\nn\\functional\\__init__.py",
    "line_number": 1091,
    "line": "        # TODO: Raise exception instead of converting value.  This is only for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_refs\\special\\__init__.py",
    "line_number": 231,
    "line": "# TODO: add docstring"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_strobelight\\compile_time_profiler.py",
    "line_number": 123,
    "line": "    # TODO use threadlevel meta data to tags to record phases."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_impls.py",
    "line_number": 120,
    "line": "    # TODO: no real reason to restrict multiple outputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_impls.py",
    "line_number": 164,
    "line": "        # TODO: file issue"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_impls.py",
    "line_number": 205,
    "line": "    # TODO: I think this does the wrong thing if r is inp"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_impls.py",
    "line_number": 257,
    "line": "    # TODO: remove me"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_impls.py",
    "line_number": 372,
    "line": "        # TODO: consider a memo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_impls.py",
    "line_number": 676,
    "line": "            # TODO: We can make this a little more faithful with best effort"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_impls.py",
    "line_number": 828,
    "line": "            # TODO: Minor optimization: track if the shapes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_impls.py",
    "line_number": 869,
    "line": "            # TODO: we don't need the compute type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_impls.py",
    "line_number": 891,
    "line": "        # TODO: is_non-overlapping_and_dense (not bound from Python"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 77,
    "line": "# TODO: Hack to unblock https://github.com/pytorch/pytorch/pull/108186"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 157,
    "line": "    todo = [subclass]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 158,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 159,
    "line": "        curr = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 167,
    "line": "            todo.append(getattr(curr, key))"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 370,
    "line": "                    # TODO: callback might be used in recursive contexts, in"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 607,
    "line": "    # TODO: Generalize this as needed, e.g., into a trie of memos, if"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 1100,
    "line": "        # TODO: This is a temporary measure, see"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 1501,
    "line": "        # TODO: support caching sparse outputs?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 1869,
    "line": "            # TODO: Handle SymFloat/SymBool"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 1915,
    "line": "                # TODO: Is this really needed?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 1936,
    "line": "                    # TODO: Remove these exclusions, so that we can remove"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 1955,
    "line": "        # TODO - we should be use the prim aten impl"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 1956,
    "line": "        # TODO - fix prims complex ops"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_tensor.py",
    "line_number": 2292,
    "line": "    # TODO: also check metadata change on inputs"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\fake_utils.py",
    "line_number": 116,
    "line": "                # TODO: enable_python_dispatcher() here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\functional_tensor.py",
    "line_number": 96,
    "line": "    # TODO (tmanlaibaatar) make it a tag"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\functional_tensor.py",
    "line_number": 142,
    "line": "            # TODO: right now, _make_wrapper_subclass's dynamic shape interaction is not great."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\functional_tensor.py",
    "line_number": 305,
    "line": "    # TODO(sparse-team): fixes #133174 but can we do without the relay?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\functional_tensor.py",
    "line_number": 425,
    "line": "                    # TODO (tmanlaibaatar) check if the op is PT2 compliant"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\functional_tensor.py",
    "line_number": 606,
    "line": "    # TODO: pull these from aot autograd"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 104,
    "line": "        # TODO: move \"assert_eq(m1.layout, m2.layout)\" out of sparse"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 122,
    "line": "        # TODO: test if is resizable (no direct query for this atm)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 123,
    "line": "        # TODO: audit AutogradMeta to see if it matches"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 124,
    "line": "        # TODO: test forward AD"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 238,
    "line": "            # TODO: TBH, functorch wrapped tensors probably should have"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 286,
    "line": "                # TODO: It's pretty suspicious that functional tensors don't have"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 310,
    "line": "        # TODO: Is it important to enable torch.inference_mode before querying"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 355,
    "line": "            # TODO: I actually think recursing here is correct, but we have at"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 698,
    "line": "            # TODO: make a dedicated UnknownSource for this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 752,
    "line": "                    # TODO: deduplicate this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 965,
    "line": "                # TODO: Change this logic to use view replay for consistency?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 1167,
    "line": "                    # TODO: Handle this better in Dynamo?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 1180,
    "line": "                    # TODO: This doesn't seem right, where's the MKLDNN'ness"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 1215,
    "line": "                        # TODO: why aren't the recursive calls going to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 1266,
    "line": "                                # TODO: Actually this all probably doesn't"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 1272,
    "line": "                            # TODO: is_leaf/requires_grad?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 1553,
    "line": "                    # TODO: Use a valid grad-specific symbolic context instead of recycling"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 1601,
    "line": "        # TODO: zero tensors?  We appear to have eliminated them by"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 1605,
    "line": "        # TODO: This can probably be simplified quite a bit"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\meta_utils.py",
    "line_number": 1673,
    "line": "        # TODO: return the description for later"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torch\\_subclasses\\schema_check_mode.py",
    "line_number": 82,
    "line": "                # TODO: This is only OK if can't have NaN quantized; idk if"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen.py",
    "line_number": 339,
    "line": "        # TODO: for ops with structured_delegate it should check the dispatch table of"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen.py",
    "line_number": 783,
    "line": "# TODO: This was historically used to help some JIT interop code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen.py",
    "line_number": 1038,
    "line": "# TODO: Get rid of dynamic_type, after getting tools/autograd"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen.py",
    "line_number": 1307,
    "line": "        # TODO: What exactly is the semantics of the 'dispatch' field?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen.py",
    "line_number": 1423,
    "line": "    # TODO: how come ValuesView isn't a Sequence lol"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen.py",
    "line_number": 2226,
    "line": "                    # TODO: this condition is a bit questionable"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen.py",
    "line_number": 2765,
    "line": "    # TODO: --op-registration-whitelist will be removed when all call-sites"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen.py",
    "line_number": 2838,
    "line": "    # TODO: stop generating CUDA kernels for non-CUDA builds"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen_aoti_c_shim.py",
    "line_number": 33,
    "line": "    BaseTy.float: \"double\",  # TODO: how about other floating point types?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen_aoti_c_shim.py",
    "line_number": 97,
    "line": "            # TODO: BaseTy.Dimname, etc."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen_aoti_c_shim.py",
    "line_number": 98,
    "line": "            raise NotImplementedError(f\"TODO: add support for arg type {repr(typ)}\")"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen_aoti_c_shim.py",
    "line_number": 203,
    "line": "                f\"TODO: add support for return type {repr(ret.type)}\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen_aoti_c_shim.py",
    "line_number": 212,
    "line": "            return f\"{val}.toDouble()\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen_backend_stubs.py",
    "line_number": 141,
    "line": "            # TODO: allow structured external backends later."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen_executorch.py",
    "line_number": 372,
    "line": "    # TODO larryliu: evaluate if this code is still needed. If yes let it handle ETKernelIndex."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen_functionalization_type.py",
    "line_number": 862,
    "line": "        # TODO: The below ops all have \"problematic\" schemas that prevent them from"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen_lazy_tensor.py",
    "line_number": 125,
    "line": "    # TODO(whc) add a check for shape inference functions that have meta kernels implement and should be retired."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\gen_lazy_tensor.py",
    "line_number": 344,
    "line": "        TODO(alanwaketan): Remove this sorting hack once all ops are grouped properly."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 500,
    "line": "    # TODO: figure out what this does"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 709,
    "line": "            # TODO: verify that the tag is valid and has an entry in tags.yaml"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 793,
    "line": "                # TODO: maybe it's better to test the return"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 956,
    "line": "        # TODO: probably better to accumulate these errors and report them all"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 1321,
    "line": "            # TODO: This discrepancy isn't required; we could also generated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 1387,
    "line": "    # TODO: Need to handle collisions with argument names at some point"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 1772,
    "line": "        # TODO: implement a proper parser if this gets more ugly"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 1896,
    "line": "    ConstQuantizerPtr = auto()  # TODO: rename"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 2045,
    "line": "        # TODO: deduplicate annotation matching with Return"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 2334,
    "line": "        # TODO: Use a real parser here; this will get bamboozled"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 2453,
    "line": "        # TODO: These invariants are weirdly asymmetric?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\model.py",
    "line_number": 2454,
    "line": "        # TODO: Fancier types?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\utils.py",
    "line_number": 63,
    "line": "# TODO: Use a real parser here; this will get bamboozled"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\utils.py",
    "line_number": 101,
    "line": "        # TODO: this does the wrong thing with KeyError"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\utils.py",
    "line_number": 111,
    "line": "# TODO: put this somewhere else, maybe"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\autograd.py",
    "line_number": 115,
    "line": "    # TODO: maybe the logic to search for all variants is no longer necessary?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\autograd.py",
    "line_number": 234,
    "line": "    # TODO: only to keep it byte-for-byte compatible with the old codegen, should remove."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\autograd.py",
    "line_number": 242,
    "line": "#   TODO: some cpp naming logic (e.g. resolving name conflict) might be irrelevant?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\autograd.py",
    "line_number": 251,
    "line": "    # TODO: only to keep it byte-for-byte compatible with the old codegen, should remove."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\autograd.py",
    "line_number": 262,
    "line": "# TODO: Update comment below since it is out of date."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\autograd.py",
    "line_number": 365,
    "line": "# TODO(crcrpar): Avoid hard coding \"Default\" ideally."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\autograd.py",
    "line_number": 649,
    "line": "            # TODO(crcrpar): Avoid hard coding \"Default\" ideally."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\cpp.py",
    "line_number": 169,
    "line": "                )  # TODO: fix this discrepancy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\cpp.py",
    "line_number": 186,
    "line": "        # TODO: remove these special cases, ArrayRef fallthrough works fine"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\cpp.py",
    "line_number": 290,
    "line": "        # TODO: Consider incorporating this into the data model"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\cpp.py",
    "line_number": 427,
    "line": "                default = \"at::kLong\"  # TODO: this is wrong"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\lazy.py",
    "line_number": 121,
    "line": "            raise AssertionError(f\"TODO add support for type {repr(typ)}\")"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\lazy.py",
    "line_number": 126,
    "line": "            # TODO(whc) is this actually correct? or should it use a Vector like above"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\lazy.py",
    "line_number": 132,
    "line": "            # TODO: return a value type.  The problem here is analogous to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\lazy.py",
    "line_number": 147,
    "line": "# TODO: Determining this based off of CType is bad; this should be computed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\lazy.py",
    "line_number": 167,
    "line": "        # TODO: report True for this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\lazy.py",
    "line_number": 193,
    "line": "# TODO: dedupe with Type.is_generator_like"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\lazy.py",
    "line_number": 210,
    "line": "    # TODO: this is lies, it is false for symint list"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\lazy.py",
    "line_number": 232,
    "line": "            # TODO: lists of symints are not currently treated as value types"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\lazy.py",
    "line_number": 309,
    "line": "# TODO: This is not idiomatic with how other torchgen APIs transform on schema."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\lazy.py",
    "line_number": 317,
    "line": "    # TODO: Need to handle collisions with argument names at some point"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\native.py",
    "line_number": 49,
    "line": "    # TODO: delete this!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\native.py",
    "line_number": 116,
    "line": "        # TODO: Not sure why the arguments assigned here are for"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 230,
    "line": "        # [old codegen] TODO: remove this? doesn't rename in codegen, it's just"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 254,
    "line": "        # [old codegen] TODO: remove this? doesn't rename in codegen, it's just"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 304,
    "line": "    # TODO: maybe don't need keep scattered out fields for python signature?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 326,
    "line": "                # TODO: shouldn't this be OptionalType[ListType[...]], since it defaults to None?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 341,
    "line": "    # TODO: create a dedicated SelfArgument type for 'self'?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 358,
    "line": "    # TODO: maybe create a PythonTensorOptionsArgument?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 731,
    "line": "        # TODO: directly translate a.default to python default"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 783,
    "line": "    # [old codegen] TODO: because these aren't guaranteed to be 100% faithful"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 954,
    "line": "            # TODO: this doesn't seem right..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 1102,
    "line": "# TODO: This is to keep same byte-for-byte result as the old codegen - maybe unnecessary?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 1134,
    "line": "            # TODO: avoid this special handling?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 1303,
    "line": "            return \"toDouble\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 1417,
    "line": "            # TODO: why this needs to be special case?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 1438,
    "line": "            # TODO: make this part of something more general, or get rid of it."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\python.py",
    "line_number": 1490,
    "line": "    # TODO: maybe move to the generator side as it's not related to binding."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\structured.py",
    "line_number": 76,
    "line": "        # TODO: delete these special cases; see torchgen.api.cpp--these"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\translate.py",
    "line_number": 152,
    "line": "        # TODO: My kingdom for a pattern matcher"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\translate.py",
    "line_number": 155,
    "line": "        # TODO: This could get us in recomputation trouble if b.expr is nontrivial."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\translate.py",
    "line_number": 256,
    "line": "        # TODO: These are referentially equal, shouldn't have to do this;"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\translate.py",
    "line_number": 371,
    "line": "            # TODO: You might also want to solve this from longSymVec_ctype or"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\types\\types_base.py",
    "line_number": 91,
    "line": "    # TODO: Kill this when we eventually remove it!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\types\\types_base.py",
    "line_number": 194,
    "line": "    # TODO: Kill this when we eventually remove it!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\types\\types_base.py",
    "line_number": 217,
    "line": "    # TODO: maybe don't represent default here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\api\\types\\types_base.py",
    "line_number": 252,
    "line": "    # TODO: Kill this when we eventually remove it!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\lazy_ir.py",
    "line_number": 50,
    "line": "    # TODO: Matching on CType seems wrong; should be matching on Type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\lazy_ir.py",
    "line_number": 62,
    "line": "                # TODO: I don't understand when you should put lazy_ in the name"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\lazy_ir.py",
    "line_number": 74,
    "line": "                f\"TODO not sure if there are other valid types to handle here ({arg.lazy_type})\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\lazy_ir.py",
    "line_number": 448,
    "line": "                # TODO(alanwaketan): Maybe we want to apply GetLtcTensorOrCreateForWrappedNumber here, but hold it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\lazy_ir.py",
    "line_number": 456,
    "line": "                    f\"TODO not sure if there are other valid types to handle here ({arg.lazy_type})\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\lazy_ir.py",
    "line_number": 541,
    "line": "            # TODO: this is trolling"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\lazy_ir.py",
    "line_number": 582,
    "line": "            # TODO(whc) remove this if XLA switches to using static method for creation"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 170,
    "line": "      // TODO: avoid the redispatch here"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 440,
    "line": "            # TODO: dedupe this with the structured codegen"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 465,
    "line": "                    # TODO: handle in place on tensor list"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 675,
    "line": "            # TODO: Make sure out argument is guaranteed to be self"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 723,
    "line": "            # TODO: Move to OptionalMPSGuard."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 735,
    "line": "            f\"      return {output_value};\\n\",  # type: ignore[possibly-undefined]  # TODO: audit"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 737,
    "line": "            # type: ignore[possibly-undefined]  # TODO: audit"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 739,
    "line": "            f\"{textwrap.indent(proxy_field, indent)}\",  # type: ignore[possibly-undefined]  # TODO: audit"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 755,
    "line": "        # TODO: Now, there is something interesting going on here.  In the code below,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 778,
    "line": "        # (e.g., at::cpu::add).  We don't generate methods (TODO: do this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 831,
    "line": "                # TODO: dedup this branch"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 909,
    "line": "                        # TODO: Stop hardcoding that the output type is a Tensor.  Note"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 924,
    "line": "                # TODO: https://github.com/pytorch/pytorch/issues/53023"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 934,
    "line": "                # TODO: I think this means structured won't work with method"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 963,
    "line": "            # TODO: Do this in translate instead"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\register_dispatch_key.py",
    "line_number": 981,
    "line": "            sig_body.append(f\"return {ret_expr};\")  # type: ignore[possibly-undefined]  # TODO: audit"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\ufunc.py",
    "line_number": 45,
    "line": "# TODO: use BackendIndex"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\ufunc.py",
    "line_number": 81,
    "line": "        # TODO: don't hardcode; return type will be inferred based on tags on"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\dest\\ufunc.py",
    "line_number": 507,
    "line": "        # TODO: don't hardcode ufunc:: namespace here, should be centralized smh"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\executorch\\model.py",
    "line_number": 25,
    "line": "# TODO: Duplicated Subset from codegen.tool.gen_oplist, remove declaration in codegen"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\executorch\\model.py",
    "line_number": 66,
    "line": "        type_alias_map: dict[str, list[str]],  # TODO: Support unwrapped str val"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\executorch\\model.py",
    "line_number": 93,
    "line": "            # TODO: Support inlined arguments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\executorch\\api\\custom_ops.py",
    "line_number": 101,
    "line": "    # TODO larryliu: evaluate if this code is still needed. If yes let it handle ETKernelIndex."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\executorch\\api\\et_cpp.py",
    "line_number": 132,
    "line": "                )  # TODO: fix this discrepancy"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\executorch\\api\\et_cpp.py",
    "line_number": 142,
    "line": "        # TODO: keeping these special cases for Tensor[] and Tensor?[] so that we can hookup with ATen kernels."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\executorch\\api\\et_cpp.py",
    "line_number": 217,
    "line": "        # TODO: Consider incorporating this into the data model"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\executorch\\api\\unboxing.py",
    "line_number": 167,
    "line": "    auto {out_name} = {arg_name}.toDoubleList();"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\operator_versions\\gen_mobile_upgraders.py",
    "line_number": 275,
    "line": "        # TODO: remove the skip after these two operators schemas are fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\operator_versions\\gen_mobile_upgraders.py",
    "line_number": 330,
    "line": "            # TODO: remove the skip after these two operators schemas are fixed"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_autograd_functions.py",
    "line_number": 445,
    "line": "# TODO: This is probably not exhaustive, but it's a start"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_inplace_or_view_type.py",
    "line_number": 256,
    "line": "    # TODO: Should handle optional here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_inplace_or_view_type.py",
    "line_number": 261,
    "line": "    # TODO: Should handle optional here?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_inplace_or_view_type.py",
    "line_number": 338,
    "line": "    return f.func.name.name.base  # TODO: should be str(f.func.name.name)?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_inplace_or_view_type.py",
    "line_number": 355,
    "line": "    # TODO: Clean this logic up if we get rid of reverse view funcs or reify them."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_python_functions.py",
    "line_number": 1256,
    "line": "        # TODO: should use some canonical form instead of 'str(arg.type)' - see comments"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_python_functions.py",
    "line_number": 1344,
    "line": "        # TODO: Checking `ps.method and ('requires_grad' in parser_outputs)` is a hacky"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_trace_type.py",
    "line_number": 113,
    "line": "    # TODO: byte-for-byte compatible with old codegen behavior - should clean up"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_trace_type.py",
    "line_number": 303,
    "line": "    # TODO: clean up old codegen behavior"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_variable_factories.py",
    "line_number": 23,
    "line": "# TODO: maybe update the cpp argument API to take optional namespace argument?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_variable_type.py",
    "line_number": 961,
    "line": "            # TODO: it would be nice to not have these special cases"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_variable_type.py",
    "line_number": 1097,
    "line": "        # TODO: `cpp_type` is only to keep it byte-for-byte compatible with the old codegen, should remove."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_variable_type.py",
    "line_number": 1118,
    "line": "                    # TODO(crcrpar): Make it simpler."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_variable_type.py",
    "line_number": 1239,
    "line": "            # TODO: process all derivative formulas!!!"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_variable_type.py",
    "line_number": 1363,
    "line": "            # TODO: should be `arg.type.is_tensor_like()`?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_variable_type.py",
    "line_number": 1442,
    "line": "                # todo(crcrpar): See if we can add some check e.g. `assert foreacharg is not None`."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_variable_type.py",
    "line_number": 1623,
    "line": "            base_name = f.func.name.name.base  # TODO: should be str(f.func.name.name)?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_variable_type.py",
    "line_number": 1747,
    "line": "        # TODO: flatten allocates a std::vector, which could be expensive"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_variable_type.py",
    "line_number": 1875,
    "line": "                # TODO update this when inplace namings are unified"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\gen_variable_type.py",
    "line_number": 1985,
    "line": "                    # TODO(crcrpar): Should this (= the foreach specific logic) be refactored somehow?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\load_derivatives.py",
    "line_number": 178,
    "line": "# TODO: Why is this going through CppSignatureGroup, that doesn't make sense..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\load_derivatives.py",
    "line_number": 399,
    "line": "            # TODO we are trolling"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\load_derivatives.py",
    "line_number": 593,
    "line": "        # TODO: do we need eagerly calculate and save it here? Can it be derived"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\packaged\\autograd\\load_derivatives.py",
    "line_number": 654,
    "line": "    # TODO: maybe the logic to handle the legacy schema is no longer necessary?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\static_runtime\\generator.py",
    "line_number": 77,
    "line": "        # TODO: these ones got added recently and need manual inspection"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\static_runtime\\generator.py",
    "line_number": 265,
    "line": "        # TODO: stop doing type tests by converting to C++ and then testing"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchgen\\static_runtime\\generator.py",
    "line_number": 291,
    "line": "    # TODO: stop type testing by converting to C++"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\utils.py",
    "line_number": 322,
    "line": "    # TODO: There might be a way to vectorize this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\_utils.py",
    "line_number": 14,
    "line": "            # TODO: use `add_suggestion` from torchvision.prototype.utils._internal to improve the error message as"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\__init__.py",
    "line_number": 76,
    "line": "        # TODO: better messages"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\__init__.py",
    "line_number": 80,
    "line": "        # TODO: better messages"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\datasets\\celeba.py",
    "line_number": 173,
    "line": "                # TODO: refactor with utils.verify_str_arg"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\datasets\\folder.py",
    "line_number": 267,
    "line": "# TODO: specify the return type"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\datasets\\kinetics.py",
    "line_number": 115,
    "line": "        # TODO: support test"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\datasets\\video_utils.py",
    "line_number": 388,
    "line": "            # TODO: Revert it once the bug is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\io\\video.py",
    "line_number": 163,
    "line": "        # TODO: we should change all of this from ground up to simply take"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\io\\video.py",
    "line_number": 198,
    "line": "        # TODO check if stream needs to always be the video stream here or not"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\io\\video.py",
    "line_number": 201,
    "line": "        # TODO add some warnings in this case"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\io\\video.py",
    "line_number": 214,
    "line": "        # TODO add a warning"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\io\\video.py",
    "line_number": 336,
    "line": "            # TODO raise a warning?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\io\\video_reader.py",
    "line_number": 168,
    "line": "            # TODO: load metadata"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\io\\video_reader.py",
    "line_number": 174,
    "line": "            # TODO: add extradata exception"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\densenet.py",
    "line_number": 52,
    "line": "    # todo: rewrite when torchscript supports any"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\_api.py",
    "line_number": 177,
    "line": "        # TODO: Replace ann.__args__ with typing.get_args(ann) after python >= 3.8"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\__init__.py",
    "line_number": 21,
    "line": "# TODO: we could / should document them publicly, but it's not clear where, as"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\detection\\anchor_utils.py",
    "line_number": 43,
    "line": "            # TODO change this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\detection\\anchor_utils.py",
    "line_number": 54,
    "line": "    # TODO: https://github.com/pytorch/pytorch/issues/26792"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\detection\\generalized_rcnn.py",
    "line_number": 86,
    "line": "        # TODO: Move this to a function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\detection\\retinanet.py",
    "line_number": 613,
    "line": "        # TODO: Move this to a function"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\detection\\retinanet.py",
    "line_number": 633,
    "line": "        # TODO: Do we want a list or a dict?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\detection\\roi_heads.py",
    "line_number": 202,
    "line": "    # TODO: simplify when indexing without rank will be supported by ONNX"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\detection\\roi_heads.py",
    "line_number": 451,
    "line": "    # TODO : replace below with a dynamic padding when support is added in ONNX"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\detection\\roi_heads.py",
    "line_number": 744,
    "line": "                # TODO: https://github.com/pytorch/pytorch/issues/26731"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\quantization\\googlenet.py",
    "line_number": 51,
    "line": "    # TODO https://github.com/pytorch/vision/pull/4232#pullrequestreview-730461659"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\quantization\\googlenet.py",
    "line_number": 75,
    "line": "    # TODO https://github.com/pytorch/vision/pull/4232#pullrequestreview-730461659"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\quantization\\inception.py",
    "line_number": 42,
    "line": "    # TODO https://github.com/pytorch/vision/pull/4232#pullrequestreview-730461659"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\quantization\\inception.py",
    "line_number": 53,
    "line": "    # TODO https://github.com/pytorch/vision/pull/4232#pullrequestreview-730461659"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\quantization\\inception.py",
    "line_number": 64,
    "line": "    # TODO https://github.com/pytorch/vision/pull/4232#pullrequestreview-730461659"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\quantization\\inception.py",
    "line_number": 75,
    "line": "    # TODO https://github.com/pytorch/vision/pull/4232#pullrequestreview-730461659"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\quantization\\inception.py",
    "line_number": 86,
    "line": "    # TODO https://github.com/pytorch/vision/pull/4232#pullrequestreview-730461659"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\quantization\\inception.py",
    "line_number": 120,
    "line": "    # TODO https://github.com/pytorch/vision/pull/4232#pullrequestreview-730461659"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\quantization\\mobilenetv3.py",
    "line_number": 84,
    "line": "    # TODO https://github.com/pytorch/vision/pull/4232#pullrequestreview-730461659"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\quantization\\shufflenetv2.py",
    "line_number": 53,
    "line": "    # TODO https://github.com/pytorch/vision/pull/4232#pullrequestreview-730461659"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\models\\quantization\\utils.py",
    "line_number": 38,
    "line": "    # TODO https://github.com/pytorch/vision/pull/4232#pullrequestreview-730461659"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\ops\\poolers.py",
    "line_number": 36,
    "line": "# TODO: (eellison) T54974082 https://github.com/pytorch/pytorch/issues/26744/pytorch/issues/26744"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\ops\\roi_align.py",
    "line_number": 64,
    "line": "    # TODO: It's possible the masking here is unnecessary if y and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\ops\\roi_align.py",
    "line_number": 99,
    "line": "# TODO: this doesn't actually cache"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\ops\\roi_align.py",
    "line_number": 100,
    "line": "# TODO: main library should make this easier to do"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\ops\\_utils.py",
    "line_number": 11,
    "line": "    # TODO add back the assert"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\functional.py",
    "line_number": 39,
    "line": "# TODO: Once torchscript supports Enums with staticmethod"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\functional.py",
    "line_number": 1573,
    "line": "    # TODO: if image shape is [N1, N2, ..., C, H, W] and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\_functional_tensor.py",
    "line_number": 72,
    "line": "        # TODO: replace with dtype.is_floating_point when torchscript supports it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\_functional_tensor.py",
    "line_number": 96,
    "line": "        # TODO: replace with dtype.is_floating_point when torchscript supports it"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\_functional_tensor.py",
    "line_number": 394,
    "line": "        # TODO: Jit is failing on loading this op when scripted and saved"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\_functional_tensor.py",
    "line_number": 864,
    "line": "    # TODO: we should expect bincount to always be faster than histc, but this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\_presets.py",
    "line_number": 113,
    "line": "        # TODO: we could re-train the video models with antialias=True?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\_misc.py",
    "line_number": 15,
    "line": "# TODO: do we want/need to expose this?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\_misc.py",
    "line_number": 410,
    "line": "                        # TODO: we don't need to enforce tensors, just that entries are indexable as t[bool_mask]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\_utils.py",
    "line_number": 91,
    "line": "# TODO: let's use torchvision._utils.StrEnum to have the best of both worlds (strings and enums)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_color.py",
    "line_number": 36,
    "line": "    # TODO: Maybe move the validation that num_output_channels is 1 or 3 to this function instead of callers."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_geometry.py",
    "line_number": 250,
    "line": "            # TODO: when https://github.com/pytorch/pytorch/issues/68430 is fixed (possibly by https://github.com/pytorch/pytorch/pull/100373),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_geometry.py",
    "line_number": 1242,
    "line": "        # TODO: See https://github.com/pytorch/pytorch/issues/40763"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_geometry.py",
    "line_number": 1262,
    "line": "# TODO: This should be removed once torch_pad supports non-scalar padding values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_geometry.py",
    "line_number": 1329,
    "line": "        # TODO: add support of other padding modes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_geometry.py",
    "line_number": 1594,
    "line": "    # TODO: first cast to float if bbox is int64 before convert_bounding_box_format"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_geometry.py",
    "line_number": 1849,
    "line": "    # TODO: add in docstring about approximation we are doing for grid inversion"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_geometry.py",
    "line_number": 1857,
    "line": "    # TODO: first cast to float if bbox is int64 before convert_bounding_box_format"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_meta.py",
    "line_number": 186,
    "line": "    # TODO: Add _xywh_to_cxcywh and _cxcywh_to_xywh to improve performance"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_meta.py",
    "line_number": 242,
    "line": "    # TODO: Investigate if it makes sense from a performance perspective to have an implementation for every"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_misc.py",
    "line_number": 107,
    "line": "    # TODO: consider deprecating integers from sigma on the future"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_misc.py",
    "line_number": 261,
    "line": "        # TODO: remove this branch as soon as `dtype.is_floating_point` is supported by JIT"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_misc.py",
    "line_number": 298,
    "line": "        # TODO: Remove if/else inner blocks once uint16 dtype supports bitwise shift operations."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\_misc.py",
    "line_number": 415,
    "line": "    # TODO: Do we really need to check for out of bounds here? All"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\transforms\\v2\\functional\\__init__.py",
    "line_number": 93,
    "line": "    hflip,  # TODO: Consider moving all pure alias definitions at the bottom of the file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\tv_tensors\\_dataset_wrapper.py",
    "line_number": 154,
    "line": "                # TODO: If we have documentation on how to do that, put a link in the error message."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\tv_tensors\\_dataset_wrapper.py",
    "line_number": 200,
    "line": "    # TODO: maybe we should use __getstate__ and __setstate__ instead of __reduce__, as recommended in the docs."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\torchvision\\tv_tensors\\__init__.py",
    "line_number": 11,
    "line": "# TODO: Fix this. We skip this method as it leads to"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\ImageManipulation\\venv\\Lib\\site-packages\\wheel\\vendored\\packaging\\tags.py",
    "line_number": 317,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\AES.py",
    "line_number": 26,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\AES.py",
    "line_number": 63,
    "line": "_raw_aes_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._raw_aes\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\AES.py",
    "line_number": 70,
    "line": "        _raw_aesni_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._raw_aesni\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\ARC2.py",
    "line_number": 38,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\ARC2.py",
    "line_number": 42,
    "line": "_raw_arc2_lib = load_pycryptodome_raw_lib("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\ARC4.py",
    "line_number": 23,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, VoidPointer,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\ARC4.py",
    "line_number": 28,
    "line": "_raw_arc4_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._ARC4\", \"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\Blowfish.py",
    "line_number": 37,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\Blowfish.py",
    "line_number": 41,
    "line": "_raw_blowfish_lib = load_pycryptodome_raw_lib("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\CAST.py",
    "line_number": 38,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\CAST.py",
    "line_number": 42,
    "line": "_raw_cast_lib = load_pycryptodome_raw_lib("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\ChaCha20.py",
    "line_number": 34,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\ChaCha20.py",
    "line_number": 41,
    "line": "_raw_chacha20_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._chacha20\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\DES.py",
    "line_number": 38,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\DES.py",
    "line_number": 42,
    "line": "_raw_des_lib = load_pycryptodome_raw_lib("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\DES3.py",
    "line_number": 38,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\DES3.py",
    "line_number": 42,
    "line": "_raw_des3_lib = load_pycryptodome_raw_lib("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\Salsa20.py",
    "line_number": 26,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\Salsa20.py",
    "line_number": 34,
    "line": "_raw_salsa20_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._Salsa20\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_EKSBlowfish.py",
    "line_number": 34,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_EKSBlowfish.py",
    "line_number": 38,
    "line": "_raw_blowfish_lib = load_pycryptodome_raw_lib("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_cbc.py",
    "line_number": 38,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, VoidPointer,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_cbc.py",
    "line_number": 45,
    "line": "raw_cbc_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._raw_cbc\", \"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_cfb.py",
    "line_number": 30,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, VoidPointer,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_cfb.py",
    "line_number": 37,
    "line": "raw_cfb_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._raw_cfb\",\"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_ctr.py",
    "line_number": 31,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, VoidPointer,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_ctr.py",
    "line_number": 40,
    "line": "raw_ctr_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._raw_ctr\", \"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_ecb.py",
    "line_number": 29,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_ecb.py",
    "line_number": 35,
    "line": "raw_ecb_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._raw_ecb\", \"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_gcm.py",
    "line_number": 47,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, VoidPointer,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_gcm.py",
    "line_number": 81,
    "line": "    lib = load_pycryptodome_raw_lib(\"Crypto.Hash._ghash_portable\", api)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_gcm.py",
    "line_number": 94,
    "line": "        lib = load_pycryptodome_raw_lib(\"Crypto.Hash._ghash_clmul\", api)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_ocb.py",
    "line_number": 81,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, VoidPointer,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_ocb.py",
    "line_number": 86,
    "line": "_raw_ocb_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._raw_ocb\", \"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_ofb.py",
    "line_number": 30,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, VoidPointer,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_mode_ofb.py",
    "line_number": 37,
    "line": "raw_ofb_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._raw_ofb\", \"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_pkcs1_oaep_decode.py",
    "line_number": 1,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, c_size_t,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Cipher\\_pkcs1_oaep_decode.py",
    "line_number": 5,
    "line": "_raw_pkcs1_decode = load_pycryptodome_raw_lib(\"Crypto.Cipher._pkcs1_decode\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\BLAKE2b.py",
    "line_number": 36,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\BLAKE2b.py",
    "line_number": 42,
    "line": "_raw_blake2b_lib = load_pycryptodome_raw_lib(\"Crypto.Hash._BLAKE2b\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\BLAKE2s.py",
    "line_number": 36,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\BLAKE2s.py",
    "line_number": 42,
    "line": "_raw_blake2s_lib = load_pycryptodome_raw_lib(\"Crypto.Hash._BLAKE2s\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\keccak.py",
    "line_number": 33,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\keccak.py",
    "line_number": 39,
    "line": "_raw_keccak_lib = load_pycryptodome_raw_lib(\"Crypto.Hash._keccak\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\MD2.py",
    "line_number": 33,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\MD2.py",
    "line_number": 39,
    "line": "_raw_md2_lib = load_pycryptodome_raw_lib("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\MD4.py",
    "line_number": 48,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\MD4.py",
    "line_number": 54,
    "line": "_raw_md4_lib = load_pycryptodome_raw_lib("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\MD5.py",
    "line_number": 23,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\MD5.py",
    "line_number": 29,
    "line": "_raw_md5_lib = load_pycryptodome_raw_lib(\"Crypto.Hash._MD5\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\Poly1305.py",
    "line_number": 29,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\Poly1305.py",
    "line_number": 36,
    "line": "_raw_poly1305 = load_pycryptodome_raw_lib(\"Crypto.Hash._poly1305\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\RIPEMD160.py",
    "line_number": 33,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\RIPEMD160.py",
    "line_number": 39,
    "line": "_raw_ripemd160_lib = load_pycryptodome_raw_lib("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA1.py",
    "line_number": 23,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA1.py",
    "line_number": 29,
    "line": "_raw_sha1_lib = load_pycryptodome_raw_lib(\"Crypto.Hash._SHA1\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA224.py",
    "line_number": 23,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA224.py",
    "line_number": 29,
    "line": "_raw_sha224_lib = load_pycryptodome_raw_lib(\"Crypto.Hash._SHA224\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA256.py",
    "line_number": 23,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA256.py",
    "line_number": 29,
    "line": "_raw_sha256_lib = load_pycryptodome_raw_lib(\"Crypto.Hash._SHA256\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA384.py",
    "line_number": 23,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA384.py",
    "line_number": 29,
    "line": "_raw_sha384_lib = load_pycryptodome_raw_lib(\"Crypto.Hash._SHA384\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA3_224.py",
    "line_number": 23,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA3_256.py",
    "line_number": 23,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA3_384.py",
    "line_number": 23,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA3_512.py",
    "line_number": 23,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA512.py",
    "line_number": 23,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHA512.py",
    "line_number": 29,
    "line": "_raw_sha512_lib = load_pycryptodome_raw_lib(\"Crypto.Hash._SHA512\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHAKE128.py",
    "line_number": 33,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Hash\\SHAKE256.py",
    "line_number": 33,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Math\\Numbers.py",
    "line_number": 36,
    "line": "    if os.getenv(\"PYCRYPTODOME_DISABLE_GMP\"):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Math\\_IntegerCustom.py",
    "line_number": 35,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Math\\_IntegerCustom.py",
    "line_number": 59,
    "line": "_raw_montgomery = load_pycryptodome_raw_lib(\"Crypto.Math._modexp\", c_defs)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Protocol\\KDF.py",
    "line_number": 37,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Protocol\\KDF.py",
    "line_number": 41,
    "line": "_raw_salsa20_lib = load_pycryptodome_raw_lib(\"Crypto.Cipher._Salsa20\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Protocol\\KDF.py",
    "line_number": 47,
    "line": "_raw_scrypt_lib = load_pycryptodome_raw_lib(\"Crypto.Protocol._scrypt\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\PublicKey\\_edwards.py",
    "line_number": 6,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, VoidPointer,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\PublicKey\\_edwards.py",
    "line_number": 16,
    "line": "    _ed25519_lib = load_pycryptodome_raw_lib(\"Crypto.PublicKey._ed25519\", \"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\PublicKey\\_edwards.py",
    "line_number": 65,
    "line": "    _ed448_lib = load_pycryptodome_raw_lib(\"Crypto.PublicKey._ed448\", \"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\PublicKey\\_montgomery.py",
    "line_number": 6,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, VoidPointer,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\PublicKey\\_montgomery.py",
    "line_number": 14,
    "line": "    _curve25519_lib = load_pycryptodome_raw_lib(\"Crypto.PublicKey._curve25519\", \"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\PublicKey\\_montgomery.py",
    "line_number": 88,
    "line": "    _curve448_lib = load_pycryptodome_raw_lib(\"Crypto.PublicKey._curve448\", \"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\PublicKey\\_nist_ecc.py",
    "line_number": 6,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, VoidPointer,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\PublicKey\\_nist_ecc.py",
    "line_number": 13,
    "line": "_ec_lib = load_pycryptodome_raw_lib(\"Crypto.PublicKey._ec_ws\", \"\"\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\loader.py",
    "line_number": 42,
    "line": "    import pycryptodome_test_vectors  # type: ignore"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\loader.py",
    "line_number": 122,
    "line": "          The path components under the ``pycryptodome_test_vectors`` package."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\loader.py",
    "line_number": 165,
    "line": "        init_dir = os.path.dirname(pycryptodome_test_vectors.__file__)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\loader.py",
    "line_number": 188,
    "line": "        init_dir = os.path.dirname(pycryptodome_test_vectors.__file__)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\__main__.py",
    "line_number": 3,
    "line": "#  __main__.py : Stand-along loader for PyCryptodome test suite"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\Hash\\test_BLAKE2.py",
    "line_number": 303,
    "line": "            import pycryptodome_test_vectors  # type: ignore"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\Hash\\test_BLAKE2.py",
    "line_number": 310,
    "line": "        init_dir = os.path.dirname(pycryptodome_test_vectors.__file__)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\Hash\\test_BLAKE2.py",
    "line_number": 361,
    "line": "            import pycryptodome_test_vectors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\Hash\\test_BLAKE2.py",
    "line_number": 368,
    "line": "        init_dir = os.path.dirname(pycryptodome_test_vectors.__file__)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\Hash\\test_BLAKE2.py",
    "line_number": 421,
    "line": "            import pycryptodome_test_vectors  # type: ignore"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\Hash\\test_BLAKE2.py",
    "line_number": 428,
    "line": "        init_dir = os.path.dirname(pycryptodome_test_vectors.__file__)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\Hash\\test_keccak.py",
    "line_number": 141,
    "line": "    # TODO: add ExtremelyLong tests"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\Math\\test_modexp.py",
    "line_number": 44,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\PublicKey\\test_import_Curve25519.py",
    "line_number": 46,
    "line": "    import pycryptodome_test_vectors  # type: ignore"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\PublicKey\\test_import_Curve25519.py",
    "line_number": 62,
    "line": "        init_dir = os.path.dirname(pycryptodome_test_vectors.__file__)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\PublicKey\\test_import_Curve448.py",
    "line_number": 19,
    "line": "    import pycryptodome_test_vectors  # type: ignore"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\PublicKey\\test_import_Curve448.py",
    "line_number": 35,
    "line": "        init_dir = os.path.dirname(pycryptodome_test_vectors.__file__)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\PublicKey\\test_import_ECC.py",
    "line_number": 48,
    "line": "    import pycryptodome_test_vectors  # type: ignore"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\PublicKey\\test_import_ECC.py",
    "line_number": 68,
    "line": "        init_dir = os.path.dirname(pycryptodome_test_vectors.__file__)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\PublicKey\\test_import_RSA.py",
    "line_number": 38,
    "line": "    import pycryptodome_test_vectors  # type: ignore"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\PublicKey\\test_import_RSA.py",
    "line_number": 54,
    "line": "        init_dir = os.path.dirname(pycryptodome_test_vectors.__file__)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\PublicKey\\test_RSA.py",
    "line_number": 45,
    "line": "    # TODO: PyCrypto treats the message as starting *after* the leading \"00\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\PublicKey\\test_RSA.py",
    "line_number": 46,
    "line": "    # TODO: That behaviour should probably be changed in the future."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\SelfTest\\Signature\\test_pkcs1_15.py",
    "line_number": 47,
    "line": "from Crypto.Util._file_system import pycryptodome_filename"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\number.py",
    "line_number": 360,
    "line": "\t\t# TODO: maybe we shouldn't abort but rather start over."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\strxor.py",
    "line_number": 31,
    "line": "from Crypto.Util._raw_api import (load_pycryptodome_raw_lib, c_size_t,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\strxor.py",
    "line_number": 35,
    "line": "_raw_strxor = load_pycryptodome_raw_lib("
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\_cpu_features.py",
    "line_number": 31,
    "line": "from Crypto.Util._raw_api import load_pycryptodome_raw_lib"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\_cpu_features.py",
    "line_number": 34,
    "line": "_raw_cpuid_lib = load_pycryptodome_raw_lib(\"Crypto.Util._cpuid_c\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\_file_system.py",
    "line_number": 34,
    "line": "def pycryptodome_filename(dir_comps, filename):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\_file_system.py",
    "line_number": 38,
    "line": "        The list of directory names in the PyCryptodome package."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\_raw_api.py",
    "line_number": 35,
    "line": "from Crypto.Util._file_system import pycryptodome_filename"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\_raw_api.py",
    "line_number": 75,
    "line": "    # See https://github.com/Legrandin/pycryptodome/issues/228"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\_raw_api.py",
    "line_number": 102,
    "line": "        if hasattr(ffi, \"RTLD_DEEPBIND\") and not os.getenv('PYCRYPTODOME_DISABLE_DEEPBIND'):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\_raw_api.py",
    "line_number": 293,
    "line": "def load_pycryptodome_raw_lib(name, cdecl):"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\_raw_api.py",
    "line_number": 296,
    "line": "    @name,  the name of the library expressed as a PyCryptodome module,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\Crypto\\Util\\_raw_api.py",
    "line_number": 308,
    "line": "            full_name = pycryptodome_filename(dir_comps, filename)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\cryptography\\hazmat\\primitives\\padding.py",
    "line_number": 142,
    "line": "        # TODO: more copies than necessary, we should use zero-buffer (#193)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\cryptography\\hazmat\\primitives\\padding.py",
    "line_number": 167,
    "line": "        # TODO: more copies than necessary, we should use zero-buffer (#193)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\cryptography\\hazmat\\primitives\\asymmetric\\rsa.py",
    "line_number": 209,
    "line": "    # TODO: Replace with lcm(p - 1, q - 1) once the minimum"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\cryptography\\x509\\name.py",
    "line_number": 345,
    "line": "        # TODO: this is relatively expensive, if this looks like a bottleneck"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
    "line_number": 279,
    "line": "                # TODO: use DirectUrl.equivalent when"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
    "line_number": 203,
    "line": "        # TODO: Try to get these passing down from the command?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\inspect.py",
    "line_number": 60,
    "line": "            # TODO tags? scheme?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\index\\collector.py",
    "line_number": 344,
    "line": "        # TODO: In the future, it would be nice if pip supported PEP 691"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 37,
    "line": "from pip._internal.utils.compat import stdlib_pkgs  # TODO: Move definition here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 167,
    "line": "        # TODO: this property is relatively costly to compute, memoize it ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 177,
    "line": "                # TODO: get project location from second line of egg_link file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\models\\installation_report.py",
    "line_number": 50,
    "line": "            # TODO: currently, the resolver uses the default environment to evaluate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\models\\selection_prefs.py",
    "line_number": 6,
    "line": "# TODO: This needs Python 3.10's improved slots support for dataclasses"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
    "line_number": 174,
    "line": "        # TODO: Get range requests to be correctly cached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 552,
    "line": "        # TODO: separate this part out from RequirementPreparer when the v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
    "line_number": 285,
    "line": "        # TODO: The is_installable_dir test here might not be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 107,
    "line": "    # TODO: replace this with slots=True when dropping Python 3.9 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 526,
    "line": "    # TODO: handle space after '\\'."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
    "line_number": 75,
    "line": "        TODO remove this property together with the legacy resolver, since the new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 227,
    "line": "        # TODO performance: this means we iterate the dependencies at least twice,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 360,
    "line": "        # TODO: Supply reason based on force_reinstall and upgrade_strategy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 201,
    "line": "        # TODO: Check already installed candidate, and use it if the link and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 622,
    "line": "        # TODO: Are there more cases this needs to return True? Editable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
    "line_number": 38,
    "line": "    # TODO: Remove this block after dropping Python 3.8 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
    "line_number": 226,
    "line": "        # TODO: There is an assumption that the result will be a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py",
    "line_number": 67,
    "line": "        # TODO: Add some logging here..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1278,
    "line": "    todo = graph.reverse_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1280,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1281,
    "line": "        d = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1285,
    "line": "                todo.append(succ)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1305,
    "line": "    todo = graph.adjacency_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1306,
    "line": "    seen = set(t[0] for t in todo)  # already added to todo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1308,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1309,
    "line": "        d = todo.pop()[0]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1316,
    "line": "                todo.append(pred)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 760,
    "line": "        XXX TODO Note: this cache is never actually cleared. It's assumed that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 922,
    "line": "                # TODO SHA256 digest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1237,
    "line": "        todo = set([dist])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1239,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1240,
    "line": "            dist = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1274,
    "line": "                            todo.add(provider)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 239,
    "line": "    # TODO document the mapping API and UNKNOWN default key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 560,
    "line": "    # TODO could add iter* variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 984,
    "line": "        # TODO: any other fields wanted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 190,
    "line": "            todo = [resource]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 191,
    "line": "            while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 192,
    "line": "                resource = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 203,
    "line": "                            todo.append(child)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 401,
    "line": "        # TODO check k, v for valid values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1131,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1133,
    "line": "        todo.append(final)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1134,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1135,
    "line": "            step = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1149,
    "line": "                todo.extend(preds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 267,
    "line": "        TODO: fill this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 516,
    "line": "    # TODO: unintended side-effect on, e.g., \"2003.05.09\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
    "line_number": 839,
    "line": "            # TODO version verification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 499,
    "line": "        # TODO should we eliminate the recursion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 503,
    "line": "                    # TODO check whether we need to call `list_hook`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 511,
    "line": "            # TODO is the interaction between `list_hook` and `use_list` ok?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 516,
    "line": "                    # TODO check whether we need to call hooks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 204,
    "line": "        # TODO: The spec doesn't say anything about if the keys should be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 806,
    "line": "    description: _Validator[str | None] = _Validator()  # TODO 2.1: can be in body"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 29,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 32,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
    "line_number": 378,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 1,
    "line": "# TODO: Add Generic type annotations to initialized collections."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 122,
    "line": "_ResourceStream = Any  # TODO / Incomplete: A readable file-like object"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3308,
    "line": "            # TODO: remove this except clause when python/cpython#103632 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3598,
    "line": "        # TODO: Add a deadline?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
    "line_number": 863,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
    "line_number": 547,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\latex.py",
    "line_number": 334,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\python.py",
    "line_number": 713,
    "line": "        # different tokens.  TODO: DelegatingLexer should support this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\_mapping.py",
    "line_number": 524,
    "line": "    'TodotxtLexer': ('pip._vendor.pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py",
    "line_number": 686,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\text.py",
    "line_number": 562,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\truststore\\_macos.py",
    "line_number": 558,
    "line": "            # TODO: Not sure if we need the SecTrustResultType for anything?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
    "line_number": 199,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py",
    "line_number": 522,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py",
    "line_number": 289,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 659,
    "line": "        # TODO: should I do clean shutdown here? Do I have to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 819,
    "line": "        # TODO: Well, crap."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 829,
    "line": "        # TODO: Update in line with above."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 31,
    "line": "# TODO: In v2 we can remove this sentinel and metaclass with deprecated options."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 261,
    "line": "        # TODO: Deprecated, remove in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 323,
    "line": "        # TODO: If already given in **kw we use what's given to us"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 454,
    "line": "        # TODO: For now favor if the Retry implementation sets its own method_whitelist"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 608,
    "line": "            # TODO: Remove this deprecated alias in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
    "line_number": 402,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 158,
    "line": "        # TODO: Replace with `raise ValueError(\"newlines not allowed\")`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\__init__.py",
    "line_number": 179,
    "line": "           TODO: This method seems to be similar to the one in ``distutils.cmd``"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\command\\dist_info.py",
    "line_number": 103,
    "line": "        # TODO: if bdist_wheel if merged into setuptools, just add \"keep_egg_info\" there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1123,
    "line": "        extras = ''  # TODO: self.report_extras(req, dist)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1722,
    "line": "    # TODO: This code doesn't make sense. What is it trying to do?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 69,
    "line": "    COMPAT = \"compat\"  # TODO: Remove `compat` after Dec/2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 279,
    "line": "        # TODO: Once plugins/customisations had the chance to catch up, replace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\command\\install_lib.py",
    "line_number": 54,
    "line": "        # TODO: is it necessary to short-circuit here? i.e. what's the cost"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 106,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 128,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 131,
    "line": "        # TODO: After the previous statement is removed the try/except can be replaced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 369,
    "line": "                # TODO: Don't set field when support for pyproject.toml stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
    "line_number": 96,
    "line": "    # TODO: Set fields back to `None` once the feature stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 33,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 41,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must be object\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 46,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must contain ['requires'] properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 71,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path must be array\", value=data__buildsystem__backendpath, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path\", definition={'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 77,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \" must be string\", value=data__buildsystem__backendpath_item, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \"\", definition={'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 79,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must not contain \"+str(data__buildsystem_keys)+\" properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 88,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".tool must be object\", value=data__tool, name=\"\" + (name_prefix or \"data\") + \".tool\", definition={'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 101,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 106,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 158,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".script-files must be array\", value=data__scriptfiles, name=\"\" + (name_prefix or \"data\") + \".script-files\", definition={'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 360,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".py-modules must be array\", value=data__pymodules, name=\"\" + (name_prefix or \"data\") + \".py-modules\", definition={'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 411,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".license-files must be array\", value=data__licensefiles, name=\"\" + (name_prefix or \"data\") + \".license-files\", definition={'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 517,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 635,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 654,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 659,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must contain ['name'] properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 695,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be object\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 733,
    "line": "                            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must contain ['content-type'] properties\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 739,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme.content-type must be string\", value=data__readme__contenttype, name=\"\" + (name_prefix or \"data\") + \".readme.content-type\", definition={'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 743,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be valid exactly by one definition\" + (\" (\" + str(data__readme_one_of_count8) + \" matches found)\"), value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, rule='oneOf')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 940,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\read-secrets\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\cryptography\\hazmat\\primitives\\padding.py",
    "line_number": 142,
    "line": "        # TODO: more copies than necessary, we should use zero-buffer (#193)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\cryptography\\hazmat\\primitives\\padding.py",
    "line_number": 167,
    "line": "        # TODO: more copies than necessary, we should use zero-buffer (#193)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\cryptography\\hazmat\\primitives\\asymmetric\\rsa.py",
    "line_number": 209,
    "line": "    # TODO: Replace with lcm(p - 1, q - 1) once the minimum"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\cryptography\\x509\\name.py",
    "line_number": 345,
    "line": "        # TODO: this is relatively expensive, if this looks like a bottleneck"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
    "line_number": 279,
    "line": "                # TODO: use DirectUrl.equivalent when"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
    "line_number": 203,
    "line": "        # TODO: Try to get these passing down from the command?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\inspect.py",
    "line_number": 60,
    "line": "            # TODO tags? scheme?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\index\\collector.py",
    "line_number": 344,
    "line": "        # TODO: In the future, it would be nice if pip supported PEP 691"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 37,
    "line": "from pip._internal.utils.compat import stdlib_pkgs  # TODO: Move definition here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 167,
    "line": "        # TODO: this property is relatively costly to compute, memoize it ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 177,
    "line": "                # TODO: get project location from second line of egg_link file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\models\\installation_report.py",
    "line_number": 50,
    "line": "            # TODO: currently, the resolver uses the default environment to evaluate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\models\\selection_prefs.py",
    "line_number": 6,
    "line": "# TODO: This needs Python 3.10's improved slots support for dataclasses"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
    "line_number": 174,
    "line": "        # TODO: Get range requests to be correctly cached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 552,
    "line": "        # TODO: separate this part out from RequirementPreparer when the v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
    "line_number": 285,
    "line": "        # TODO: The is_installable_dir test here might not be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 107,
    "line": "    # TODO: replace this with slots=True when dropping Python 3.9 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 526,
    "line": "    # TODO: handle space after '\\'."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
    "line_number": 75,
    "line": "        TODO remove this property together with the legacy resolver, since the new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 227,
    "line": "        # TODO performance: this means we iterate the dependencies at least twice,"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 360,
    "line": "        # TODO: Supply reason based on force_reinstall and upgrade_strategy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 201,
    "line": "        # TODO: Check already installed candidate, and use it if the link and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 622,
    "line": "        # TODO: Are there more cases this needs to return True? Editable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
    "line_number": 38,
    "line": "    # TODO: Remove this block after dropping Python 3.8 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 948,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\typing_extensions.py",
    "line_number": 3123,
    "line": "                # TODO: Use inspect.VALUE here, and make the annotations lazily evaluated"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
    "line_number": 226,
    "line": "        # TODO: There is an assumption that the result will be a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py",
    "line_number": 67,
    "line": "        # TODO: Add some logging here..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1278,
    "line": "    todo = graph.reverse_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1280,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1281,
    "line": "        d = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1285,
    "line": "                todo.append(succ)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1305,
    "line": "    todo = graph.adjacency_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1306,
    "line": "    seen = set(t[0] for t in todo)  # already added to todo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1308,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1309,
    "line": "        d = todo.pop()[0]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1316,
    "line": "                todo.append(pred)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 760,
    "line": "        XXX TODO Note: this cache is never actually cleared. It's assumed that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 922,
    "line": "                # TODO SHA256 digest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1237,
    "line": "        todo = set([dist])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1239,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1240,
    "line": "            dist = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1274,
    "line": "                            todo.add(provider)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 239,
    "line": "    # TODO document the mapping API and UNKNOWN default key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 560,
    "line": "    # TODO could add iter* variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 984,
    "line": "        # TODO: any other fields wanted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 190,
    "line": "            todo = [resource]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 191,
    "line": "            while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 192,
    "line": "                resource = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 203,
    "line": "                            todo.append(child)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 401,
    "line": "        # TODO check k, v for valid values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1131,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1133,
    "line": "        todo.append(final)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1134,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1135,
    "line": "            step = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1149,
    "line": "                todo.extend(preds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 267,
    "line": "        TODO: fill this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 516,
    "line": "    # TODO: unintended side-effect on, e.g., \"2003.05.09\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
    "line_number": 839,
    "line": "            # TODO version verification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 499,
    "line": "        # TODO should we eliminate the recursion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 503,
    "line": "                    # TODO check whether we need to call `list_hook`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 511,
    "line": "            # TODO is the interaction between `list_hook` and `use_list` ok?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 516,
    "line": "                    # TODO check whether we need to call hooks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 204,
    "line": "        # TODO: The spec doesn't say anything about if the keys should be"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
    "line_number": 806,
    "line": "    description: _Validator[str | None] = _Validator()  # TODO 2.1: can be in body"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 29,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 32,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
    "line_number": 378,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 1,
    "line": "# TODO: Add Generic type annotations to initialized collections."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 122,
    "line": "_ResourceStream = Any  # TODO / Incomplete: A readable file-like object"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3308,
    "line": "            # TODO: remove this except clause when python/cpython#103632 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3598,
    "line": "        # TODO: Add a deadline?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
    "line_number": 863,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
    "line_number": 547,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\latex.py",
    "line_number": 334,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\python.py",
    "line_number": 713,
    "line": "        # different tokens.  TODO: DelegatingLexer should support this"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\_mapping.py",
    "line_number": 524,
    "line": "    'TodotxtLexer': ('pip._vendor.pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py",
    "line_number": 686,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\text.py",
    "line_number": 562,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\truststore\\_macos.py",
    "line_number": 558,
    "line": "            # TODO: Not sure if we need the SecTrustResultType for anything?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
    "line_number": 199,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py",
    "line_number": 522,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py",
    "line_number": 289,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 659,
    "line": "        # TODO: should I do clean shutdown here? Do I have to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 819,
    "line": "        # TODO: Well, crap."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 829,
    "line": "        # TODO: Update in line with above."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 31,
    "line": "# TODO: In v2 we can remove this sentinel and metaclass with deprecated options."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 261,
    "line": "        # TODO: Deprecated, remove in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 323,
    "line": "        # TODO: If already given in **kw we use what's given to us"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 454,
    "line": "        # TODO: For now favor if the Retry implementation sets its own method_whitelist"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 608,
    "line": "            # TODO: Remove this deprecated alias in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
    "line_number": 402,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 158,
    "line": "        # TODO: Replace with `raise ValueError(\"newlines not allowed\")`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\__init__.py",
    "line_number": 179,
    "line": "           TODO: This method seems to be similar to the one in ``distutils.cmd``"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\command\\dist_info.py",
    "line_number": 103,
    "line": "        # TODO: if bdist_wheel if merged into setuptools, just add \"keep_egg_info\" there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1123,
    "line": "        extras = ''  # TODO: self.report_extras(req, dist)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1722,
    "line": "    # TODO: This code doesn't make sense. What is it trying to do?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 69,
    "line": "    COMPAT = \"compat\"  # TODO: Remove `compat` after Dec/2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 279,
    "line": "        # TODO: Once plugins/customisations had the chance to catch up, replace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\command\\install_lib.py",
    "line_number": 54,
    "line": "        # TODO: is it necessary to short-circuit here? i.e. what's the cost"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 106,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 128,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 131,
    "line": "        # TODO: After the previous statement is removed the try/except can be replaced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 369,
    "line": "                # TODO: Don't set field when support for pyproject.toml stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
    "line_number": 96,
    "line": "    # TODO: Set fields back to `None` once the feature stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 33,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 41,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must be object\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 46,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must contain ['requires'] properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 71,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path must be array\", value=data__buildsystem__backendpath, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path\", definition={'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 77,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \" must be string\", value=data__buildsystem__backendpath_item, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \"\", definition={'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 79,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must not contain \"+str(data__buildsystem_keys)+\" properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 88,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".tool must be object\", value=data__tool, name=\"\" + (name_prefix or \"data\") + \".tool\", definition={'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 101,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 106,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 158,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".script-files must be array\", value=data__scriptfiles, name=\"\" + (name_prefix or \"data\") + \".script-files\", definition={'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 360,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".py-modules must be array\", value=data__pymodules, name=\"\" + (name_prefix or \"data\") + \".py-modules\", definition={'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 411,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".license-files must be array\", value=data__licensefiles, name=\"\" + (name_prefix or \"data\") + \".license-files\", definition={'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 517,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 635,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 654,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 659,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must contain ['name'] properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 695,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be object\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 733,
    "line": "                            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must contain ['content-type'] properties\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 739,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme.content-type must be string\", value=data__readme__contenttype, name=\"\" + (name_prefix or \"data\") + \".readme.content-type\", definition={'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 743,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be valid exactly by one definition\" + (\" (\" + str(data__readme_one_of_count8) + \" matches found)\"), value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, rule='oneOf')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 940,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\tests\\venv\\Lib\\site-packages\\wheel\\vendored\\packaging\\tags.py",
    "line_number": 317,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\app.py",
    "line_number": 9,
    "line": "            term=\"TODO\","
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\app.py",
    "line_number": 12,
    "line": "            output=\"todo_matches.json\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
    "line_number": 262,
    "line": "            # TODO: use DirectUrl.equivalent when https://github.com/pypa/pip/pull/10564"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
    "line_number": 134,
    "line": "        # TODO: Try to get these passing down from the command?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\inspect.py",
    "line_number": 60,
    "line": "            # TODO tags? scheme?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\index\\collector.py",
    "line_number": 356,
    "line": "        # TODO: In the future, it would be nice if pip supported PEP 691"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 37,
    "line": "from pip._internal.utils.compat import stdlib_pkgs  # TODO: Move definition here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 175,
    "line": "        # TODO: this property is relatively costly to compute, memoize it ?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
    "line_number": 185,
    "line": "                # TODO: get project location from second line of egg_link file"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\importlib\\_envs.py",
    "line_number": 177,
    "line": "                # _emit_egg_deprecation(dist.location)  # TODO: Enable this."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\models\\installation_report.py",
    "line_number": 47,
    "line": "            # TODO: currently, the resolver uses the default environment to evaluate"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
    "line_number": 174,
    "line": "        # TODO: Get range requests to be correctly cached"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 322,
    "line": "        # TODO: this check is now probably dead code"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
    "line_number": 541,
    "line": "        # TODO: separate this part out from RequirementPreparer when the v1"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
    "line_number": 264,
    "line": "        # TODO: The is_installable_dir test here might not be necessary"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
    "line_number": 489,
    "line": "    # TODO: handle space after '\\'."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
    "line_number": 75,
    "line": "        TODO remove this property together with the legacy resolver, since the new"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
    "line_number": 348,
    "line": "        # TODO: Supply reason based on force_reinstall and upgrade_strategy."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 174,
    "line": "        # TODO: Check already installed candidate, and use it if the link and"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
    "line_number": 547,
    "line": "        # TODO: Are there more cases this needs to return True? Editable?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
    "line_number": 33,
    "line": "    # TODO: Remove this block after dropping Python 3.8 support."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\subprocess.py",
    "line_number": 26,
    "line": "    # TODO: Remove `if TYPE_CHECKING` when dropping support for Python 3.7."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
    "line_number": 45,
    "line": "    # TODO: Remove `if TYPE_CHECKING` when dropping support for Python 3.7."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
    "line_number": 192,
    "line": "        # TODO: There is an assumption that the result will be a"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py",
    "line_number": 59,
    "line": "        # TODO: Add some logging here..."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\codingstatemachinedict.py",
    "line_number": 6,
    "line": "    # TODO: Remove the else block and TYPE_CHECKING check when dropping support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\resultdict.py",
    "line_number": 6,
    "line": "    # TODO: Remove the else block and TYPE_CHECKING check when dropping support"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcharsetprober.py",
    "line_number": 95,
    "line": "        # TODO: Make filter_international_words keep things in self.alphabet"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcsgroupprober.py",
    "line_number": 57,
    "line": "        # TODO: See if using ISO-8859-8 Hebrew model works better here, since"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcsgroupprober.py",
    "line_number": 63,
    "line": "        # TODO: ORDER MATTERS HERE. I changed the order vs what was in master"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\sbcsgroupprober.py",
    "line_number": 78,
    "line": "            # TODO: Restore Hungarian encodings (iso-8859-2 and windows-1250)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\universaldetector.py",
    "line_number": 194,
    "line": "                    # TODO: This encoding is not supported by Python. Should remove?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\universaldetector.py",
    "line_number": 202,
    "line": "                    # TODO: This encoding is not supported by Python. Should remove?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\metadata\\languages.py",
    "line_number": 11,
    "line": "# TODO: Add Ukrainian (KOI8-U)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1299,
    "line": "    todo = graph.reverse_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1301,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1302,
    "line": "        d = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1306,
    "line": "                todo.append(succ)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1326,
    "line": "    todo = graph.adjacency_list[dist]  # list of nodes we should inspect"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1327,
    "line": "    seen = set(t[0] for t in todo) # already added to todo"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1329,
    "line": "    while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1330,
    "line": "        d = todo.pop()[0]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
    "line_number": 1337,
    "line": "                todo.append(pred)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 766,
    "line": "        XXX TODO Note: this cache is never actually cleared. It's assumed that"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 929,
    "line": "                # TODO SHA256 digest"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1240,
    "line": "        todo = set([dist])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1242,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1243,
    "line": "            dist = todo.pop()"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
    "line_number": 1277,
    "line": "                            todo.add(provider)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 263,
    "line": "    # TODO document the mapping API and UNKNOWN default key"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 593,
    "line": "    # TODO could add iter* variants"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\metadata.py",
    "line_number": 1026,
    "line": "        # TODO: any other fields wanted"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 190,
    "line": "            todo = [resource]"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 191,
    "line": "            while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 192,
    "line": "                resource = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
    "line_number": 203,
    "line": "                            todo.append(child)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 402,
    "line": "        # TODO check k, v for valid values"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1114,
    "line": "        todo = []"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1116,
    "line": "        todo.append(final)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1117,
    "line": "        while todo:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1118,
    "line": "            step = todo.pop(0)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
    "line_number": 1132,
    "line": "                todo.extend(preds)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 259,
    "line": "        TODO: fill this out"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
    "line_number": 507,
    "line": "    #TODO: unintended side-effect on, e.g., \"2003.05.09\""
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
    "line_number": 838,
    "line": "            # TODO version verification"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 554,
    "line": "        # TODO should we eliminate the recursion?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 558,
    "line": "                    # TODO check whether we need to call `list_hook`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 566,
    "line": "            # TODO is the interaction between `list_hook` and `use_list` ok?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
    "line_number": 571,
    "line": "                    # TODO check whether we need to call hooks"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
    "line_number": 3050,
    "line": "            # TODO: remove this except clause when python/cpython#103632 is fixed."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
    "line_number": 783,
    "line": "    TODO: clean up the code here."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 72,
    "line": "       highlight ``XXX``, ``TODO``, ``FIXME``, ``BUG`` and ``NOTE``."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
    "line_number": 81,
    "line": "                            ['XXX', 'TODO', 'FIXME', 'BUG', 'NOTE'])"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
    "line_number": 511,
    "line": "            # TODO: make sure tab expansion happens earlier in the chain.  It"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\latex.py",
    "line_number": 337,
    "line": "        # TODO: add support for background colors"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\terminal256.py",
    "line_number": 17,
    "line": "# TODO:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\_mapping.py",
    "line_number": 498,
    "line": "    'TodotxtLexer': ('pip._vendor.pygments.lexers.textfmts', 'Todotxt', ('todotxt',), ('todo.txt', '*.todotxt'), ('text/x-todo',)),"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py",
    "line_number": 551,
    "line": "                # TODO: Remove this in 3.0.0: see #2811"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py",
    "line_number": 19,
    "line": "# TODO: response is the only one"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\cells.py",
    "line_number": 122,
    "line": "# TODO: This is inefficient"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\cells.py",
    "line_number": 123,
    "line": "# TODO: This might not work with CWJ type characters"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\text.py",
    "line_number": 542,
    "line": "        # TODO: This is a little inefficient, it is only used by full justify"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
    "line_number": 199,
    "line": "            # TODO: Fix tunnel so it doesn't depend on self.sock state."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py",
    "line_number": 509,
    "line": "        # TODO: Add optional support for socket.gethostbyname checking."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py",
    "line_number": 289,
    "line": "    # TODO(t-8ch): Stop inheriting from AssertionError in v2.0."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 660,
    "line": "        # TODO: should I do clean shutdown here? Do I have to?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 820,
    "line": "        # TODO: Well, crap."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
    "line_number": 830,
    "line": "        # TODO: Update in line with above."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 31,
    "line": "# TODO: In v2 we can remove this sentinel and metaclass with deprecated options."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 259,
    "line": "        # TODO: Deprecated, remove in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 321,
    "line": "        # TODO: If already given in **kw we use what's given to us"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 452,
    "line": "        # TODO: For now favor if the Retry implementation sets its own method_whitelist"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
    "line_number": 606,
    "line": "            # TODO: Remove this deprecated alias in v2.0"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
    "line_number": 402,
    "line": "    # TODO: Remove this when we break backwards compatibility."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\dist.py",
    "line_number": 158,
    "line": "        # TODO: Replace with `raise ValueError(\"newlines not allowed\")`"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\__init__.py",
    "line_number": 179,
    "line": "           TODO: This method seems to be similar to the one in ``distutils.cmd``"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\command\\dist_info.py",
    "line_number": 103,
    "line": "        # TODO: if bdist_wheel if merged into setuptools, just add \"keep_egg_info\" there"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1123,
    "line": "        extras = ''  # TODO: self.report_extras(req, dist)"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\command\\easy_install.py",
    "line_number": 1722,
    "line": "    # TODO: This code doesn't make sense. What is it trying to do?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 69,
    "line": "    COMPAT = \"compat\"  # TODO: Remove `compat` after Dec/2022."
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\command\\editable_wheel.py",
    "line_number": 279,
    "line": "        # TODO: Once plugins/customisations had the chance to catch up, replace"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\command\\install_lib.py",
    "line_number": 54,
    "line": "        # TODO: is it necessary to short-circuit here? i.e. what's the cost"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 106,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 128,
    "line": "        # TODO: Remove the following once the feature stabilizes:"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 131,
    "line": "        # TODO: After the previous statement is removed the try/except can be replaced"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\pyprojecttoml.py",
    "line_number": 369,
    "line": "                # TODO: Don't set field when support for pyproject.toml stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
    "line_number": 96,
    "line": "    # TODO: Set fields back to `None` once the feature stabilizes"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 33,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 41,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must be object\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 46,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must contain ['requires'] properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 71,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path must be array\", value=data__buildsystem__backendpath, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path\", definition={'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 77,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \" must be string\", value=data__buildsystem__backendpath_item, name=\"\" + (name_prefix or \"data\") + \".build-system.backend-path[{data__buildsystem__backendpath_x}]\".format(**locals()) + \"\", definition={'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 79,
    "line": "                    raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".build-system must not contain \"+str(data__buildsystem_keys)+\" properties\", value=data__buildsystem, name=\"\" + (name_prefix or \"data\") + \".build-system\", definition={'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 88,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".tool must be object\", value=data__tool, name=\"\" + (name_prefix or \"data\") + \".tool\", definition={'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 101,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-build-dependencies/', 'title': 'Data structure for ``pyproject.toml`` files', '$$description': ['File format containing build-time configurations for the Python ecosystem. ', ':pep:`517` initially defined a build-system independent format for source trees', 'which was complemented by :pep:`518` to provide a way of specifying dependencies ', 'for building Python projects.', 'Please notice the ``project`` table (as initially defined in  :pep:`621`) is not included', 'in this schema and should be considered separately.'], 'type': 'object', 'additionalProperties': False, 'properties': {'build-system': {'type': 'object', 'description': 'Table used to store build-related data', 'additionalProperties': False, 'properties': {'requires': {'type': 'array', '$$description': ['List of dependencies in the :pep:`508` format required to execute the build', 'system. Please notice that the resulting dependency graph', '**MUST NOT contain cycles**'], 'items': {'type': 'string'}}, 'build-backend': {'type': 'string', 'description': 'Python object that will be used to perform the build according to :pep:`517`', 'format': 'pep517-backend-reference'}, 'backend-path': {'type': 'array', '$$description': ['List of directories to be prepended to ``sys.path`` when loading the', 'back-end, and running its hooks'], 'items': {'type': 'string', '$comment': 'Should be a path (TODO: enforce it with format?)'}}}, 'required': ['requires']}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, 'tool': {'type': 'object', 'properties': {'distutils': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, 'setuptools': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$ref': '#/definitions/find-directive'}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'$ref': '#/definitions/attr-directive'}, {'$ref': '#/definitions/file-directive'}]}, 'classifiers': {'$ref': '#/definitions/file-directive'}, 'description': {'$ref': '#/definitions/file-directive'}, 'dependencies': {'$ref': '#/definitions/file-directive'}, 'entry-points': {'$ref': '#/definitions/file-directive'}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$ref': '#/definitions/file-directive'}}}, 'readme': {'anyOf': [{'$ref': '#/definitions/file-directive'}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}}}}, 'project': {'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$ref': '#/definitions/author'}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create command-line wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.']}, 'gui-scripts': {'$ref': '#/definitions/entry-point-group', '$$description': ['Instruct the installer to create GUI wrappers for the given', '`entry points <https://packaging.python.org/specifications/entry-points/>`_.', 'The difference between ``scripts`` and ``gui-scripts`` is only relevant in', 'Windows.']}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$ref': '#/definitions/entry-point-group'}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$ref': '#/definitions/dependency'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$ref': '#/definitions/dependency'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 106,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 158,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".script-files must be array\", value=data__scriptfiles, name=\"\" + (name_prefix or \"data\") + \".script-files\", definition={'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 360,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".py-modules must be array\", value=data__pymodules, name=\"\" + (name_prefix or \"data\") + \".py-modules\", definition={'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 411,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".license-files must be array\", value=data__licensefiles, name=\"\" + (name_prefix or \"data\") + \".license-files\", definition={'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 517,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://setuptools.pypa.io/en/latest/references/keywords.html', 'title': '``tool.setuptools`` table', '$$description': ['Please notice for the time being the ``setuptools`` project does not specify', 'a way of configuring builds via ``pyproject.toml``.', 'Therefore this schema should be taken just as a *\"thought experiment\"* on how', 'this *might be done*, by following the principles established in', '`ini2toml <https://ini2toml.readthedocs.io/en/latest/setuptools_pep621.html>`_.', 'It considers only ``setuptools`` `parameters', '<https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_', 'that can currently be configured via ``setup.cfg`` and are not covered by :pep:`621`', 'but intentionally excludes ``dependency_links`` and ``setup_requires``.', 'NOTE: ``scripts`` was renamed to ``script-files`` to avoid confusion with', 'entry-point based scripts (defined in :pep:`621`).'], 'type': 'object', 'additionalProperties': False, 'properties': {'platforms': {'type': 'array', 'items': {'type': 'string'}}, 'provides': {'$$description': ['Package and virtual package names contained within this package', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'obsoletes': {'$$description': ['Packages which this package renders obsolete', '**(not supported by pip)**'], 'type': 'array', 'items': {'type': 'string', 'format': 'pep508-identifier'}}, 'zip-safe': {'description': 'Whether the project can be safely installed and run from a zip file.', 'type': 'boolean'}, 'script-files': {'description': 'Legacy way of defining scripts (entry-points are preferred).', 'type': 'array', 'items': {'type': 'string'}, '$comment': 'TODO: is this field deprecated/should be removed?'}, 'eager-resources': {'$$description': ['Resources that should be extracted together, if any of them is needed,', 'or if any C extensions included in the project are imported.'], 'type': 'array', 'items': {'type': 'string'}}, 'packages': {'$$description': ['Packages that should be included in the distribution.', 'It can be given either as a list of package identifiers', 'or as a ``dict``-like structure with a single key ``find``', 'which corresponds to a dynamic call to', '``setuptools.config.expand.find_packages`` function.', 'The ``find`` key is associated with a nested ``dict``-like structure that can', 'contain ``where``, ``include``, ``exclude`` and ``namespaces`` keys,', 'mimicking the keyword arguments of the associated function.'], 'oneOf': [{'title': 'Array of Python package identifiers', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}}, {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}]}, 'package-dir': {'$$description': [':class:`dict`-like structure mapping from package names to directories where their', 'code can be found.', 'The empty string (as key) means that all packages are contained inside', 'the given directory will be included in the distribution.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': ''}]}, 'patternProperties': {'^.*$': {'type': 'string'}}}, 'package-data': {'$$description': ['Mapping from package names to lists of glob patterns.', 'Usually this option is not needed when using ``include-package-data = true``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'include-package-data': {'$$description': ['Automatically include any data files inside the package directories', 'that are specified by ``MANIFEST.in``', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'boolean'}, 'exclude-package-data': {'$$description': ['Mapping from package names to lists of glob patterns that should be excluded', 'For more information on how to include data files, check ``setuptools`` `docs', '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_.'], 'type': 'object', 'additionalProperties': False, 'propertyNames': {'oneOf': [{'format': 'python-module-name'}, {'const': '*'}]}, 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'namespace-packages': {'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'https://setuptools.pypa.io/en/latest/userguide/package_discovery.html'}, 'py-modules': {'description': 'Modules that setuptools will manipulate', 'type': 'array', 'items': {'type': 'string', 'format': 'python-module-name'}, '$comment': 'TODO: clarify the relationship with ``packages``'}, 'data-files': {'$$description': ['**DEPRECATED**: dict-like structure where each key represents a directory and', 'the value is a list of glob patterns that should be installed in them.', \"Please notice this don't work with wheels. See `data files support\", '<https://setuptools.pypa.io/en/latest/userguide/datafiles.html>`_'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'array', 'items': {'type': 'string'}}}}, 'cmdclass': {'$$description': ['Mapping of distutils-style command names to ``setuptools.Command`` subclasses', 'which in turn should be represented by strings with a qualified class name', '(i.e., \"dotted\" form with module), e.g.::\\n\\n', '    cmdclass = {mycmd = \"pkg.subpkg.module.CommandClass\"}\\n\\n', 'The command class should be a directly defined at the top-level of the', 'containing module (no class nesting).'], 'type': 'object', 'patternProperties': {'^.*$': {'type': 'string', 'format': 'python-qualified-identifier'}}}, 'license-files': {'type': 'array', 'items': {'type': 'string'}, '$$description': ['PROVISIONAL: List of glob patterns for all license files being distributed.', '(might become standard with PEP 639).'], 'default': ['LICEN[CS]E*', ' COPYING*', ' NOTICE*', 'AUTHORS*'], '$comment': 'TODO: revise if PEP 639 is accepted. Probably ``project.license-files``?'}, 'dynamic': {'type': 'object', 'description': 'Instructions for loading :pep:`621`-related metadata dynamically', 'additionalProperties': False, 'properties': {'version': {'$$description': ['A version dynamically loaded via either the ``attr:`` or ``file:``', 'directives. Please make sure the given file or attribute respects :pep:`440`.'], 'oneOf': [{'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}]}, 'classifiers': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'description': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'dependencies': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'entry-points': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'optional-dependencies': {'type': 'object', 'propertyNames': {'format': 'python-identifier'}, 'additionalProperties': False, 'patternProperties': {'.+': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}}}, 'readme': {'anyOf': [{'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, {'properties': {'content-type': {'type': 'string'}}}], 'required': ['file']}}}}, 'definitions': {'file-directive': {'$id': '#/definitions/file-directive', 'title': \"'file:' directive\", 'description': 'Value is read from a file (or list of files and then concatenated)', 'type': 'object', 'additionalProperties': False, 'properties': {'file': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}}]}}, 'required': ['file']}, 'attr-directive': {'title': \"'attr:' directive\", '$id': '#/definitions/attr-directive', '$$description': ['Value is read from a module attribute. Supports callables and iterables;', 'unsupported types are cast via ``str()``'], 'type': 'object', 'additionalProperties': False, 'properties': {'attr': {'type': 'string'}}, 'required': ['attr']}, 'find-directive': {'$id': '#/definitions/find-directive', 'title': \"'find:' directive\", 'type': 'object', 'additionalProperties': False, 'properties': {'find': {'type': 'object', '$$description': ['Dynamic `package discovery', '<https://setuptools.pypa.io/en/latest/userguide/package_discovery.html>`_.'], 'additionalProperties': False, 'properties': {'where': {'description': 'Directories to be searched for packages (Unix-style relative path)', 'type': 'array', 'items': {'type': 'string'}}, 'exclude': {'type': 'array', '$$description': ['Exclude packages that match the values listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'include': {'type': 'array', '$$description': ['Restrict the found packages to just the ones listed in this field.', \"Can container shell-style wildcards (e.g. ``'pkg.*'``)\"], 'items': {'type': 'string'}}, 'namespaces': {'type': 'boolean', '$$description': ['When ``True``, directories without a ``__init__.py`` file will also', 'be scanned for :pep:`420`-style implicit namespaces']}}}}}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 635,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://docs.python.org/3/install/', 'title': '``tool.distutils`` table', '$$description': ['Originally, ``distutils`` allowed developers to configure arguments for', '``setup.py`` scripts via `distutils configuration files', '<https://docs.python.org/3/install/#distutils-configuration-files>`_.', '``tool.distutils`` subtables could be used with the same purpose', '(NOT CURRENTLY IMPLEMENTED).'], 'type': 'object', 'properties': {'global': {'type': 'object', 'description': 'Global options applied to all ``distutils`` commands'}}, 'patternProperties': {'.+': {'type': 'object'}}, '$comment': 'TODO: Is there a practical way of making this schema more specific?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 654,
    "line": "        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must be object\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 659,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must contain ['name'] properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 695,
    "line": "                        raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be object\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 733,
    "line": "                            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must contain ['content-type'] properties\", value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}, rule='required')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 739,
    "line": "                                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme.content-type must be string\", value=data__readme__contenttype, name=\"\" + (name_prefix or \"data\") + \".readme.content-type\", definition={'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}, rule='type')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 743,
    "line": "                raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \".readme must be valid exactly by one definition\" + (\" (\" + str(data__readme_one_of_count8) + \" matches found)\"), value=data__readme, name=\"\" + (name_prefix or \"data\") + \".readme\", definition={'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, rule='oneOf')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\config\\_validate_pyproject\\fastjsonschema_validations.py",
    "line_number": 940,
    "line": "            raise JsonSchemaValueException(\"\" + (name_prefix or \"data\") + \" must not contain \"+str(data_keys)+\" properties\", value=data, name=\"\" + (name_prefix or \"data\") + \"\", definition={'$schema': 'http://json-schema.org/draft-07/schema', '$id': 'https://packaging.python.org/en/latest/specifications/declaring-project-metadata/', 'title': 'Package metadata stored in the ``project`` table', '$$description': ['Data structure for the **project** table inside ``pyproject.toml``', '(as initially defined in :pep:`621`)'], 'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name (primary identifier) of the project. MUST be statically defined.', 'format': 'pep508-identifier'}, 'version': {'type': 'string', 'description': 'The version of the project as supported by :pep:`440`.', 'format': 'pep440'}, 'description': {'type': 'string', '$$description': ['The `summary description of the project', '<https://packaging.python.org/specifications/core-metadata/#summary>`_']}, 'readme': {'$$description': ['`Full/detailed description of the project in the form of a README', '<https://www.python.org/dev/peps/pep-0621/#readme>`_', \"with meaning similar to the one defined in `core metadata's Description\", '<https://packaging.python.org/specifications/core-metadata/#description>`_'], 'oneOf': [{'type': 'string', '$$description': ['Relative path to a text file (UTF-8) containing the full description', 'of the project. If the file path ends in case-insensitive ``.md`` or', '``.rst`` suffixes, then the content-type is respectively', '``text/markdown`` or ``text/x-rst``']}, {'type': 'object', 'allOf': [{'anyOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to a text file containing the full description', 'of the project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', 'description': 'Full text describing the project.'}}, 'required': ['text']}]}, {'properties': {'content-type': {'type': 'string', '$$description': ['Content-type (:rfc:`1341`) of the full description', '(e.g. ``text/markdown``). The ``charset`` parameter is assumed', 'UTF-8 when not present.'], '$comment': 'TODO: add regex pattern or format?'}}, 'required': ['content-type']}]}]}, 'requires-python': {'type': 'string', 'format': 'pep508-versionspec', '$$description': ['`The Python version requirements of the project', '<https://packaging.python.org/specifications/core-metadata/#requires-python>`_.']}, 'license': {'description': '`Project license <https://www.python.org/dev/peps/pep-0621/#license>`_.', 'oneOf': [{'properties': {'file': {'type': 'string', '$$description': ['Relative path to the file (UTF-8) which contains the license for the', 'project.']}}, 'required': ['file']}, {'properties': {'text': {'type': 'string', '$$description': ['The license of the project whose meaning is that of the', '`License field from the core metadata', '<https://packaging.python.org/specifications/core-metadata/#license>`_.']}}, 'required': ['text']}]}, 'authors': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'authors' of the project.\", 'The exact meaning is open to interpretation (e.g. original or primary authors,', 'current maintainers, or owners of the package).']}, 'maintainers': {'type': 'array', 'items': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, '$$description': [\"The people or organizations considered to be the 'maintainers' of the project.\", 'Similarly to ``authors``, the exact meaning is open to interpretation.']}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'description': 'List of keywords to assist searching for the distribution in a larger catalog.'}, 'classifiers': {'type': 'array', 'items': {'type': 'string', 'format': 'trove-classifier', 'description': '`PyPI classifier <https://pypi.org/classifiers/>`_.'}, '$$description': ['`Trove classifiers <https://pypi.org/classifiers/>`_', 'which apply to the project.']}, 'urls': {'type': 'object', 'description': 'URLs associated with the project in the form ``label => value``.', 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', 'format': 'url'}}}, 'scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'gui-scripts': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'entry-points': {'$$description': ['Instruct the installer to expose the given modules/functions via', '``entry-point`` discovery mechanism (useful for plugins).', 'More information available in the `Python packaging guide', '<https://packaging.python.org/specifications/entry-points/>`_.'], 'propertyNames': {'format': 'python-entrypoint-group'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}}}, 'dependencies': {'type': 'array', 'description': 'Project (mandatory) dependencies.', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}, 'optional-dependencies': {'type': 'object', 'description': 'Optional dependency for the project', 'propertyNames': {'format': 'pep508-identifier'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'array', 'items': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}}, 'dynamic': {'type': 'array', '$$description': ['Specifies which fields are intentionally unspecified and expected to be', 'dynamically provided by build tools'], 'items': {'enum': ['version', 'description', 'readme', 'requires-python', 'license', 'authors', 'maintainers', 'keywords', 'classifiers', 'urls', 'scripts', 'gui-scripts', 'entry-points', 'dependencies', 'optional-dependencies']}}}, 'required': ['name'], 'additionalProperties': False, 'if': {'not': {'required': ['dynamic'], 'properties': {'dynamic': {'contains': {'const': 'version'}, '$$description': ['version is listed in ``dynamic``']}}}, '$$comment': ['According to :pep:`621`:', '    If the core metadata specification lists a field as \"Required\", then', '    the metadata MUST specify the field statically or list it in dynamic', 'In turn, `core metadata`_ defines:', '    The required fields are: Metadata-Version, Name, Version.', '    All the other fields are optional.', 'Since ``Metadata-Version`` is defined by the build back-end, ``name`` and', '``version`` are the only mandatory information in ``pyproject.toml``.', '.. _core metadata: https://packaging.python.org/specifications/core-metadata/']}, 'then': {'required': ['version'], '$$description': ['version should be statically defined in the ``version`` field']}, 'definitions': {'author': {'$id': '#/definitions/author', 'title': 'Author or Maintainer', '$comment': 'https://www.python.org/dev/peps/pep-0621/#authors-maintainers', 'type': 'object', 'properties': {'name': {'type': 'string', '$$description': ['MUST be a valid email name, i.e. whatever can be put as a name, before an', 'email, in :rfc:`822`.']}, 'email': {'type': 'string', 'format': 'idn-email', 'description': 'MUST be a valid email address'}}}, 'entry-point-group': {'$id': '#/definitions/entry-point-group', 'title': 'Entry-points', 'type': 'object', '$$description': ['Entry-points are grouped together to indicate what sort of capabilities they', 'provide.', 'See the `packaging guides', '<https://packaging.python.org/specifications/entry-points/>`_', 'and `setuptools docs', '<https://setuptools.pypa.io/en/latest/userguide/entry_point.html>`_', 'for more information.'], 'propertyNames': {'format': 'python-entrypoint-name'}, 'additionalProperties': False, 'patternProperties': {'^.+$': {'type': 'string', '$$description': ['Reference to a Python object. It is either in the form', '``importable.module``, or ``importable.module:object.attr``.'], 'format': 'python-entrypoint-reference', '$comment': 'https://packaging.python.org/specifications/entry-points/'}}}, 'dependency': {'$id': '#/definitions/dependency', 'title': 'Dependency', 'type': 'string', 'description': 'Project dependency specification according to PEP 508', 'format': 'pep508'}}}, rule='additionalProperties')"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 95,
    "line": "    # TODO: Can we test whether something is contained within a requirement?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\requirements.py",
    "line_number": 98,
    "line": "    # TODO: Can we normalize the name and extra name?"
  },
  {
    "file_path": "C:\\Users\\sergioy\\python\\TextSearch\\venv\\Lib\\site-packages\\setuptools\\_vendor\\packaging\\tags.py",
    "line_number": 326,
    "line": "        # TODO: Need to care about 32-bit PPC for ppc64 through 10.2?"
  }
]